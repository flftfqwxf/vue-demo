{"version":3,"sources":["webpack:///app.dd0312d19792b14263de.js","webpack:///webpack/bootstrap c8c66f9daef3ae0ac1b5","webpack:///E:/wk11/static/oldVersion/mvvm/supplier/src/main.js","webpack:///./~/vue-resource/src/util.js","webpack:///./~/vue-resource/src/promise.js","webpack:///E:/wk11/static/oldVersion/mvvm/supplier/src/vuex/actions.js","webpack:///E:/wk11/static/oldVersion/mvvm/supplier/src/vuex/mutation-types.js","webpack:///./~/vue/dist/vue.js","webpack:///./~/babel-runtime/helpers/defineProperty.js","webpack:///./~/vuex/dist/vuex.js","webpack:///Main.vue","webpack:///Silder.vue","webpack:///top.vue","webpack:///index.vue","webpack:///E:/wk11/static/oldVersion/mvvm/supplier/src/router.js","webpack:///E:/wk11/static/oldVersion/mvvm/supplier/src/vuex/modules/breadcrumb.js","webpack:///E:/wk11/static/oldVersion/mvvm/supplier/src/vuex/modules/nav.js","webpack:///E:/wk11/static/oldVersion/mvvm/supplier/src/vuex/store.js","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/babel-runtime/~/core-js/library/fn/object/define-property.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.js","webpack:///./oldVersion/mvvm/supplier/src/components/container/Main.vue?7a9d","webpack:///./oldVersion/mvvm/supplier/src/components/navs/Silder.vue?7f0e","webpack:///./oldVersion/mvvm/supplier/src/components/navs/breadcrumb.vue?8200","webpack:///./oldVersion/mvvm/supplier/src/components/navs/top.vue?b3dc","webpack:///./oldVersion/mvvm/supplier/src/index.vue?d95f","webpack:///./oldVersion/mvvm/supplier/src/components/container/Main.vue","webpack:///./oldVersion/mvvm/supplier/src/components/navs/Silder.vue","webpack:///./oldVersion/mvvm/supplier/src/components/navs/breadcrumb.vue","webpack:///./oldVersion/mvvm/supplier/src/components/navs/top.vue","webpack:///./oldVersion/mvvm/supplier/src/index.vue","webpack:///./~/vue-resource/src/http/before.js","webpack:///./~/vue-resource/src/http/client/index.js","webpack:///./~/vue-resource/src/http/client/jsonp.js","webpack:///./~/vue-resource/src/http/client/xdr.js","webpack:///./~/vue-resource/src/http/client/xhr.js","webpack:///./~/vue-resource/src/http/cors.js","webpack:///./~/vue-resource/src/http/header.js","webpack:///./~/vue-resource/src/http/index.js","webpack:///./~/vue-resource/src/http/interceptor.js","webpack:///./~/vue-resource/src/http/jsonp.js","webpack:///./~/vue-resource/src/http/method.js","webpack:///./~/vue-resource/src/http/mime.js","webpack:///./~/vue-resource/src/http/timeout.js","webpack:///./~/vue-resource/src/index.js","webpack:///./~/vue-resource/src/lib/promise.js","webpack:///./~/vue-resource/src/lib/url-template.js","webpack:///./~/vue-resource/src/resource.js","webpack:///./~/vue-resource/src/url/index.js","webpack:///./~/vue-resource/src/url/legacy.js","webpack:///./~/vue-resource/src/url/query.js","webpack:///./~/vue-resource/src/url/root.js","webpack:///./~/vue-resource/src/url/template.js","webpack:///./~/vue-router/dist/vue-router.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","shift",0,"e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","1","2","appendChild","m","c","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vuex","_vuex2","_vueRouter","_vueRouter2","_vueResource","_vueResource2","_index","_index2","_router","_router2","use","http","interceptors","request","_request","response","_response","status","alert","location","href","router","history","App","extend","start","merge","target","source","deep","key","_","isPlainObject","isArray","array","console","warn","msg","warning","config","silent","debug","error","trim","str","replace","toLower","toLowerCase","Array","isString","val","isFunction","isObject","Object","getPrototypeOf","prototype","options","fn","bind","$vm","$options","each","iterator","hasOwnProperty","defaults","args","slice","arguments","forEach","arg","Promise","executor","context","PromiseObj","this","promise","all","iterable","resolve","value","reject","reason","race","then","fulfilled","rejected","success","data","always","cb","_interopRequireWildcard","newObj","defineProperty","loadBreadCrumb","loadNavList","_mutationTypes","types","_ref","dispatch","$http","get","res","ok","LOAD_NAV_LIST","navList","_ref2","url","LOAD_BREADCRUMB","breadcrumb","GET_TBLIST","global","factory","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","test","isReserved","charCodeAt","_toString","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","camelize","camelizeRE","toUpper","toUpperCase","hyphenate","hyphenateRE","classify","classifyRE","bind$1","ctx","l","toArray","list","ret","to","from","keys","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","timestamp","result","later","last","Date","now","setTimeout","indexOf","arr","cancellable","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","tail","_keymap","create","pushFilter","filter","lastFilterIndex","tokens","match","filterTokenRE","name","map","processFilterArg","dir","filters","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE$1","appendWithTransition","el","applyTransition","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","selector","querySelector","inDoc","node","doc","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on$1","event","addEventListener","off","removeEventListener","setClass","cls","isIE9","SVGElement","setAttribute","className","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","content","DocumentFragment","hasChildNodes","trimNode","createDocumentFragment","lastChild","tagName","createAnchor","persist","anchor","createComment","createTextNode","__vue_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","initProp","prop","path","coerceProp","assertProp","raw","required","expectedType","valid","String","Boolean","Function","formatType","formatValue","validator","coerce","charAt","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","guardArrayAssets","guardComponents","components","ids","Vue","guardProps","props","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","camelizedId","assertAsset","Dep","uid$3","subs","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","defineReactive","getter","setter","convertAllProperties","property","getOwnPropertyDescriptor","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_unlinkFn","_context","_scope","_frag","children","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","$set","save","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","emit","watcher","run","_maxUpdateCount","splice","pushWatcher","user","q","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","prevError","twoWay","queued","shallow","traverse","normalize","propCache","prefix","camel","upper","testEl","style","prefixed","prefixes","camelPrefixes","keyFilter","handler","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","getValue","multi","init","selected","_value","indexOf$1","isRealTemplate","stringToFragment","templateString","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","suffix","innerHTML","nodeToFragment","textContent","clonedNode","cloneNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__vfrag__","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","outerHTML","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","isHidden","offsetWidth","getClientRects","stringToObject","split","contains$1","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","makePropsLinkFn","_props","getDefault","$get","_bindDir","propDef","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","$remove","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","publicDirectives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","dirName","terminalDirectives","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawName","rawValue","interp","dirDef","parseModifiers","modifierRE","some","transitionRE","bindRE","on","argRE","makeNodeLinkFn","directives","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","propsData","optionsDataFn","optionsData","oldData","removeVm","update","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","j","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","_vue_directives","lifecycleMixin","refs","_compile","_initElement","contentLinkFn","rootLinker","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","k","read","_resolveComponent","resolved","requested","pendingCallbacks","cbs","globalAPI","createClass","util","compiler","parsers","text$1","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","install","mixin","definition","dataAPI","clean","asStatement","$arguments","$delete","$watch","sync","immediate","filterRE","$interpolate","$log","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","item","reduce","concat","$value","$key","orderBy","sortKey","reverse","order","extractFragment","main","__v_selected","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","timerFunc","MutationObserver","counter","observer","textNode","characterData","entry","newer","older","returnEntry","freeze","defineProperties","warnExpressionErrors","_delimitersChanged","_propBindingModes","hasConsole","Error","stack","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","paramAttributes","arrayProto","addSub","sub","removeSub","addDep","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","current","depIds","cloak","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","SLOT","FOR","IF","unbind","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","modelProps","true-value","false-value","invalid","modelProp","model","__v_model","listener","setAttributeNS","esc","tab","enter","space","delete","up","right","down","acceptStatement","iframeBind","contentWindow","stop","prevent","reset","checkbox","getBooleanValue","checked","_trueValue","_falseValue","params","_watcher","afterBind","select","forceUpdate","multiple","initValue","selectedIndex","radio","text$2","isRange","composing","focused","rawListener","hasjQuery","jQuery","checkFilters","hasRead","hasWrite","_unbind","show","nextElementSibling","elseEl","toggle","display","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","rect","t","placeholder","vIf","elseFactory","elseFrag","uid$1","vFor","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","staggerAmount","getStagger","total","warnDuplicate","trans","stagger","_preProcess","_postProcess","swap","for","if","transDurationProp","animDurationProp","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","oldId","bindingModes","childKey","parentKey","parentWatcher","childWatcher","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHook","activate","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","vClass","handleArray","cleanup","prevKeys","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","called","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","Math","abs","toFixed","_int","_float","sign","pluralize","delay","slot","fallback","slotName","tryCompile","namedSlot","elementDirectives","_namedSlot","version","transitions","partials","_defineProperty","_defineProperty2","mergeObjects","existing","deepClone","babelHelpers","getWatcher","getDep","override","vuexInit","store","vuex","$store","state","getters","defineVuexGetter","_key","makeBoundAction","_getterCacheId","_vm","computedGetter","_len","_key2","_Vue","createLogger","Symbol","classCallCheck","instance","Constructor","TypeError","protoProps","staticProps","toConsumableArray","arr2","devtoolMiddleware","onInit","targetState","currentState","_dispatching","onMutation","mutation","Store","_this","_ref$state","_ref$mutations","mutations","_ref$modules","_ref$middlewares","middlewares","_ref$strict","strict","_rootMutations","_mutations","_modules","_setupModuleState","_setupModuleMutations","_setupMiddlewares","_setupMutationCheck","_this2","_len2","payload","prevSnapshot","_prevSnapshot","snapshot","clonedPayload","_needSnapshots","_middlewares","_this3","updatedModules","allMutations","_len3","_key3","_this4","_this5","initialSnapshot","v","_breadcrumb","_breadcrumb2","_actions","_top","_top2","Top","Breadcrumb","currentMenu","breadcrumbInfo","$route","fullPath","nav","changeBreadCrumb","newValue","_Silder","_Silder2","_Main","_Main2","_store","_store2","Silder","Main","/mvvm","__WEBPACK_AMD_REQUIRE_ARRAY__","/mvvm/2","redirect","*","beforeEach","_defineProperty3","_nav","_nav2","$","it","desc","setDesc","$Object","getProto","isEnum","propertyIsEnumerable","getDesc","setDescs","getKeys","getNames","getSymbols","getOwnPropertySymbols","__vue_script__","__vue_template__","beforeSend","parseHeaders","headers","row","xhrClient","client","random","substr","jsonp","onload","onerror","xdr","XDomainRequest","abort","responseText","statusText","onabort","ontimeout","onprogress","send","xhr","XMLHttpRequest","getAllResponseHeaders","upload","header","setRequestHeader","crossOrigin","requestUrl","protocol","originUrl","xdrClient","xhrCors","emulateHTTP","common","custom","Http","Client","interceptor","jsonType","Content-Type","emulateJSON","post","patch","Accept","X-Requested-With","when","jsonpClient","clearTimeout","resource","$url","$resource","$promise","PENDING","deferred","x","r","RESOLVED","REJECTED","resolver","onResolved","onRejected","expand","variables","tmpl","expanded","vars","operators","operator","values","variable","tmp","getValues","separator","encodeReserved","modifier","isDefined","substring","encodeValue","isKeyOperator","encodeURIComponent","part","encodeURI","Resource","opts","Url","transform","transforms","serialize","plain","ie","documentMode","root","escape","port","hostname","pathname","encodeUriSegment","encodeUriQuery","spaces","slash","urlParams","UrlTemplate","Target","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","addRoute","routeArray","len","route","eachRoute","baseRoute","binding","addRouteCallback","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","recognizeChar","RecognizeResults","queryParams","findHandler","regex","captures","currentCapture","isDynamic","addSegment","eachChar","decodeQueryParamPart","decodeURIComponent","exports$1","resolvePath","base","relative","pop","isPromise","getRouteConfig","resolveAsyncComponent","mapParams","genQuery","canReuse","view","canReuseFn","canDeactivate","fromComponent","expectBoolean","canActivate","aborted","deactivate","callHooks","reuse","activateQueue","saveChildView","dataHook","waitForData","activated","loading","$loadingRouteData","_routerView","cachedChildView","_keepAliveRouterView","childView","_rendered","_transitionOnLoad","setCurrent","afterData","afterActivate","loadData","postActivate","processData","promises","resolvedVal","isPlainOjbect","applyOverride","_Vue$util","_parent","$router","_children","_defineMeta","hooksToMergeRE","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","sameOrigin","link","__v_link_active","onRouteUpdate","activeEl","onClick","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","go","newPath","_stringifyPath","updateActiveMatch","updateHref","updateClasses","activeRE","queryStringRE","isAbsolute","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","willAddRoute","addChild","contextEntered","specials","validChars","generate","invalidChars","repeat","isEqual","chars","returned","oCreate","proto","F","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","decodeURI","solutions","VERSION","hashRE","HTML5History","onChange","rootRE","baseEl","replaceState","pos","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abortingOnLoad","deactivateQueue","reverseDeactivateQueue","matched","reuseQueue","runQueue","_onTransitionValidated","_view","step","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","nextWithData","exposed","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","_addAlias","afterEach","container","_appContainer","Ctor","_appConstructor","_location","assign","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","realPath","_checkGuard","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","scrollX","offsetTop","currentParams","targetParams","externalVue"],"mappings":"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","file":"app.dd0312d19792b14263de.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t0:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + {\"1\":\"9a98a1685fc16511baee\",\"2\":\"ccee3cfa81e29669e328\"}[chunkId] + \".js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"http://static.gmmtour.com/mvvm/dist/static/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(5);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vuex = __webpack_require__(8);\n\t\n\tvar _vuex2 = _interopRequireDefault(_vuex);\n\t\n\tvar _vueRouter = __webpack_require__(63);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _vueResource = __webpack_require__(54);\n\t\n\tvar _vueResource2 = _interopRequireDefault(_vueResource);\n\t\n\tvar _index = __webpack_require__(40);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _router = __webpack_require__(17);\n\t\n\tvar _router2 = _interopRequireDefault(_router);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vuex2.default);\n\t_vue2.default.use(_vueRouter2.default);\n\t_vue2.default.use(_vueResource2.default);\n\t_vue2.default.http.interceptors.push({\n\t    request: function request(_request) {\n\t        return _request;\n\t    },\n\t    response: function response(_response) {\n\t        if (_response.status === 301) {\n\t            alert('您需要重新登录或没有权限操作');\n\t            location.href = '/login';\n\t        }\n\t        return _response;\n\t    }\n\t});\n\tvar router = new _vueRouter2.default({ history: true });\n\t(0, _router2.default)(router);\n\t\n\tvar App = _vue2.default.extend(_index2.default);\n\trouter.start(App, 'app');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Utility functions.\n\t */\n\t\n\tvar _ = exports, array = [], console = window.console;\n\t\n\t_.warn = function (msg) {\n\t    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t};\n\t\n\t_.error = function (msg) {\n\t    if (console) {\n\t        console.error(msg);\n\t    }\n\t};\n\t\n\t_.trim = function (str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t};\n\t\n\t_.toLower = function (str) {\n\t    return str ? str.toLowerCase() : '';\n\t};\n\t\n\t_.isArray = Array.isArray;\n\t\n\t_.isString = function (val) {\n\t    return typeof val === 'string';\n\t};\n\t\n\t_.isFunction = function (val) {\n\t    return typeof val === 'function';\n\t};\n\t\n\t_.isObject = function (obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t};\n\t\n\t_.isPlainObject = function (obj) {\n\t    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t};\n\t\n\t_.options = function (fn, obj, options) {\n\t\n\t    options = options || {};\n\t\n\t    if (_.isFunction(options)) {\n\t        options = options.call(obj);\n\t    }\n\t\n\t    return _.merge(fn.bind({$vm: obj, $options: options}), fn, {$options: options});\n\t};\n\t\n\t_.each = function (obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (_.isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t};\n\t\n\t_.defaults = function (target, source) {\n\t\n\t    for (var key in source) {\n\t        if (target[key] === undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t\n\t    return target;\n\t};\n\t\n\t_.extend = function (target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        merge(target, arg);\n\t    });\n\t\n\t    return target;\n\t};\n\t\n\t_.merge = function (target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        merge(target, arg, true);\n\t    });\n\t\n\t    return target;\n\t};\n\t\n\tfunction merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n\t            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Promise adapter.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar PromiseObj = window.Promise || __webpack_require__(55);\n\t\n\tfunction Promise(executor, context) {\n\t\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromise.all = function (iterable, context) {\n\t    return new Promise(PromiseObj.all(iterable), context);\n\t};\n\t\n\tPromise.resolve = function (value, context) {\n\t    return new Promise(PromiseObj.resolve(value), context);\n\t};\n\t\n\tPromise.reject = function (reason, context) {\n\t    return new Promise(PromiseObj.reject(reason), context);\n\t};\n\t\n\tPromise.race = function (iterable, context) {\n\t    return new Promise(PromiseObj.race(iterable), context);\n\t};\n\t\n\tvar p = Promise.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.then(fulfilled, rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.catch(rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t            callback.call(this);\n\t            return value;\n\t        }, function (reason) {\n\t            callback.call(this);\n\t            return PromiseObj.reject(reason);\n\t        }\n\t    );\n\t};\n\t\n\tp.success = function (callback) {\n\t\n\t    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\t\n\t    return this.then(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.error = function (callback) {\n\t\n\t    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\t\n\t    return this.catch(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.always = function (callback) {\n\t\n\t    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\t\n\t    var cb = function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    };\n\t\n\t    return this.then(cb, cb);\n\t};\n\t\n\tmodule.exports = Promise;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.loadBreadCrumb = exports.loadNavList = undefined;\n\t\n\tvar _mutationTypes = __webpack_require__(4);\n\t\n\tvar types = _interopRequireWildcard(_mutationTypes);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar loadNavList = exports.loadNavList = function loadNavList(_ref) {\n\t    var dispatch = _ref.dispatch;\n\t\n\t    this.$http.get('/api/mvvm/a.json').then(function (res) {\n\t        if (res.ok && res.data) {\n\t            dispatch(types.LOAD_NAV_LIST, res.data.navList);\n\t        }\n\t    }, function (res) {});\n\t};\n\tvar loadBreadCrumb = exports.loadBreadCrumb = function loadBreadCrumb(_ref2) {\n\t    var dispatch = _ref2.dispatch;\n\t    var url = arguments.length <= 1 || arguments[1] === undefined ? '' : arguments[1];\n\t\n\t    this.$http.get('/api/mvvm/breadcrumb.json?url=' + url).then(function (res) {\n\t        if (res.ok && res.data) {\n\t            dispatch(types.LOAD_BREADCRUMB, res.data.breadcrumb);\n\t        }\n\t    }, function (res) {\n\t        alert('请求错误');\n\t    });\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar LOAD_BREADCRUMB = exports.LOAD_BREADCRUMB = 'LOAD_BREADCRUMB';\n\tvar LOAD_NAV_LIST = exports.LOAD_NAV_LIST = 'LOAD_NAV_LIST';\n\tvar GET_TBLIST = exports.GET_TBLIST = 'GET_TBLIST';\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vue.js v1.0.14\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.Vue = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  function set(obj, key, val) {\n\t    if (hasOwn(obj, key)) {\n\t      obj[key] = val;\n\t      return;\n\t    }\n\t    if (obj._isVue) {\n\t      set(obj._data, key, val);\n\t      return;\n\t    }\n\t    var ob = obj.__ob__;\n\t    if (!ob) {\n\t      obj[key] = val;\n\t      return;\n\t    }\n\t    ob.convert(key, val);\n\t    ob.dep.notify();\n\t    if (ob.vms) {\n\t      var i = ob.vms.length;\n\t      while (i--) {\n\t        var vm = ob.vms[i];\n\t        vm._proxy(key);\n\t        vm._digest();\n\t      }\n\t    }\n\t    return val;\n\t  }\n\t\n\t  /**\n\t   * Delete a property and trigger change if necessary.\n\t   *\n\t   * @param {Object} obj\n\t   * @param {String} key\n\t   */\n\t\n\t  function del(obj, key) {\n\t    if (!hasOwn(obj, key)) {\n\t      return;\n\t    }\n\t    delete obj[key];\n\t    var ob = obj.__ob__;\n\t    if (!ob) {\n\t      return;\n\t    }\n\t    ob.dep.notify();\n\t    if (ob.vms) {\n\t      var i = ob.vms.length;\n\t      while (i--) {\n\t        var vm = ob.vms[i];\n\t        vm._unproxy(key);\n\t        vm._digest();\n\t      }\n\t    }\n\t  }\n\t\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t  /**\n\t   * Check whether the object has the property.\n\t   *\n\t   * @param {Object} obj\n\t   * @param {String} key\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function hasOwn(obj, key) {\n\t    return hasOwnProperty.call(obj, key);\n\t  }\n\t\n\t  /**\n\t   * Check if an expression is a literal value.\n\t   *\n\t   * @param {String} exp\n\t   * @return {Boolean}\n\t   */\n\t\n\t  var literalValueRE = /^\\s?(true|false|[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\t  function isLiteral(exp) {\n\t    return literalValueRE.test(exp);\n\t  }\n\t\n\t  /**\n\t   * Check if a string starts with $ or _\n\t   *\n\t   * @param {String} str\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isReserved(str) {\n\t    var c = (str + '').charCodeAt(0);\n\t    return c === 0x24 || c === 0x5F;\n\t  }\n\t\n\t  /**\n\t   * Guard text output, make sure undefined outputs\n\t   * empty string\n\t   *\n\t   * @param {*} value\n\t   * @return {String}\n\t   */\n\t\n\t  function _toString(value) {\n\t    return value == null ? '' : value.toString();\n\t  }\n\t\n\t  /**\n\t   * Check and convert possible numeric strings to numbers\n\t   * before setting back to data\n\t   *\n\t   * @param {*} value\n\t   * @return {*|Number}\n\t   */\n\t\n\t  function toNumber(value) {\n\t    if (typeof value !== 'string') {\n\t      return value;\n\t    } else {\n\t      var parsed = Number(value);\n\t      return isNaN(parsed) ? value : parsed;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Convert string boolean literals into real booleans.\n\t   *\n\t   * @param {*} value\n\t   * @return {*|Boolean}\n\t   */\n\t\n\t  function toBoolean(value) {\n\t    return value === 'true' ? true : value === 'false' ? false : value;\n\t  }\n\t\n\t  /**\n\t   * Strip quotes from a string\n\t   *\n\t   * @param {String} str\n\t   * @return {String | false}\n\t   */\n\t\n\t  function stripQuotes(str) {\n\t    var a = str.charCodeAt(0);\n\t    var b = str.charCodeAt(str.length - 1);\n\t    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t  }\n\t\n\t  /**\n\t   * Camelize a hyphen-delmited string.\n\t   *\n\t   * @param {String} str\n\t   * @return {String}\n\t   */\n\t\n\t  var camelizeRE = /-(\\w)/g;\n\t\n\t  function camelize(str) {\n\t    return str.replace(camelizeRE, toUpper);\n\t  }\n\t\n\t  function toUpper(_, c) {\n\t    return c ? c.toUpperCase() : '';\n\t  }\n\t\n\t  /**\n\t   * Hyphenate a camelCase string.\n\t   *\n\t   * @param {String} str\n\t   * @return {String}\n\t   */\n\t\n\t  var hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\t  function hyphenate(str) {\n\t    return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t  }\n\t\n\t  /**\n\t   * Converts hyphen/underscore/slash delimitered names into\n\t   * camelized classNames.\n\t   *\n\t   * e.g. my-component => MyComponent\n\t   *      some_else    => SomeElse\n\t   *      some/comp    => SomeComp\n\t   *\n\t   * @param {String} str\n\t   * @return {String}\n\t   */\n\t\n\t  var classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\t  function classify(str) {\n\t    return str.replace(classifyRE, toUpper);\n\t  }\n\t\n\t  /**\n\t   * Simple bind, faster than native\n\t   *\n\t   * @param {Function} fn\n\t   * @param {Object} ctx\n\t   * @return {Function}\n\t   */\n\t\n\t  function bind$1(fn, ctx) {\n\t    return function (a) {\n\t      var l = arguments.length;\n\t      return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Convert an Array-like object to a real Array.\n\t   *\n\t   * @param {Array-like} list\n\t   * @param {Number} [start] - start index\n\t   * @return {Array}\n\t   */\n\t\n\t  function toArray(list, start) {\n\t    start = start || 0;\n\t    var i = list.length - start;\n\t    var ret = new Array(i);\n\t    while (i--) {\n\t      ret[i] = list[i + start];\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  /**\n\t   * Mix properties into target object.\n\t   *\n\t   * @param {Object} to\n\t   * @param {Object} from\n\t   */\n\t\n\t  function extend(to, from) {\n\t    var keys = Object.keys(from);\n\t    var i = keys.length;\n\t    while (i--) {\n\t      to[keys[i]] = from[keys[i]];\n\t    }\n\t    return to;\n\t  }\n\t\n\t  /**\n\t   * Quick object check - this is primarily used to tell\n\t   * Objects from primitive values when we know the value\n\t   * is a JSON-compliant type.\n\t   *\n\t   * @param {*} obj\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isObject(obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t  }\n\t\n\t  /**\n\t   * Strict object type check. Only returns true\n\t   * for plain JavaScript objects.\n\t   *\n\t   * @param {*} obj\n\t   * @return {Boolean}\n\t   */\n\t\n\t  var toString = Object.prototype.toString;\n\t  var OBJECT_STRING = '[object Object]';\n\t\n\t  function isPlainObject(obj) {\n\t    return toString.call(obj) === OBJECT_STRING;\n\t  }\n\t\n\t  /**\n\t   * Array type check.\n\t   *\n\t   * @param {*} obj\n\t   * @return {Boolean}\n\t   */\n\t\n\t  var isArray = Array.isArray;\n\t\n\t  /**\n\t   * Define a non-enumerable property\n\t   *\n\t   * @param {Object} obj\n\t   * @param {String} key\n\t   * @param {*} val\n\t   * @param {Boolean} [enumerable]\n\t   */\n\t\n\t  function def(obj, key, val, enumerable) {\n\t    Object.defineProperty(obj, key, {\n\t      value: val,\n\t      enumerable: !!enumerable,\n\t      writable: true,\n\t      configurable: true\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Debounce a function so it only gets called after the\n\t   * input stops arriving after the given wait period.\n\t   *\n\t   * @param {Function} func\n\t   * @param {Number} wait\n\t   * @return {Function} - the debounced function\n\t   */\n\t\n\t  function _debounce(func, wait) {\n\t    var timeout, args, context, timestamp, result;\n\t    var later = function later() {\n\t      var last = Date.now() - timestamp;\n\t      if (last < wait && last >= 0) {\n\t        timeout = setTimeout(later, wait - last);\n\t      } else {\n\t        timeout = null;\n\t        result = func.apply(context, args);\n\t        if (!timeout) context = args = null;\n\t      }\n\t    };\n\t    return function () {\n\t      context = this;\n\t      args = arguments;\n\t      timestamp = Date.now();\n\t      if (!timeout) {\n\t        timeout = setTimeout(later, wait);\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Manual indexOf because it's slightly faster than\n\t   * native.\n\t   *\n\t   * @param {Array} arr\n\t   * @param {*} obj\n\t   */\n\t\n\t  function indexOf(arr, obj) {\n\t    var i = arr.length;\n\t    while (i--) {\n\t      if (arr[i] === obj) return i;\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Make a cancellable version of an async callback.\n\t   *\n\t   * @param {Function} fn\n\t   * @return {Function}\n\t   */\n\t\n\t  function cancellable(fn) {\n\t    var cb = function cb() {\n\t      if (!cb.cancelled) {\n\t        return fn.apply(this, arguments);\n\t      }\n\t    };\n\t    cb.cancel = function () {\n\t      cb.cancelled = true;\n\t    };\n\t    return cb;\n\t  }\n\t\n\t  /**\n\t   * Check if two values are loosely equal - that is,\n\t   * if they are plain objects, do they have the same shape?\n\t   *\n\t   * @param {*} a\n\t   * @param {*} b\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function looseEqual(a, b) {\n\t    /* eslint-disable eqeqeq */\n\t    return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t    /* eslint-enable eqeqeq */\n\t  }\n\t\n\t  var hasProto = ('__proto__' in {});\n\t\n\t  // Browser environment sniffing\n\t  var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t  var isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\t\n\t  var isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\t\n\t  var transitionProp = undefined;\n\t  var transitionEndEvent = undefined;\n\t  var animationProp = undefined;\n\t  var animationEndEvent = undefined;\n\t\n\t  // Transition property/event sniffing\n\t  if (inBrowser && !isIE9) {\n\t    var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t    var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t    transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t    transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t    animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t    animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t  }\n\t\n\t  /**\n\t   * Defer a task to execute it asynchronously. Ideally this\n\t   * should be executed as a microtask, so we leverage\n\t   * MutationObserver if it's available, and fallback to\n\t   * setTimeout(0).\n\t   *\n\t   * @param {Function} cb\n\t   * @param {Object} ctx\n\t   */\n\t\n\t  var nextTick = (function () {\n\t    var callbacks = [];\n\t    var pending = false;\n\t    var timerFunc;\n\t    function nextTickHandler() {\n\t      pending = false;\n\t      var copies = callbacks.slice(0);\n\t      callbacks = [];\n\t      for (var i = 0; i < copies.length; i++) {\n\t        copies[i]();\n\t      }\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof MutationObserver !== 'undefined') {\n\t      var counter = 1;\n\t      var observer = new MutationObserver(nextTickHandler);\n\t      var textNode = document.createTextNode(counter);\n\t      observer.observe(textNode, {\n\t        characterData: true\n\t      });\n\t      timerFunc = function () {\n\t        counter = (counter + 1) % 2;\n\t        textNode.data = counter;\n\t      };\n\t    } else {\n\t      timerFunc = setTimeout;\n\t    }\n\t    return function (cb, ctx) {\n\t      var func = ctx ? function () {\n\t        cb.call(ctx);\n\t      } : cb;\n\t      callbacks.push(func);\n\t      if (pending) return;\n\t      pending = true;\n\t      timerFunc(nextTickHandler, 0);\n\t    };\n\t  })();\n\t\n\t  function Cache(limit) {\n\t    this.size = 0;\n\t    this.limit = limit;\n\t    this.head = this.tail = undefined;\n\t    this._keymap = Object.create(null);\n\t  }\n\t\n\t  var p = Cache.prototype;\n\t\n\t  /**\n\t   * Put <value> into the cache associated with <key>.\n\t   * Returns the entry which was removed to make room for\n\t   * the new entry. Otherwise undefined is returned.\n\t   * (i.e. if there was enough room already).\n\t   *\n\t   * @param {String} key\n\t   * @param {*} value\n\t   * @return {Entry|undefined}\n\t   */\n\t\n\t  p.put = function (key, value) {\n\t    var entry = {\n\t      key: key,\n\t      value: value\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    if (this.size === this.limit) {\n\t      return this.shift();\n\t    } else {\n\t      this.size++;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Purge the least recently used (oldest) entry from the\n\t   * cache. Returns the removed entry or undefined if the\n\t   * cache was empty.\n\t   */\n\t\n\t  p.shift = function () {\n\t    var entry = this.head;\n\t    if (entry) {\n\t      this.head = this.head.newer;\n\t      this.head.older = undefined;\n\t      entry.newer = entry.older = undefined;\n\t      this._keymap[entry.key] = undefined;\n\t    }\n\t    return entry;\n\t  };\n\t\n\t  /**\n\t   * Get and register recent use of <key>. Returns the value\n\t   * associated with <key> or undefined if not in cache.\n\t   *\n\t   * @param {String} key\n\t   * @param {Boolean} returnEntry\n\t   * @return {Entry|*}\n\t   */\n\t\n\t  p.get = function (key, returnEntry) {\n\t    var entry = this._keymap[key];\n\t    if (entry === undefined) return;\n\t    if (entry === this.tail) {\n\t      return returnEntry ? entry : entry.value;\n\t    }\n\t    // HEAD--------------TAIL\n\t    //   <.older   .newer>\n\t    //  <--- add direction --\n\t    //   A  B  C  <D>  E\n\t    if (entry.newer) {\n\t      if (entry === this.head) {\n\t        this.head = entry.newer;\n\t      }\n\t      entry.newer.older = entry.older; // C <-- E.\n\t    }\n\t    if (entry.older) {\n\t      entry.older.newer = entry.newer; // C. --> E\n\t    }\n\t    entry.newer = undefined; // D --x\n\t    entry.older = this.tail; // D. --> E\n\t    if (this.tail) {\n\t      this.tail.newer = entry; // E. <-- D\n\t    }\n\t    this.tail = entry;\n\t    return returnEntry ? entry : entry.value;\n\t  };\n\t\n\t  var cache$1 = new Cache(1000);\n\t  var filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\t  var reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t  /**\n\t   * Parser state\n\t   */\n\t\n\t  var str;\n\t  var dir;\n\t  var c;\n\t  var prev;\n\t  var i;\n\t  var l;\n\t  var lastFilterIndex;\n\t  var inSingle;\n\t  var inDouble;\n\t  var curly;\n\t  var square;\n\t  var paren;\n\t  /**\n\t   * Push a filter to the current directive object\n\t   */\n\t\n\t  function pushFilter() {\n\t    var exp = str.slice(lastFilterIndex, i).trim();\n\t    var filter;\n\t    if (exp) {\n\t      filter = {};\n\t      var tokens = exp.match(filterTokenRE);\n\t      filter.name = tokens[0];\n\t      if (tokens.length > 1) {\n\t        filter.args = tokens.slice(1).map(processFilterArg);\n\t      }\n\t    }\n\t    if (filter) {\n\t      (dir.filters = dir.filters || []).push(filter);\n\t    }\n\t    lastFilterIndex = i + 1;\n\t  }\n\t\n\t  /**\n\t   * Check if an argument is dynamic and strip quotes.\n\t   *\n\t   * @param {String} arg\n\t   * @return {Object}\n\t   */\n\t\n\t  function processFilterArg(arg) {\n\t    if (reservedArgRE.test(arg)) {\n\t      return {\n\t        value: toNumber(arg),\n\t        dynamic: false\n\t      };\n\t    } else {\n\t      var stripped = stripQuotes(arg);\n\t      var dynamic = stripped === arg;\n\t      return {\n\t        value: dynamic ? arg : stripped,\n\t        dynamic: dynamic\n\t      };\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Parse a directive value and extract the expression\n\t   * and its filters into a descriptor.\n\t   *\n\t   * Example:\n\t   *\n\t   * \"a + 1 | uppercase\" will yield:\n\t   * {\n\t   *   expression: 'a + 1',\n\t   *   filters: [\n\t   *     { name: 'uppercase', args: null }\n\t   *   ]\n\t   * }\n\t   *\n\t   * @param {String} str\n\t   * @return {Object}\n\t   */\n\t\n\t  function parseDirective(s) {\n\t\n\t    var hit = cache$1.get(s);\n\t    if (hit) {\n\t      return hit;\n\t    }\n\t\n\t    // reset parser state\n\t    str = s;\n\t    inSingle = inDouble = false;\n\t    curly = square = paren = 0;\n\t    lastFilterIndex = 0;\n\t    dir = {};\n\t\n\t    for (i = 0, l = str.length; i < l; i++) {\n\t      prev = c;\n\t      c = str.charCodeAt(i);\n\t      if (inSingle) {\n\t        // check single quote\n\t        if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t      } else if (inDouble) {\n\t        // check double quote\n\t        if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t      } else if (c === 0x7C && // pipe\n\t      str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t        if (dir.expression == null) {\n\t          // first filter, end of expression\n\t          lastFilterIndex = i + 1;\n\t          dir.expression = str.slice(0, i).trim();\n\t        } else {\n\t          // already has filter\n\t          pushFilter();\n\t        }\n\t      } else {\n\t        switch (c) {\n\t          case 0x22:\n\t            inDouble = true;break; // \"\n\t          case 0x27:\n\t            inSingle = true;break; // '\n\t          case 0x28:\n\t            paren++;break; // (\n\t          case 0x29:\n\t            paren--;break; // )\n\t          case 0x5B:\n\t            square++;break; // [\n\t          case 0x5D:\n\t            square--;break; // ]\n\t          case 0x7B:\n\t            curly++;break; // {\n\t          case 0x7D:\n\t            curly--;break; // }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (dir.expression == null) {\n\t      dir.expression = str.slice(0, i).trim();\n\t    } else if (lastFilterIndex !== 0) {\n\t      pushFilter();\n\t    }\n\t\n\t    cache$1.put(s, dir);\n\t    return dir;\n\t  }\n\t\n\t  var directive = Object.freeze({\n\t    parseDirective: parseDirective\n\t  });\n\t\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var cache = undefined;\n\t  var tagRE = undefined;\n\t  var htmlRE = undefined;\n\t  /**\n\t   * Escape a string so it can be used in a RegExp\n\t   * constructor.\n\t   *\n\t   * @param {String} str\n\t   */\n\t\n\t  function escapeRegex(str) {\n\t    return str.replace(regexEscapeRE, '\\\\$&');\n\t  }\n\t\n\t  function compileRegex() {\n\t    var open = escapeRegex(config.delimiters[0]);\n\t    var close = escapeRegex(config.delimiters[1]);\n\t    var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t    var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t    tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t    htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t    // reset cache\n\t    cache = new Cache(1000);\n\t  }\n\t\n\t  /**\n\t   * Parse a template text string into an array of tokens.\n\t   *\n\t   * @param {String} text\n\t   * @return {Array<Object> | null}\n\t   *               - {String} type\n\t   *               - {String} value\n\t   *               - {Boolean} [html]\n\t   *               - {Boolean} [oneTime]\n\t   */\n\t\n\t  function parseText(text) {\n\t    if (!cache) {\n\t      compileRegex();\n\t    }\n\t    var hit = cache.get(text);\n\t    if (hit) {\n\t      return hit;\n\t    }\n\t    text = text.replace(/\\n/g, '');\n\t    if (!tagRE.test(text)) {\n\t      return null;\n\t    }\n\t    var tokens = [];\n\t    var lastIndex = tagRE.lastIndex = 0;\n\t    var match, index, html, value, first, oneTime;\n\t    /* eslint-disable no-cond-assign */\n\t    while (match = tagRE.exec(text)) {\n\t      /* eslint-enable no-cond-assign */\n\t      index = match.index;\n\t      // push text token\n\t      if (index > lastIndex) {\n\t        tokens.push({\n\t          value: text.slice(lastIndex, index)\n\t        });\n\t      }\n\t      // tag token\n\t      html = htmlRE.test(match[0]);\n\t      value = html ? match[1] : match[2];\n\t      first = value.charCodeAt(0);\n\t      oneTime = first === 42; // *\n\t      value = oneTime ? value.slice(1) : value;\n\t      tokens.push({\n\t        tag: true,\n\t        value: value.trim(),\n\t        html: html,\n\t        oneTime: oneTime\n\t      });\n\t      lastIndex = index + match[0].length;\n\t    }\n\t    if (lastIndex < text.length) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex)\n\t      });\n\t    }\n\t    cache.put(text, tokens);\n\t    return tokens;\n\t  }\n\t\n\t  /**\n\t   * Format a list of tokens into an expression.\n\t   * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t   * into one single expression as '\"a \" + b + \" c\"'.\n\t   *\n\t   * @param {Array} tokens\n\t   * @param {Vue} [vm]\n\t   * @return {String}\n\t   */\n\t\n\t  function tokensToExp(tokens, vm) {\n\t    if (tokens.length > 1) {\n\t      return tokens.map(function (token) {\n\t        return formatToken(token, vm);\n\t      }).join('+');\n\t    } else {\n\t      return formatToken(tokens[0], vm, true);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Format a single token.\n\t   *\n\t   * @param {Object} token\n\t   * @param {Vue} [vm]\n\t   * @param {Boolean} [single]\n\t   * @return {String}\n\t   */\n\t\n\t  function formatToken(token, vm, single) {\n\t    return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t  }\n\t\n\t  /**\n\t   * For an attribute with multiple interpolation tags,\n\t   * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t   * the whole thing into a single watchable expression, we\n\t   * have to inline those filters. This function does exactly\n\t   * that. This is a bit hacky but it avoids heavy changes\n\t   * to directive parser and watcher mechanism.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} single\n\t   * @return {String}\n\t   */\n\t\n\t  var filterRE$1 = /[^|]\\|[^|]/;\n\t  function inlineFilters(exp, single) {\n\t    if (!filterRE$1.test(exp)) {\n\t      return single ? exp : '(' + exp + ')';\n\t    } else {\n\t      var dir = parseDirective(exp);\n\t      if (!dir.filters) {\n\t        return '(' + exp + ')';\n\t      } else {\n\t        return 'this._applyFilters(' + dir.expression + // value\n\t        ',null,' + // oldValue (null for read)\n\t        JSON.stringify(dir.filters) + // filter descriptors\n\t        ',false)'; // write?\n\t      }\n\t    }\n\t  }\n\t\n\t  var text$1 = Object.freeze({\n\t    compileRegex: compileRegex,\n\t    parseText: parseText,\n\t    tokensToExp: tokensToExp\n\t  });\n\t\n\t  var delimiters = ['{{', '}}'];\n\t  var unsafeDelimiters = ['{{{', '}}}'];\n\t\n\t  var config = Object.defineProperties({\n\t\n\t    /**\n\t     * Whether to print debug messages.\n\t     * Also enables stack trace for warnings.\n\t     *\n\t     * @type {Boolean}\n\t     */\n\t\n\t    debug: false,\n\t\n\t    /**\n\t     * Whether to suppress warnings.\n\t     *\n\t     * @type {Boolean}\n\t     */\n\t\n\t    silent: false,\n\t\n\t    /**\n\t     * Whether to use async rendering.\n\t     */\n\t\n\t    async: true,\n\t\n\t    /**\n\t     * Whether to warn against errors caught when evaluating\n\t     * expressions.\n\t     */\n\t\n\t    warnExpressionErrors: true,\n\t\n\t    /**\n\t     * Whether or not to handle fully object properties which\n\t     * are already backed by getters and seters. Depending on\n\t     * use case and environment, this might introduce non-neglible\n\t     * performance penalties.\n\t     */\n\t    convertAllProperties: false,\n\t\n\t    /**\n\t     * Internal flag to indicate the delimiters have been\n\t     * changed.\n\t     *\n\t     * @type {Boolean}\n\t     */\n\t\n\t    _delimitersChanged: true,\n\t\n\t    /**\n\t     * List of asset types that a component can own.\n\t     *\n\t     * @type {Array}\n\t     */\n\t\n\t    _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t    /**\n\t     * prop binding modes\n\t     */\n\t\n\t    _propBindingModes: {\n\t      ONE_WAY: 0,\n\t      TWO_WAY: 1,\n\t      ONE_TIME: 2\n\t    },\n\t\n\t    /**\n\t     * Max circular updates allowed in a batcher flush cycle.\n\t     */\n\t\n\t    _maxUpdateCount: 100\n\t\n\t  }, {\n\t    delimiters: { /**\n\t                   * Interpolation delimiters. Changing these would trigger\n\t                   * the text parser to re-compile the regular expressions.\n\t                   *\n\t                   * @type {Array<String>}\n\t                   */\n\t\n\t      get: function get() {\n\t        return delimiters;\n\t      },\n\t      set: function set(val) {\n\t        delimiters = val;\n\t        compileRegex();\n\t      },\n\t      configurable: true,\n\t      enumerable: true\n\t    },\n\t    unsafeDelimiters: {\n\t      get: function get() {\n\t        return unsafeDelimiters;\n\t      },\n\t      set: function set(val) {\n\t        unsafeDelimiters = val;\n\t        compileRegex();\n\t      },\n\t      configurable: true,\n\t      enumerable: true\n\t    }\n\t  });\n\t\n\t  var warn = undefined;\n\t\n\t  if (true) {\n\t    (function () {\n\t      var hasConsole = typeof console !== 'undefined';\n\t      warn = function (msg, e) {\n\t        if (hasConsole && (!config.silent || config.debug)) {\n\t          console.warn('[Vue warn]: ' + msg);\n\t          /* istanbul ignore if */\n\t          if (config.debug) {\n\t            if (e) {\n\t              throw e;\n\t            } else {\n\t              console.warn(new Error('Warning Stack Trace').stack);\n\t            }\n\t          }\n\t        }\n\t      };\n\t    })();\n\t  }\n\t\n\t  /**\n\t   * Append with transition.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Element} target\n\t   * @param {Vue} vm\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function appendWithTransition(el, target, vm, cb) {\n\t    applyTransition(el, 1, function () {\n\t      target.appendChild(el);\n\t    }, vm, cb);\n\t  }\n\t\n\t  /**\n\t   * InsertBefore with transition.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Element} target\n\t   * @param {Vue} vm\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithTransition(el, target, vm, cb) {\n\t    applyTransition(el, 1, function () {\n\t      before(el, target);\n\t    }, vm, cb);\n\t  }\n\t\n\t  /**\n\t   * Remove with transition.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Vue} vm\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithTransition(el, vm, cb) {\n\t    applyTransition(el, -1, function () {\n\t      remove(el);\n\t    }, vm, cb);\n\t  }\n\t\n\t  /**\n\t   * Apply transitions with an operation callback.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Number} direction\n\t   *                  1: enter\n\t   *                 -1: leave\n\t   * @param {Function} op - the actual DOM operation\n\t   * @param {Vue} vm\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function applyTransition(el, direction, op, vm, cb) {\n\t    var transition = el.__v_trans;\n\t    if (!transition ||\n\t    // skip if there are no js hooks and CSS transition is\n\t    // not supported\n\t    !transition.hooks && !transitionEndEvent ||\n\t    // skip transitions for initial compile\n\t    !vm._isCompiled ||\n\t    // if the vm is being manipulated by a parent directive\n\t    // during the parent's compilation phase, skip the\n\t    // animation.\n\t    vm.$parent && !vm.$parent._isCompiled) {\n\t      op();\n\t      if (cb) cb();\n\t      return;\n\t    }\n\t    var action = direction > 0 ? 'enter' : 'leave';\n\t    transition[action](op, cb);\n\t  }\n\t\n\t  /**\n\t   * Query an element selector if it's not an element already.\n\t   *\n\t   * @param {String|Element} el\n\t   * @return {Element}\n\t   */\n\t\n\t  function query(el) {\n\t    if (typeof el === 'string') {\n\t      var selector = el;\n\t      el = document.querySelector(el);\n\t      if (!el) {\n\t        'development' !== 'production' && warn('Cannot find element: ' + selector);\n\t      }\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Check if a node is in the document.\n\t   * Note: document.documentElement.contains should work here\n\t   * but always returns false for comment nodes in phantomjs,\n\t   * making unit tests difficult. This is fixed by doing the\n\t   * contains() check on the node's parentNode instead of\n\t   * the node itself.\n\t   *\n\t   * @param {Node} node\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function inDoc(node) {\n\t    var doc = document.documentElement;\n\t    var parent = node && node.parentNode;\n\t    return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t  }\n\t\n\t  /**\n\t   * Get and remove an attribute from a node.\n\t   *\n\t   * @param {Node} node\n\t   * @param {String} _attr\n\t   */\n\t\n\t  function getAttr(node, _attr) {\n\t    var val = node.getAttribute(_attr);\n\t    if (val !== null) {\n\t      node.removeAttribute(_attr);\n\t    }\n\t    return val;\n\t  }\n\t\n\t  /**\n\t   * Get an attribute with colon or v-bind: prefix.\n\t   *\n\t   * @param {Node} node\n\t   * @param {String} name\n\t   * @return {String|null}\n\t   */\n\t\n\t  function getBindAttr(node, name) {\n\t    var val = getAttr(node, ':' + name);\n\t    if (val === null) {\n\t      val = getAttr(node, 'v-bind:' + name);\n\t    }\n\t    return val;\n\t  }\n\t\n\t  /**\n\t   * Check the presence of a bind attribute.\n\t   *\n\t   * @param {Node} node\n\t   * @param {String} name\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function hasBindAttr(node, name) {\n\t    return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t  }\n\t\n\t  /**\n\t   * Insert el before target\n\t   *\n\t   * @param {Element} el\n\t   * @param {Element} target\n\t   */\n\t\n\t  function before(el, target) {\n\t    target.parentNode.insertBefore(el, target);\n\t  }\n\t\n\t  /**\n\t   * Insert el after target\n\t   *\n\t   * @param {Element} el\n\t   * @param {Element} target\n\t   */\n\t\n\t  function after(el, target) {\n\t    if (target.nextSibling) {\n\t      before(el, target.nextSibling);\n\t    } else {\n\t      target.parentNode.appendChild(el);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Remove el from DOM\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  function remove(el) {\n\t    el.parentNode.removeChild(el);\n\t  }\n\t\n\t  /**\n\t   * Prepend el to target\n\t   *\n\t   * @param {Element} el\n\t   * @param {Element} target\n\t   */\n\t\n\t  function prepend(el, target) {\n\t    if (target.firstChild) {\n\t      before(el, target.firstChild);\n\t    } else {\n\t      target.appendChild(el);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Replace target with el\n\t   *\n\t   * @param {Element} target\n\t   * @param {Element} el\n\t   */\n\t\n\t  function replace(target, el) {\n\t    var parent = target.parentNode;\n\t    if (parent) {\n\t      parent.replaceChild(el, target);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Add event listener shorthand.\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} event\n\t   * @param {Function} cb\n\t   */\n\t\n\t  function on$1(el, event, cb) {\n\t    el.addEventListener(event, cb);\n\t  }\n\t\n\t  /**\n\t   * Remove event listener shorthand.\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} event\n\t   * @param {Function} cb\n\t   */\n\t\n\t  function off(el, event, cb) {\n\t    el.removeEventListener(event, cb);\n\t  }\n\t\n\t  /**\n\t   * In IE9, setAttribute('class') will result in empty class\n\t   * if the element also has the :class attribute; However in\n\t   * PhantomJS, setting `className` does not work on SVG elements...\n\t   * So we have to do a conditional check here.\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} cls\n\t   */\n\t\n\t  function setClass(el, cls) {\n\t    /* istanbul ignore if */\n\t    if (isIE9 && !(el instanceof SVGElement)) {\n\t      el.className = cls;\n\t    } else {\n\t      el.setAttribute('class', cls);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Add class with compatibility for IE & SVG\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} cls\n\t   */\n\t\n\t  function addClass(el, cls) {\n\t    if (el.classList) {\n\t      el.classList.add(cls);\n\t    } else {\n\t      var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t      if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t        setClass(el, (cur + cls).trim());\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Remove class with compatibility for IE & SVG\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} cls\n\t   */\n\t\n\t  function removeClass(el, cls) {\n\t    if (el.classList) {\n\t      el.classList.remove(cls);\n\t    } else {\n\t      var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n\t      var tar = ' ' + cls + ' ';\n\t      while (cur.indexOf(tar) >= 0) {\n\t        cur = cur.replace(tar, ' ');\n\t      }\n\t      setClass(el, cur.trim());\n\t    }\n\t    if (!el.className) {\n\t      el.removeAttribute('class');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Extract raw content inside an element into a temporary\n\t   * container div\n\t   *\n\t   * @param {Element} el\n\t   * @param {Boolean} asFragment\n\t   * @return {Element}\n\t   */\n\t\n\t  function extractContent(el, asFragment) {\n\t    var child;\n\t    var rawContent;\n\t    /* istanbul ignore if */\n\t    if (isTemplate(el) && el.content instanceof DocumentFragment) {\n\t      el = el.content;\n\t    }\n\t    if (el.hasChildNodes()) {\n\t      trimNode(el);\n\t      rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t      /* eslint-disable no-cond-assign */\n\t      while (child = el.firstChild) {\n\t        /* eslint-enable no-cond-assign */\n\t        rawContent.appendChild(child);\n\t      }\n\t    }\n\t    return rawContent;\n\t  }\n\t\n\t  /**\n\t   * Trim possible empty head/tail textNodes inside a parent.\n\t   *\n\t   * @param {Node} node\n\t   */\n\t\n\t  function trimNode(node) {\n\t    trim(node, node.firstChild);\n\t    trim(node, node.lastChild);\n\t  }\n\t\n\t  function trim(parent, node) {\n\t    if (node && node.nodeType === 3 && !node.data.trim()) {\n\t      parent.removeChild(node);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if an element is a template tag.\n\t   * Note if the template appears inside an SVG its tagName\n\t   * will be in lowercase.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  function isTemplate(el) {\n\t    return el.tagName && el.tagName.toLowerCase() === 'template';\n\t  }\n\t\n\t  /**\n\t   * Create an \"anchor\" for performing dom insertion/removals.\n\t   * This is used in a number of scenarios:\n\t   * - fragment instance\n\t   * - v-html\n\t   * - v-if\n\t   * - v-for\n\t   * - component\n\t   *\n\t   * @param {String} content\n\t   * @param {Boolean} persist - IE trashes empty textNodes on\n\t   *                            cloneNode(true), so in certain\n\t   *                            cases the anchor needs to be\n\t   *                            non-empty to be persisted in\n\t   *                            templates.\n\t   * @return {Comment|Text}\n\t   */\n\t\n\t  function createAnchor(content, persist) {\n\t    var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t    anchor.__vue_anchor = true;\n\t    return anchor;\n\t  }\n\t\n\t  /**\n\t   * Find a component ref attribute that starts with $.\n\t   *\n\t   * @param {Element} node\n\t   * @return {String|undefined}\n\t   */\n\t\n\t  var refRE = /^v-ref:/;\n\t\n\t  function findRef(node) {\n\t    if (node.hasAttributes()) {\n\t      var attrs = node.attributes;\n\t      for (var i = 0, l = attrs.length; i < l; i++) {\n\t        var name = attrs[i].name;\n\t        if (refRE.test(name)) {\n\t          return camelize(name.replace(refRE, ''));\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Map a function to a range of nodes .\n\t   *\n\t   * @param {Node} node\n\t   * @param {Node} end\n\t   * @param {Function} op\n\t   */\n\t\n\t  function mapNodeRange(node, end, op) {\n\t    var next;\n\t    while (node !== end) {\n\t      next = node.nextSibling;\n\t      op(node);\n\t      node = next;\n\t    }\n\t    op(end);\n\t  }\n\t\n\t  /**\n\t   * Remove a range of nodes with transition, store\n\t   * the nodes in a fragment with correct ordering,\n\t   * and call callback when done.\n\t   *\n\t   * @param {Node} start\n\t   * @param {Node} end\n\t   * @param {Vue} vm\n\t   * @param {DocumentFragment} frag\n\t   * @param {Function} cb\n\t   */\n\t\n\t  function removeNodeRange(start, end, vm, frag, cb) {\n\t    var done = false;\n\t    var removed = 0;\n\t    var nodes = [];\n\t    mapNodeRange(start, end, function (node) {\n\t      if (node === end) done = true;\n\t      nodes.push(node);\n\t      removeWithTransition(node, vm, onRemoved);\n\t    });\n\t    function onRemoved() {\n\t      removed++;\n\t      if (done && removed >= nodes.length) {\n\t        for (var i = 0; i < nodes.length; i++) {\n\t          frag.appendChild(nodes[i]);\n\t        }\n\t        cb && cb();\n\t      }\n\t    }\n\t  }\n\t\n\t  var commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\n\t  var reservedTagRE = /^(slot|partial|component)$/;\n\t\n\t  /**\n\t   * Check if an element is a component, if yes return its\n\t   * component id.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @return {Object|undefined}\n\t   */\n\t\n\t  function checkComponentAttr(el, options) {\n\t    var tag = el.tagName.toLowerCase();\n\t    var hasAttrs = el.hasAttributes();\n\t    if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t      if (resolveAsset(options, 'components', tag)) {\n\t        return { id: tag };\n\t      } else {\n\t        var is = hasAttrs && getIsBinding(el);\n\t        if (is) {\n\t          return is;\n\t        } else if (true) {\n\t          if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n\t          // Chrome returns unknown for several HTML5 elements.\n\t          // https://code.google.com/p/chromium/issues/detail?id=540526\n\t          !/^(data|time|rtc|rb)$/.test(tag)) {\n\t            warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly?');\n\t          }\n\t        }\n\t      }\n\t    } else if (hasAttrs) {\n\t      return getIsBinding(el);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Get \"is\" binding from an element.\n\t   *\n\t   * @param {Element} el\n\t   * @return {Object|undefined}\n\t   */\n\t\n\t  function getIsBinding(el) {\n\t    // dynamic syntax\n\t    var exp = getAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp };\n\t    } else {\n\t      exp = getBindAttr(el, 'is');\n\t      if (exp != null) {\n\t        return { id: exp, dynamic: true };\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Set a prop's initial value on a vm and its data object.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Object} prop\n\t   * @param {*} value\n\t   */\n\t\n\t  function initProp(vm, prop, value) {\n\t    var key = prop.path;\n\t    value = coerceProp(prop, value);\n\t    vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n\t  }\n\t\n\t  /**\n\t   * Assert whether a prop is valid.\n\t   *\n\t   * @param {Object} prop\n\t   * @param {*} value\n\t   */\n\t\n\t  function assertProp(prop, value) {\n\t    // if a prop is not provided and is not required,\n\t    // skip the check.\n\t    if (prop.raw === null && !prop.required) {\n\t      return true;\n\t    }\n\t    var options = prop.options;\n\t    var type = options.type;\n\t    var valid = true;\n\t    var expectedType;\n\t    if (type) {\n\t      if (type === String) {\n\t        expectedType = 'string';\n\t        valid = typeof value === expectedType;\n\t      } else if (type === Number) {\n\t        expectedType = 'number';\n\t        valid = typeof value === 'number';\n\t      } else if (type === Boolean) {\n\t        expectedType = 'boolean';\n\t        valid = typeof value === 'boolean';\n\t      } else if (type === Function) {\n\t        expectedType = 'function';\n\t        valid = typeof value === 'function';\n\t      } else if (type === Object) {\n\t        expectedType = 'object';\n\t        valid = isPlainObject(value);\n\t      } else if (type === Array) {\n\t        expectedType = 'array';\n\t        valid = isArray(value);\n\t      } else {\n\t        valid = value instanceof type;\n\t      }\n\t    }\n\t    if (!valid) {\n\t      'development' !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t      return false;\n\t    }\n\t    var validator = options.validator;\n\t    if (validator) {\n\t      if (!validator.call(null, value)) {\n\t        'development' !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * Force parsing value with coerce option.\n\t   *\n\t   * @param {*} value\n\t   * @param {Object} options\n\t   * @return {*}\n\t   */\n\t\n\t  function coerceProp(prop, value) {\n\t    var coerce = prop.options.coerce;\n\t    if (!coerce) {\n\t      return value;\n\t    }\n\t    // coerce is a function\n\t    return coerce(value);\n\t  }\n\t\n\t  function formatType(val) {\n\t    return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t  }\n\t\n\t  function formatValue(val) {\n\t    return Object.prototype.toString.call(val).slice(8, -1);\n\t  }\n\t\n\t  /**\n\t   * Option overwriting strategies are functions that handle\n\t   * how to merge a parent option value and a child option\n\t   * value into the final value.\n\t   *\n\t   * All strategy functions follow the same signature:\n\t   *\n\t   * @param {*} parentVal\n\t   * @param {*} childVal\n\t   * @param {Vue} [vm]\n\t   */\n\t\n\t  var strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t  /**\n\t   * Helper that recursively merges two data objects together.\n\t   */\n\t\n\t  function mergeData(to, from) {\n\t    var key, toVal, fromVal;\n\t    for (key in from) {\n\t      toVal = to[key];\n\t      fromVal = from[key];\n\t      if (!hasOwn(to, key)) {\n\t        set(to, key, fromVal);\n\t      } else if (isObject(toVal) && isObject(fromVal)) {\n\t        mergeData(toVal, fromVal);\n\t      }\n\t    }\n\t    return to;\n\t  }\n\t\n\t  /**\n\t   * Data\n\t   */\n\t\n\t  strats.data = function (parentVal, childVal, vm) {\n\t    if (!vm) {\n\t      // in a Vue.extend merge, both should be functions\n\t      if (!childVal) {\n\t        return parentVal;\n\t      }\n\t      if (typeof childVal !== 'function') {\n\t        'development' !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t        return parentVal;\n\t      }\n\t      if (!parentVal) {\n\t        return childVal;\n\t      }\n\t      // when parentVal & childVal are both present,\n\t      // we need to return a function that returns the\n\t      // merged result of both functions... no need to\n\t      // check if parentVal is a function here because\n\t      // it has to be a function to pass previous merges.\n\t      return function mergedDataFn() {\n\t        return mergeData(childVal.call(this), parentVal.call(this));\n\t      };\n\t    } else if (parentVal || childVal) {\n\t      return function mergedInstanceDataFn() {\n\t        // instance merge\n\t        var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t        var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t        if (instanceData) {\n\t          return mergeData(instanceData, defaultData);\n\t        } else {\n\t          return defaultData;\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  /**\n\t   * El\n\t   */\n\t\n\t  strats.el = function (parentVal, childVal, vm) {\n\t    if (!vm && childVal && typeof childVal !== 'function') {\n\t      'development' !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return;\n\t    }\n\t    var ret = childVal || parentVal;\n\t    // invoke the element factory if this is instance merge\n\t    return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t  };\n\t\n\t  /**\n\t   * Hooks and param attributes are merged as arrays.\n\t   */\n\t\n\t  strats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n\t    return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t  };\n\t\n\t  /**\n\t   * 0.11 deprecation warning\n\t   */\n\t\n\t  strats.paramAttributes = function () {\n\t    /* istanbul ignore next */\n\t    'development' !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t  };\n\t\n\t  /**\n\t   * Assets\n\t   *\n\t   * When a vm is present (instance creation), we need to do\n\t   * a three-way merge between constructor options, instance\n\t   * options and parent options.\n\t   */\n\t\n\t  function mergeAssets(parentVal, childVal) {\n\t    var res = Object.create(parentVal);\n\t    return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t  }\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    strats[type + 's'] = mergeAssets;\n\t  });\n\t\n\t  /**\n\t   * Events & Watchers.\n\t   *\n\t   * Events & watchers hashes should not overwrite one\n\t   * another, so we merge them as arrays.\n\t   */\n\t\n\t  strats.watch = strats.events = function (parentVal, childVal) {\n\t    if (!childVal) return parentVal;\n\t    if (!parentVal) return childVal;\n\t    var ret = {};\n\t    extend(ret, parentVal);\n\t    for (var key in childVal) {\n\t      var parent = ret[key];\n\t      var child = childVal[key];\n\t      if (parent && !isArray(parent)) {\n\t        parent = [parent];\n\t      }\n\t      ret[key] = parent ? parent.concat(child) : [child];\n\t    }\n\t    return ret;\n\t  };\n\t\n\t  /**\n\t   * Other object hashes.\n\t   */\n\t\n\t  strats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t    if (!childVal) return parentVal;\n\t    if (!parentVal) return childVal;\n\t    var ret = Object.create(null);\n\t    extend(ret, parentVal);\n\t    extend(ret, childVal);\n\t    return ret;\n\t  };\n\t\n\t  /**\n\t   * Default strategy.\n\t   */\n\t\n\t  var defaultStrat = function defaultStrat(parentVal, childVal) {\n\t    return childVal === undefined ? parentVal : childVal;\n\t  };\n\t\n\t  /**\n\t   * Make sure component options get converted to actual\n\t   * constructors.\n\t   *\n\t   * @param {Object} options\n\t   */\n\t\n\t  function guardComponents(options) {\n\t    if (options.components) {\n\t      var components = options.components = guardArrayAssets(options.components);\n\t      var def;\n\t      var ids = Object.keys(components);\n\t      for (var i = 0, l = ids.length; i < l; i++) {\n\t        var key = ids[i];\n\t        if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t          'development' !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t          continue;\n\t        }\n\t        def = components[key];\n\t        if (isPlainObject(def)) {\n\t          components[key] = Vue.extend(def);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Ensure all props option syntax are normalized into the\n\t   * Object-based format.\n\t   *\n\t   * @param {Object} options\n\t   */\n\t\n\t  function guardProps(options) {\n\t    var props = options.props;\n\t    var i, val;\n\t    if (isArray(props)) {\n\t      options.props = {};\n\t      i = props.length;\n\t      while (i--) {\n\t        val = props[i];\n\t        if (typeof val === 'string') {\n\t          options.props[val] = null;\n\t        } else if (val.name) {\n\t          options.props[val.name] = val;\n\t        }\n\t      }\n\t    } else if (isPlainObject(props)) {\n\t      var keys = Object.keys(props);\n\t      i = keys.length;\n\t      while (i--) {\n\t        val = props[keys[i]];\n\t        if (typeof val === 'function') {\n\t          props[keys[i]] = { type: val };\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Guard an Array-format assets option and converted it\n\t   * into the key-value Object format.\n\t   *\n\t   * @param {Object|Array} assets\n\t   * @return {Object}\n\t   */\n\t\n\t  function guardArrayAssets(assets) {\n\t    if (isArray(assets)) {\n\t      var res = {};\n\t      var i = assets.length;\n\t      var asset;\n\t      while (i--) {\n\t        asset = assets[i];\n\t        var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t        if (!id) {\n\t          'development' !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t        } else {\n\t          res[id] = asset;\n\t        }\n\t      }\n\t      return res;\n\t    }\n\t    return assets;\n\t  }\n\t\n\t  /**\n\t   * Merge two option objects into a new one.\n\t   * Core utility used in both instantiation and inheritance.\n\t   *\n\t   * @param {Object} parent\n\t   * @param {Object} child\n\t   * @param {Vue} [vm] - if vm is present, indicates this is\n\t   *                     an instantiation merge.\n\t   */\n\t\n\t  function mergeOptions(parent, child, vm) {\n\t    guardComponents(child);\n\t    guardProps(child);\n\t    var options = {};\n\t    var key;\n\t    if (child.mixins) {\n\t      for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t        parent = mergeOptions(parent, child.mixins[i], vm);\n\t      }\n\t    }\n\t    for (key in parent) {\n\t      mergeField(key);\n\t    }\n\t    for (key in child) {\n\t      if (!hasOwn(parent, key)) {\n\t        mergeField(key);\n\t      }\n\t    }\n\t    function mergeField(key) {\n\t      var strat = strats[key] || defaultStrat;\n\t      options[key] = strat(parent[key], child[key], vm, key);\n\t    }\n\t    return options;\n\t  }\n\t\n\t  /**\n\t   * Resolve an asset.\n\t   * This function is used because child instances need access\n\t   * to assets defined in its ancestor chain.\n\t   *\n\t   * @param {Object} options\n\t   * @param {String} type\n\t   * @param {String} id\n\t   * @return {Object|Function}\n\t   */\n\t\n\t  function resolveAsset(options, type, id) {\n\t    var assets = options[type];\n\t    var camelizedId;\n\t    return assets[id] ||\n\t    // camelCase ID\n\t    assets[camelizedId = camelize(id)] ||\n\t    // Pascal Case ID\n\t    assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  }\n\t\n\t  /**\n\t   * Assert asset exists\n\t   */\n\t\n\t  function assertAsset(val, type, id) {\n\t    if (!val) {\n\t      'development' !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t    }\n\t  }\n\t\n\t  var arrayProto = Array.prototype;\n\t  var arrayMethods = Object.create(arrayProto)\n\t\n\t  /**\n\t   * Intercept mutating methods and emit events\n\t   */\n\t\n\t  ;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t    // cache original method\n\t    var original = arrayProto[method];\n\t    def(arrayMethods, method, function mutator() {\n\t      // avoid leaking arguments:\n\t      // http://jsperf.com/closure-with-arguments\n\t      var i = arguments.length;\n\t      var args = new Array(i);\n\t      while (i--) {\n\t        args[i] = arguments[i];\n\t      }\n\t      var result = original.apply(this, args);\n\t      var ob = this.__ob__;\n\t      var inserted;\n\t      switch (method) {\n\t        case 'push':\n\t          inserted = args;\n\t          break;\n\t        case 'unshift':\n\t          inserted = args;\n\t          break;\n\t        case 'splice':\n\t          inserted = args.slice(2);\n\t          break;\n\t      }\n\t      if (inserted) ob.observeArray(inserted);\n\t      // notify change\n\t      ob.dep.notify();\n\t      return result;\n\t    });\n\t  });\n\t\n\t  /**\n\t   * Swap the element at the given index with a new value\n\t   * and emits corresponding event.\n\t   *\n\t   * @param {Number} index\n\t   * @param {*} val\n\t   * @return {*} - replaced element\n\t   */\n\t\n\t  def(arrayProto, '$set', function $set(index, val) {\n\t    if (index >= this.length) {\n\t      this.length = Number(index) + 1;\n\t    }\n\t    return this.splice(index, 1, val)[0];\n\t  });\n\t\n\t  /**\n\t   * Convenience method to remove the element at given index.\n\t   *\n\t   * @param {Number} index\n\t   * @param {*} val\n\t   */\n\t\n\t  def(arrayProto, '$remove', function $remove(item) {\n\t    /* istanbul ignore if */\n\t    if (!this.length) return;\n\t    var index = indexOf(this, item);\n\t    if (index > -1) {\n\t      return this.splice(index, 1);\n\t    }\n\t  });\n\t\n\t  var uid$3 = 0;\n\t\n\t  /**\n\t   * A dep is an observable that can have multiple\n\t   * directives subscribing to it.\n\t   *\n\t   * @constructor\n\t   */\n\t  function Dep() {\n\t    this.id = uid$3++;\n\t    this.subs = [];\n\t  }\n\t\n\t  // the current target watcher being evaluated.\n\t  // this is globally unique because there could be only one\n\t  // watcher being evaluated at any time.\n\t  Dep.target = null;\n\t\n\t  /**\n\t   * Add a directive subscriber.\n\t   *\n\t   * @param {Directive} sub\n\t   */\n\t\n\t  Dep.prototype.addSub = function (sub) {\n\t    this.subs.push(sub);\n\t  };\n\t\n\t  /**\n\t   * Remove a directive subscriber.\n\t   *\n\t   * @param {Directive} sub\n\t   */\n\t\n\t  Dep.prototype.removeSub = function (sub) {\n\t    this.subs.$remove(sub);\n\t  };\n\t\n\t  /**\n\t   * Add self as a dependency to the target watcher.\n\t   */\n\t\n\t  Dep.prototype.depend = function () {\n\t    Dep.target.addDep(this);\n\t  };\n\t\n\t  /**\n\t   * Notify all subscribers of a new value.\n\t   */\n\t\n\t  Dep.prototype.notify = function () {\n\t    // stablize the subscriber list first\n\t    var subs = toArray(this.subs);\n\t    for (var i = 0, l = subs.length; i < l; i++) {\n\t      subs[i].update();\n\t    }\n\t  };\n\t\n\t  var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t  /**\n\t   * Observer class that are attached to each observed\n\t   * object. Once attached, the observer converts target\n\t   * object's property keys into getter/setters that\n\t   * collect dependencies and dispatches updates.\n\t   *\n\t   * @param {Array|Object} value\n\t   * @constructor\n\t   */\n\t\n\t  function Observer(value) {\n\t    this.value = value;\n\t    this.dep = new Dep();\n\t    def(value, '__ob__', this);\n\t    if (isArray(value)) {\n\t      var augment = hasProto ? protoAugment : copyAugment;\n\t      augment(value, arrayMethods, arrayKeys);\n\t      this.observeArray(value);\n\t    } else {\n\t      this.walk(value);\n\t    }\n\t  }\n\t\n\t  // Instance methods\n\t\n\t  /**\n\t   * Walk through each property and convert them into\n\t   * getter/setters. This method should only be called when\n\t   * value type is Object.\n\t   *\n\t   * @param {Object} obj\n\t   */\n\t\n\t  Observer.prototype.walk = function (obj) {\n\t    var keys = Object.keys(obj);\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      this.convert(keys[i], obj[keys[i]]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Observe a list of Array items.\n\t   *\n\t   * @param {Array} items\n\t   */\n\t\n\t  Observer.prototype.observeArray = function (items) {\n\t    for (var i = 0, l = items.length; i < l; i++) {\n\t      observe(items[i]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Convert a property into getter/setter so we can emit\n\t   * the events when the property is accessed/changed.\n\t   *\n\t   * @param {String} key\n\t   * @param {*} val\n\t   */\n\t\n\t  Observer.prototype.convert = function (key, val) {\n\t    defineReactive(this.value, key, val);\n\t  };\n\t\n\t  /**\n\t   * Add an owner vm, so that when $set/$delete mutations\n\t   * happen we can notify owner vms to proxy the keys and\n\t   * digest the watchers. This is only called when the object\n\t   * is observed as an instance's root $data.\n\t   *\n\t   * @param {Vue} vm\n\t   */\n\t\n\t  Observer.prototype.addVm = function (vm) {\n\t    (this.vms || (this.vms = [])).push(vm);\n\t  };\n\t\n\t  /**\n\t   * Remove an owner vm. This is called when the object is\n\t   * swapped out as an instance's $data object.\n\t   *\n\t   * @param {Vue} vm\n\t   */\n\t\n\t  Observer.prototype.removeVm = function (vm) {\n\t    this.vms.$remove(vm);\n\t  };\n\t\n\t  // helpers\n\t\n\t  /**\n\t   * Augment an target Object or Array by intercepting\n\t   * the prototype chain using __proto__\n\t   *\n\t   * @param {Object|Array} target\n\t   * @param {Object} proto\n\t   */\n\t\n\t  function protoAugment(target, src) {\n\t    target.__proto__ = src;\n\t  }\n\t\n\t  /**\n\t   * Augment an target Object or Array by defining\n\t   * hidden properties.\n\t   *\n\t   * @param {Object|Array} target\n\t   * @param {Object} proto\n\t   */\n\t\n\t  function copyAugment(target, src, keys) {\n\t    for (var i = 0, l = keys.length; i < l; i++) {\n\t      var key = keys[i];\n\t      def(target, key, src[key]);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Attempt to create an observer instance for a value,\n\t   * returns the new observer if successfully observed,\n\t   * or the existing observer if the value already has one.\n\t   *\n\t   * @param {*} value\n\t   * @param {Vue} [vm]\n\t   * @return {Observer|undefined}\n\t   * @static\n\t   */\n\t\n\t  function observe(value, vm) {\n\t    if (!value || typeof value !== 'object') {\n\t      return;\n\t    }\n\t    var ob;\n\t    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t      ob = value.__ob__;\n\t    } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t      ob = new Observer(value);\n\t    }\n\t    if (ob && vm) {\n\t      ob.addVm(vm);\n\t    }\n\t    return ob;\n\t  }\n\t\n\t  /**\n\t   * Define a reactive property on an Object.\n\t   *\n\t   * @param {Object} obj\n\t   * @param {String} key\n\t   * @param {*} val\n\t   */\n\t\n\t  function defineReactive(obj, key, val) {\n\t    var dep = new Dep();\n\t\n\t    // cater for pre-defined getter/setters\n\t    var getter, setter;\n\t    if (config.convertAllProperties) {\n\t      var property = Object.getOwnPropertyDescriptor(obj, key);\n\t      if (property && property.configurable === false) {\n\t        return;\n\t      }\n\t      getter = property && property.get;\n\t      setter = property && property.set;\n\t    }\n\t\n\t    var childOb = observe(val);\n\t    Object.defineProperty(obj, key, {\n\t      enumerable: true,\n\t      configurable: true,\n\t      get: function reactiveGetter() {\n\t        var value = getter ? getter.call(obj) : val;\n\t        if (Dep.target) {\n\t          dep.depend();\n\t          if (childOb) {\n\t            childOb.dep.depend();\n\t          }\n\t          if (isArray(value)) {\n\t            for (var e, i = 0, l = value.length; i < l; i++) {\n\t              e = value[i];\n\t              e && e.__ob__ && e.__ob__.dep.depend();\n\t            }\n\t          }\n\t        }\n\t        return value;\n\t      },\n\t      set: function reactiveSetter(newVal) {\n\t        var value = getter ? getter.call(obj) : val;\n\t        if (newVal === value) {\n\t          return;\n\t        }\n\t        if (setter) {\n\t          setter.call(obj, newVal);\n\t        } else {\n\t          val = newVal;\n\t        }\n\t        childOb = observe(newVal);\n\t        dep.notify();\n\t      }\n\t    });\n\t  }\n\t\n\t  var util = Object.freeze({\n\t  \tdefineReactive: defineReactive,\n\t  \tset: set,\n\t  \tdel: del,\n\t  \thasOwn: hasOwn,\n\t  \tisLiteral: isLiteral,\n\t  \tisReserved: isReserved,\n\t  \t_toString: _toString,\n\t  \ttoNumber: toNumber,\n\t  \ttoBoolean: toBoolean,\n\t  \tstripQuotes: stripQuotes,\n\t  \tcamelize: camelize,\n\t  \thyphenate: hyphenate,\n\t  \tclassify: classify,\n\t  \tbind: bind$1,\n\t  \ttoArray: toArray,\n\t  \textend: extend,\n\t  \tisObject: isObject,\n\t  \tisPlainObject: isPlainObject,\n\t  \tdef: def,\n\t  \tdebounce: _debounce,\n\t  \tindexOf: indexOf,\n\t  \tcancellable: cancellable,\n\t  \tlooseEqual: looseEqual,\n\t  \tisArray: isArray,\n\t  \thasProto: hasProto,\n\t  \tinBrowser: inBrowser,\n\t  \tisIE9: isIE9,\n\t  \tisAndroid: isAndroid,\n\t  \tget transitionProp () { return transitionProp; },\n\t  \tget transitionEndEvent () { return transitionEndEvent; },\n\t  \tget animationProp () { return animationProp; },\n\t  \tget animationEndEvent () { return animationEndEvent; },\n\t  \tnextTick: nextTick,\n\t  \tquery: query,\n\t  \tinDoc: inDoc,\n\t  \tgetAttr: getAttr,\n\t  \tgetBindAttr: getBindAttr,\n\t  \thasBindAttr: hasBindAttr,\n\t  \tbefore: before,\n\t  \tafter: after,\n\t  \tremove: remove,\n\t  \tprepend: prepend,\n\t  \treplace: replace,\n\t  \ton: on$1,\n\t  \toff: off,\n\t  \tsetClass: setClass,\n\t  \taddClass: addClass,\n\t  \tremoveClass: removeClass,\n\t  \textractContent: extractContent,\n\t  \ttrimNode: trimNode,\n\t  \tisTemplate: isTemplate,\n\t  \tcreateAnchor: createAnchor,\n\t  \tfindRef: findRef,\n\t  \tmapNodeRange: mapNodeRange,\n\t  \tremoveNodeRange: removeNodeRange,\n\t  \tmergeOptions: mergeOptions,\n\t  \tresolveAsset: resolveAsset,\n\t  \tassertAsset: assertAsset,\n\t  \tcheckComponentAttr: checkComponentAttr,\n\t  \tinitProp: initProp,\n\t  \tassertProp: assertProp,\n\t  \tcoerceProp: coerceProp,\n\t  \tcommonTagRE: commonTagRE,\n\t  \treservedTagRE: reservedTagRE,\n\t  \tget warn () { return warn; }\n\t  });\n\t\n\t  var uid = 0;\n\t\n\t  function initMixin (Vue) {\n\t\n\t    /**\n\t     * The main init sequence. This is called for every\n\t     * instance, including ones that are created from extended\n\t     * constructors.\n\t     *\n\t     * @param {Object} options - this options object should be\n\t     *                           the result of merging class\n\t     *                           options and the options passed\n\t     *                           in to the constructor.\n\t     */\n\t\n\t    Vue.prototype._init = function (options) {\n\t\n\t      options = options || {};\n\t\n\t      this.$el = null;\n\t      this.$parent = options.parent;\n\t      this.$root = this.$parent ? this.$parent.$root : this;\n\t      this.$children = [];\n\t      this.$refs = {}; // child vm references\n\t      this.$els = {}; // element references\n\t      this._watchers = []; // all watchers as an array\n\t      this._directives = []; // all directives\n\t\n\t      // a uid\n\t      this._uid = uid++;\n\t\n\t      // a flag to avoid this being observed\n\t      this._isVue = true;\n\t\n\t      // events bookkeeping\n\t      this._events = {}; // registered callbacks\n\t      this._eventsCount = {}; // for $broadcast optimization\n\t\n\t      // fragment instance properties\n\t      this._isFragment = false;\n\t      this._fragment = // @type {DocumentFragment}\n\t      this._fragmentStart = // @type {Text|Comment}\n\t      this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t      // lifecycle state\n\t      this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = false;\n\t      this._unlinkFn = null;\n\t\n\t      // context:\n\t      // if this is a transcluded component, context\n\t      // will be the common parent vm of this instance\n\t      // and its host.\n\t      this._context = options._context || this.$parent;\n\t\n\t      // scope:\n\t      // if this is inside an inline v-for, the scope\n\t      // will be the intermediate scope created for this\n\t      // repeat fragment. this is used for linking props\n\t      // and container directives.\n\t      this._scope = options._scope;\n\t\n\t      // fragment:\n\t      // if this instance is compiled inside a Fragment, it\n\t      // needs to reigster itself as a child of that fragment\n\t      // for attach/detach to work properly.\n\t      this._frag = options._frag;\n\t      if (this._frag) {\n\t        this._frag.children.push(this);\n\t      }\n\t\n\t      // push self into parent / transclusion host\n\t      if (this.$parent) {\n\t        this.$parent.$children.push(this);\n\t      }\n\t\n\t      // merge options.\n\t      options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t      // set ref\n\t      this._updateRef();\n\t\n\t      // initialize data as empty object.\n\t      // it will be filled up in _initScope().\n\t      this._data = {};\n\t\n\t      // call init hook\n\t      this._callHook('init');\n\t\n\t      // initialize data observation and scope inheritance.\n\t      this._initState();\n\t\n\t      // setup event system and option events.\n\t      this._initEvents();\n\t\n\t      // call created hook\n\t      this._callHook('created');\n\t\n\t      // if `el` option is passed, start compilation.\n\t      if (options.el) {\n\t        this.$mount(options.el);\n\t      }\n\t    };\n\t  }\n\t\n\t  var pathCache = new Cache(1000);\n\t\n\t  // actions\n\t  var APPEND = 0;\n\t  var PUSH = 1;\n\t  var INC_SUB_PATH_DEPTH = 2;\n\t  var PUSH_SUB_PATH = 3;\n\t\n\t  // states\n\t  var BEFORE_PATH = 0;\n\t  var IN_PATH = 1;\n\t  var BEFORE_IDENT = 2;\n\t  var IN_IDENT = 3;\n\t  var IN_SUB_PATH = 4;\n\t  var IN_SINGLE_QUOTE = 5;\n\t  var IN_DOUBLE_QUOTE = 6;\n\t  var AFTER_PATH = 7;\n\t  var ERROR = 8;\n\t\n\t  var pathStateMachine = [];\n\t\n\t  pathStateMachine[BEFORE_PATH] = {\n\t    'ws': [BEFORE_PATH],\n\t    'ident': [IN_IDENT, APPEND],\n\t    '[': [IN_SUB_PATH],\n\t    'eof': [AFTER_PATH]\n\t  };\n\t\n\t  pathStateMachine[IN_PATH] = {\n\t    'ws': [IN_PATH],\n\t    '.': [BEFORE_IDENT],\n\t    '[': [IN_SUB_PATH],\n\t    'eof': [AFTER_PATH]\n\t  };\n\t\n\t  pathStateMachine[BEFORE_IDENT] = {\n\t    'ws': [BEFORE_IDENT],\n\t    'ident': [IN_IDENT, APPEND]\n\t  };\n\t\n\t  pathStateMachine[IN_IDENT] = {\n\t    'ident': [IN_IDENT, APPEND],\n\t    '0': [IN_IDENT, APPEND],\n\t    'number': [IN_IDENT, APPEND],\n\t    'ws': [IN_PATH, PUSH],\n\t    '.': [BEFORE_IDENT, PUSH],\n\t    '[': [IN_SUB_PATH, PUSH],\n\t    'eof': [AFTER_PATH, PUSH]\n\t  };\n\t\n\t  pathStateMachine[IN_SUB_PATH] = {\n\t    \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t    '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t    '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t    ']': [IN_PATH, PUSH_SUB_PATH],\n\t    'eof': ERROR,\n\t    'else': [IN_SUB_PATH, APPEND]\n\t  };\n\t\n\t  pathStateMachine[IN_SINGLE_QUOTE] = {\n\t    \"'\": [IN_SUB_PATH, APPEND],\n\t    'eof': ERROR,\n\t    'else': [IN_SINGLE_QUOTE, APPEND]\n\t  };\n\t\n\t  pathStateMachine[IN_DOUBLE_QUOTE] = {\n\t    '\"': [IN_SUB_PATH, APPEND],\n\t    'eof': ERROR,\n\t    'else': [IN_DOUBLE_QUOTE, APPEND]\n\t  };\n\t\n\t  /**\n\t   * Determine the type of a character in a keypath.\n\t   *\n\t   * @param {Char} ch\n\t   * @return {String} type\n\t   */\n\t\n\t  function getPathCharType(ch) {\n\t    if (ch === undefined) {\n\t      return 'eof';\n\t    }\n\t\n\t    var code = ch.charCodeAt(0);\n\t\n\t    switch (code) {\n\t      case 0x5B: // [\n\t      case 0x5D: // ]\n\t      case 0x2E: // .\n\t      case 0x22: // \"\n\t      case 0x27: // '\n\t      case 0x30:\n\t        // 0\n\t        return ch;\n\t\n\t      case 0x5F: // _\n\t      case 0x24:\n\t        // $\n\t        return 'ident';\n\t\n\t      case 0x20: // Space\n\t      case 0x09: // Tab\n\t      case 0x0A: // Newline\n\t      case 0x0D: // Return\n\t      case 0xA0: // No-break space\n\t      case 0xFEFF: // Byte Order Mark\n\t      case 0x2028: // Line Separator\n\t      case 0x2029:\n\t        // Paragraph Separator\n\t        return 'ws';\n\t    }\n\t\n\t    // a-z, A-Z\n\t    if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t      return 'ident';\n\t    }\n\t\n\t    // 1-9\n\t    if (code >= 0x31 && code <= 0x39) {\n\t      return 'number';\n\t    }\n\t\n\t    return 'else';\n\t  }\n\t\n\t  /**\n\t   * Format a subPath, return its plain form if it is\n\t   * a literal string or number. Otherwise prepend the\n\t   * dynamic indicator (*).\n\t   *\n\t   * @param {String} path\n\t   * @return {String}\n\t   */\n\t\n\t  function formatSubPath(path) {\n\t    var trimmed = path.trim();\n\t    // invalid leading 0\n\t    if (path.charAt(0) === '0' && isNaN(path)) {\n\t      return false;\n\t    }\n\t    return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t  }\n\t\n\t  /**\n\t   * Parse a string path into an array of segments\n\t   *\n\t   * @param {String} path\n\t   * @return {Array|undefined}\n\t   */\n\t\n\t  function parse(path) {\n\t    var keys = [];\n\t    var index = -1;\n\t    var mode = BEFORE_PATH;\n\t    var subPathDepth = 0;\n\t    var c, newChar, key, type, transition, action, typeMap;\n\t\n\t    var actions = [];\n\t\n\t    actions[PUSH] = function () {\n\t      if (key !== undefined) {\n\t        keys.push(key);\n\t        key = undefined;\n\t      }\n\t    };\n\t\n\t    actions[APPEND] = function () {\n\t      if (key === undefined) {\n\t        key = newChar;\n\t      } else {\n\t        key += newChar;\n\t      }\n\t    };\n\t\n\t    actions[INC_SUB_PATH_DEPTH] = function () {\n\t      actions[APPEND]();\n\t      subPathDepth++;\n\t    };\n\t\n\t    actions[PUSH_SUB_PATH] = function () {\n\t      if (subPathDepth > 0) {\n\t        subPathDepth--;\n\t        mode = IN_SUB_PATH;\n\t        actions[APPEND]();\n\t      } else {\n\t        subPathDepth = 0;\n\t        key = formatSubPath(key);\n\t        if (key === false) {\n\t          return false;\n\t        } else {\n\t          actions[PUSH]();\n\t        }\n\t      }\n\t    };\n\t\n\t    function maybeUnescapeQuote() {\n\t      var nextChar = path[index + 1];\n\t      if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t        index++;\n\t        newChar = '\\\\' + nextChar;\n\t        actions[APPEND]();\n\t        return true;\n\t      }\n\t    }\n\t\n\t    while (mode != null) {\n\t      index++;\n\t      c = path[index];\n\t\n\t      if (c === '\\\\' && maybeUnescapeQuote()) {\n\t        continue;\n\t      }\n\t\n\t      type = getPathCharType(c);\n\t      typeMap = pathStateMachine[mode];\n\t      transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t      if (transition === ERROR) {\n\t        return; // parse error\n\t      }\n\t\n\t      mode = transition[0];\n\t      action = actions[transition[1]];\n\t      if (action) {\n\t        newChar = transition[2];\n\t        newChar = newChar === undefined ? c : newChar;\n\t        if (action() === false) {\n\t          return;\n\t        }\n\t      }\n\t\n\t      if (mode === AFTER_PATH) {\n\t        keys.raw = path;\n\t        return keys;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * External parse that check for a cache hit first\n\t   *\n\t   * @param {String} path\n\t   * @return {Array|undefined}\n\t   */\n\t\n\t  function parsePath(path) {\n\t    var hit = pathCache.get(path);\n\t    if (!hit) {\n\t      hit = parse(path);\n\t      if (hit) {\n\t        pathCache.put(path, hit);\n\t      }\n\t    }\n\t    return hit;\n\t  }\n\t\n\t  /**\n\t   * Get from an object from a path string\n\t   *\n\t   * @param {Object} obj\n\t   * @param {String} path\n\t   */\n\t\n\t  function getPath(obj, path) {\n\t    return parseExpression(path).get(obj);\n\t  }\n\t\n\t  /**\n\t   * Warn against setting non-existent root path on a vm.\n\t   */\n\t\n\t  var warnNonExistent;\n\t  if (true) {\n\t    warnNonExistent = function (path) {\n\t      warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Set on an object from a path\n\t   *\n\t   * @param {Object} obj\n\t   * @param {String | Array} path\n\t   * @param {*} val\n\t   */\n\t\n\t  function setPath(obj, path, val) {\n\t    var original = obj;\n\t    if (typeof path === 'string') {\n\t      path = parse(path);\n\t    }\n\t    if (!path || !isObject(obj)) {\n\t      return false;\n\t    }\n\t    var last, key;\n\t    for (var i = 0, l = path.length; i < l; i++) {\n\t      last = obj;\n\t      key = path[i];\n\t      if (key.charAt(0) === '*') {\n\t        key = parseExpression(key.slice(1)).get.call(original, original);\n\t      }\n\t      if (i < l - 1) {\n\t        obj = obj[key];\n\t        if (!isObject(obj)) {\n\t          obj = {};\n\t          if ('development' !== 'production' && last._isVue) {\n\t            warnNonExistent(path);\n\t          }\n\t          set(last, key, obj);\n\t        }\n\t      } else {\n\t        if (isArray(obj)) {\n\t          obj.$set(key, val);\n\t        } else if (key in obj) {\n\t          obj[key] = val;\n\t        } else {\n\t          if ('development' !== 'production' && obj._isVue) {\n\t            warnNonExistent(path);\n\t          }\n\t          set(obj, key, val);\n\t        }\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  var path = Object.freeze({\n\t    parsePath: parsePath,\n\t    getPath: getPath,\n\t    setPath: setPath\n\t  });\n\t\n\t  var expressionCache = new Cache(1000);\n\t\n\t  var allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\t  var allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t  // keywords that don't make sense inside expressions\n\t  var improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\n\t  var improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t  var wsRE = /\\s/g;\n\t  var newlineRE = /\\n/g;\n\t  var saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\n\t  var restoreRE = /\"(\\d+)\"/g;\n\t  var pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\t  var identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\t  var booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t  /**\n\t   * Save / Rewrite / Restore\n\t   *\n\t   * When rewriting paths found in an expression, it is\n\t   * possible for the same letter sequences to be found in\n\t   * strings and Object literal property keys. Therefore we\n\t   * remove and store these parts in a temporary array, and\n\t   * restore them after the path rewrite.\n\t   */\n\t\n\t  var saved = [];\n\t\n\t  /**\n\t   * Save replacer\n\t   *\n\t   * The save regex can match two possible cases:\n\t   * 1. An opening object literal\n\t   * 2. A string\n\t   * If matched as a plain string, we need to escape its\n\t   * newlines, since the string needs to be preserved when\n\t   * generating the function body.\n\t   *\n\t   * @param {String} str\n\t   * @param {String} isString - str if matched as a string\n\t   * @return {String} - placeholder with index\n\t   */\n\t\n\t  function save(str, isString) {\n\t    var i = saved.length;\n\t    saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t    return '\"' + i + '\"';\n\t  }\n\t\n\t  /**\n\t   * Path rewrite replacer\n\t   *\n\t   * @param {String} raw\n\t   * @return {String}\n\t   */\n\t\n\t  function rewrite(raw) {\n\t    var c = raw.charAt(0);\n\t    var path = raw.slice(1);\n\t    if (allowedKeywordsRE.test(path)) {\n\t      return raw;\n\t    } else {\n\t      path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t      return c + 'scope.' + path;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Restore replacer\n\t   *\n\t   * @param {String} str\n\t   * @param {String} i - matched save index\n\t   * @return {String}\n\t   */\n\t\n\t  function restore(str, i) {\n\t    return saved[i];\n\t  }\n\t\n\t  /**\n\t   * Rewrite an expression, prefixing all path accessors with\n\t   * `scope.` and generate getter/setter functions.\n\t   *\n\t   * @param {String} exp\n\t   * @return {Function}\n\t   */\n\t\n\t  function compileGetter(exp) {\n\t    if (improperKeywordsRE.test(exp)) {\n\t      'development' !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t    }\n\t    // reset state\n\t    saved.length = 0;\n\t    // save strings and object literal keys\n\t    var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t    // rewrite all paths\n\t    // pad 1 space here becaue the regex matches 1 extra char\n\t    body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t    return makeGetterFn(body);\n\t  }\n\t\n\t  /**\n\t   * Build a getter function. Requires eval.\n\t   *\n\t   * We isolate the try/catch so it doesn't affect the\n\t   * optimization of the parse function when it is not called.\n\t   *\n\t   * @param {String} body\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  function makeGetterFn(body) {\n\t    try {\n\t      return new Function('scope', 'return ' + body + ';');\n\t    } catch (e) {\n\t      'development' !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Compile a setter function for the expression.\n\t   *\n\t   * @param {String} exp\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  function compileSetter(exp) {\n\t    var path = parsePath(exp);\n\t    if (path) {\n\t      return function (scope, val) {\n\t        setPath(scope, path, val);\n\t      };\n\t    } else {\n\t      'development' !== 'production' && warn('Invalid setter expression: ' + exp);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Parse an expression into re-written getter/setters.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} needSet\n\t   * @return {Function}\n\t   */\n\t\n\t  function parseExpression(exp, needSet) {\n\t    exp = exp.trim();\n\t    // try cache\n\t    var hit = expressionCache.get(exp);\n\t    if (hit) {\n\t      if (needSet && !hit.set) {\n\t        hit.set = compileSetter(hit.exp);\n\t      }\n\t      return hit;\n\t    }\n\t    var res = { exp: exp };\n\t    res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t    // optimized super simple getter\n\t    ? makeGetterFn('scope.' + exp)\n\t    // dynamic getter\n\t    : compileGetter(exp);\n\t    if (needSet) {\n\t      res.set = compileSetter(exp);\n\t    }\n\t    expressionCache.put(exp, res);\n\t    return res;\n\t  }\n\t\n\t  /**\n\t   * Check if an expression is a simple path.\n\t   *\n\t   * @param {String} exp\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isSimplePath(exp) {\n\t    return pathTestRE.test(exp) &&\n\t    // don't treat true/false as paths\n\t    !booleanLiteralRE.test(exp) &&\n\t    // Math constants e.g. Math.PI, Math.E etc.\n\t    exp.slice(0, 5) !== 'Math.';\n\t  }\n\t\n\t  var expression = Object.freeze({\n\t    parseExpression: parseExpression,\n\t    isSimplePath: isSimplePath\n\t  });\n\t\n\t  // we have two separate queues: one for directive updates\n\t  // and one for user watcher registered via $watch().\n\t  // we want to guarantee directive updates to be called\n\t  // before user watchers so that when user watchers are\n\t  // triggered, the DOM would have already been in updated\n\t  // state.\n\t  var queue = [];\n\t  var userQueue = [];\n\t  var has = {};\n\t  var circular = {};\n\t  var waiting = false;\n\t  var internalQueueDepleted = false;\n\t\n\t  /**\n\t   * Reset the batcher's state.\n\t   */\n\t\n\t  function resetBatcherState() {\n\t    queue = [];\n\t    userQueue = [];\n\t    has = {};\n\t    circular = {};\n\t    waiting = internalQueueDepleted = false;\n\t  }\n\t\n\t  /**\n\t   * Flush both queues and run the watchers.\n\t   */\n\t\n\t  function flushBatcherQueue() {\n\t    runBatcherQueue(queue);\n\t    internalQueueDepleted = true;\n\t    runBatcherQueue(userQueue);\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (true) {\n\t      if (inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n\t        window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('flush');\n\t      }\n\t    }\n\t    resetBatcherState();\n\t  }\n\t\n\t  /**\n\t   * Run the watchers in a single queue.\n\t   *\n\t   * @param {Array} queue\n\t   */\n\t\n\t  function runBatcherQueue(queue) {\n\t    // do not cache length because more watchers might be pushed\n\t    // as we run existing watchers\n\t    for (var i = 0; i < queue.length; i++) {\n\t      var watcher = queue[i];\n\t      var id = watcher.id;\n\t      has[id] = null;\n\t      watcher.run();\n\t      // in dev build, check and stop circular updates.\n\t      if ('development' !== 'production' && has[id] != null) {\n\t        circular[id] = (circular[id] || 0) + 1;\n\t        if (circular[id] > config._maxUpdateCount) {\n\t          queue.splice(has[id], 1);\n\t          warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Push a watcher into the watcher queue.\n\t   * Jobs with duplicate IDs will be skipped unless it's\n\t   * pushed when the queue is being flushed.\n\t   *\n\t   * @param {Watcher} watcher\n\t   *   properties:\n\t   *   - {Number} id\n\t   *   - {Function} run\n\t   */\n\t\n\t  function pushWatcher(watcher) {\n\t    var id = watcher.id;\n\t    if (has[id] == null) {\n\t      // if an internal watcher is pushed, but the internal\n\t      // queue is already depleted, we run it immediately.\n\t      if (internalQueueDepleted && !watcher.user) {\n\t        watcher.run();\n\t        return;\n\t      }\n\t      // push watcher into appropriate queue\n\t      var q = watcher.user ? userQueue : queue;\n\t      has[id] = q.length;\n\t      q.push(watcher);\n\t      // queue the flush\n\t      if (!waiting) {\n\t        waiting = true;\n\t        nextTick(flushBatcherQueue);\n\t      }\n\t    }\n\t  }\n\t\n\t  var uid$2 = 0;\n\t\n\t  /**\n\t   * A watcher parses an expression, collects dependencies,\n\t   * and fires callback when the expression value changes.\n\t   * This is used for both the $watch() api and directives.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} expression\n\t   * @param {Function} cb\n\t   * @param {Object} options\n\t   *                 - {Array} filters\n\t   *                 - {Boolean} twoWay\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} user\n\t   *                 - {Boolean} sync\n\t   *                 - {Boolean} lazy\n\t   *                 - {Function} [preProcess]\n\t   *                 - {Function} [postProcess]\n\t   * @constructor\n\t   */\n\t  function Watcher(vm, expOrFn, cb, options) {\n\t    // mix in options\n\t    if (options) {\n\t      extend(this, options);\n\t    }\n\t    var isFn = typeof expOrFn === 'function';\n\t    this.vm = vm;\n\t    vm._watchers.push(this);\n\t    this.expression = isFn ? expOrFn.toString() : expOrFn;\n\t    this.cb = cb;\n\t    this.id = ++uid$2; // uid for batching\n\t    this.active = true;\n\t    this.dirty = this.lazy; // for lazy watchers\n\t    this.deps = Object.create(null);\n\t    this.newDeps = null;\n\t    this.prevError = null; // for async error stacks\n\t    // parse expression for getter/setter\n\t    if (isFn) {\n\t      this.getter = expOrFn;\n\t      this.setter = undefined;\n\t    } else {\n\t      var res = parseExpression(expOrFn, this.twoWay);\n\t      this.getter = res.get;\n\t      this.setter = res.set;\n\t    }\n\t    this.value = this.lazy ? undefined : this.get();\n\t    // state for avoiding false triggers for deep and Array\n\t    // watchers during vm._digest()\n\t    this.queued = this.shallow = false;\n\t  }\n\t\n\t  /**\n\t   * Add a dependency to this directive.\n\t   *\n\t   * @param {Dep} dep\n\t   */\n\t\n\t  Watcher.prototype.addDep = function (dep) {\n\t    var id = dep.id;\n\t    if (!this.newDeps[id]) {\n\t      this.newDeps[id] = dep;\n\t      if (!this.deps[id]) {\n\t        this.deps[id] = dep;\n\t        dep.addSub(this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Evaluate the getter, and re-collect dependencies.\n\t   */\n\t\n\t  Watcher.prototype.get = function () {\n\t    this.beforeGet();\n\t    var scope = this.scope || this.vm;\n\t    var value;\n\t    try {\n\t      value = this.getter.call(scope, scope);\n\t    } catch (e) {\n\t      if ('development' !== 'production' && config.warnExpressionErrors) {\n\t        warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t      }\n\t    }\n\t    // \"touch\" every property so they are all tracked as\n\t    // dependencies for deep watching\n\t    if (this.deep) {\n\t      traverse(value);\n\t    }\n\t    if (this.preProcess) {\n\t      value = this.preProcess(value);\n\t    }\n\t    if (this.filters) {\n\t      value = scope._applyFilters(value, null, this.filters, false);\n\t    }\n\t    if (this.postProcess) {\n\t      value = this.postProcess(value);\n\t    }\n\t    this.afterGet();\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Set the corresponding value with the setter.\n\t   *\n\t   * @param {*} value\n\t   */\n\t\n\t  Watcher.prototype.set = function (value) {\n\t    var scope = this.scope || this.vm;\n\t    if (this.filters) {\n\t      value = scope._applyFilters(value, this.value, this.filters, true);\n\t    }\n\t    try {\n\t      this.setter.call(scope, scope, value);\n\t    } catch (e) {\n\t      if ('development' !== 'production' && config.warnExpressionErrors) {\n\t        warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t      }\n\t    }\n\t    // two-way sync for v-for alias\n\t    var forContext = scope.$forContext;\n\t    if (forContext && forContext.alias === this.expression) {\n\t      if (forContext.filters) {\n\t        'development' !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t        return;\n\t      }\n\t      forContext._withLock(function () {\n\t        if (scope.$key) {\n\t          // original is an object\n\t          forContext.rawValue[scope.$key] = value;\n\t        } else {\n\t          forContext.rawValue.$set(scope.$index, value);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Prepare for dependency collection.\n\t   */\n\t\n\t  Watcher.prototype.beforeGet = function () {\n\t    Dep.target = this;\n\t    this.newDeps = Object.create(null);\n\t  };\n\t\n\t  /**\n\t   * Clean up for dependency collection.\n\t   */\n\t\n\t  Watcher.prototype.afterGet = function () {\n\t    Dep.target = null;\n\t    var ids = Object.keys(this.deps);\n\t    var i = ids.length;\n\t    while (i--) {\n\t      var id = ids[i];\n\t      if (!this.newDeps[id]) {\n\t        this.deps[id].removeSub(this);\n\t      }\n\t    }\n\t    this.deps = this.newDeps;\n\t  };\n\t\n\t  /**\n\t   * Subscriber interface.\n\t   * Will be called when a dependency changes.\n\t   *\n\t   * @param {Boolean} shallow\n\t   */\n\t\n\t  Watcher.prototype.update = function (shallow) {\n\t    if (this.lazy) {\n\t      this.dirty = true;\n\t    } else if (this.sync || !config.async) {\n\t      this.run();\n\t    } else {\n\t      // if queued, only overwrite shallow with non-shallow,\n\t      // but not the other way around.\n\t      this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t      this.queued = true;\n\t      // record before-push error stack in debug mode\n\t      /* istanbul ignore if */\n\t      if ('development' !== 'production' && config.debug) {\n\t        this.prevError = new Error('[vue] async stack trace');\n\t      }\n\t      pushWatcher(this);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Batcher job interface.\n\t   * Will be called by the batcher.\n\t   */\n\t\n\t  Watcher.prototype.run = function () {\n\t    if (this.active) {\n\t      var value = this.get();\n\t      if (value !== this.value ||\n\t      // Deep watchers and watchers on Object/Arrays should fire even\n\t      // when the value is the same, because the value may\n\t      // have mutated; but only do so if this is a\n\t      // non-shallow update (caused by a vm digest).\n\t      (isObject(value) || this.deep) && !this.shallow) {\n\t        // set new value\n\t        var oldValue = this.value;\n\t        this.value = value;\n\t        // in debug + async mode, when a watcher callbacks\n\t        // throws, we also throw the saved before-push error\n\t        // so the full cross-tick stack trace is available.\n\t        var prevError = this.prevError;\n\t        /* istanbul ignore if */\n\t        if ('development' !== 'production' && config.debug && prevError) {\n\t          this.prevError = null;\n\t          try {\n\t            this.cb.call(this.vm, value, oldValue);\n\t          } catch (e) {\n\t            nextTick(function () {\n\t              throw prevError;\n\t            }, 0);\n\t            throw e;\n\t          }\n\t        } else {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        }\n\t      }\n\t      this.queued = this.shallow = false;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Evaluate the value of the watcher.\n\t   * This only gets called for lazy watchers.\n\t   */\n\t\n\t  Watcher.prototype.evaluate = function () {\n\t    // avoid overwriting another watcher that is being\n\t    // collected.\n\t    var current = Dep.target;\n\t    this.value = this.get();\n\t    this.dirty = false;\n\t    Dep.target = current;\n\t  };\n\t\n\t  /**\n\t   * Depend on all deps collected by this watcher.\n\t   */\n\t\n\t  Watcher.prototype.depend = function () {\n\t    var depIds = Object.keys(this.deps);\n\t    var i = depIds.length;\n\t    while (i--) {\n\t      this.deps[depIds[i]].depend();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Remove self from all dependencies' subcriber list.\n\t   */\n\t\n\t  Watcher.prototype.teardown = function () {\n\t    if (this.active) {\n\t      // remove self from vm's watcher list\n\t      // we can skip this if the vm if being destroyed\n\t      // which can improve teardown performance.\n\t      if (!this.vm._isBeingDestroyed) {\n\t        this.vm._watchers.$remove(this);\n\t      }\n\t      var depIds = Object.keys(this.deps);\n\t      var i = depIds.length;\n\t      while (i--) {\n\t        this.deps[depIds[i]].removeSub(this);\n\t      }\n\t      this.active = false;\n\t      this.vm = this.cb = this.value = null;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Recrusively traverse an object to evoke all converted\n\t   * getters, so that every nested property inside the object\n\t   * is collected as a \"deep\" dependency.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function traverse(val) {\n\t    var i, keys;\n\t    if (isArray(val)) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i]);\n\t    } else if (isObject(val)) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]]);\n\t    }\n\t  }\n\t\n\t  var cloak = {\n\t    bind: function bind() {\n\t      var el = this.el;\n\t      this.vm.$once('pre-hook:compiled', function () {\n\t        el.removeAttribute('v-cloak');\n\t      });\n\t    }\n\t  };\n\t\n\t  var ref = {\n\t    bind: function bind() {\n\t      'development' !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t    }\n\t  };\n\t\n\t  var ON = 700;\n\t  var MODEL = 800;\n\t  var BIND = 850;\n\t  var TRANSITION = 1100;\n\t  var EL = 1500;\n\t  var COMPONENT = 1500;\n\t  var PARTIAL = 1750;\n\t  var SLOT = 1750;\n\t  var FOR = 2000;\n\t  var IF = 2000;\n\t\n\t  var el = {\n\t\n\t    priority: EL,\n\t\n\t    bind: function bind() {\n\t      /* istanbul ignore if */\n\t      if (!this.arg) {\n\t        return;\n\t      }\n\t      var id = this.id = camelize(this.arg);\n\t      var refs = (this._scope || this.vm).$els;\n\t      if (hasOwn(refs, id)) {\n\t        refs[id] = this.el;\n\t      } else {\n\t        defineReactive(refs, id, this.el);\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      var refs = (this._scope || this.vm).$els;\n\t      if (refs[this.id] === this.el) {\n\t        refs[this.id] = null;\n\t      }\n\t    }\n\t  };\n\t\n\t  var prefixes = ['-webkit-', '-moz-', '-ms-'];\n\t  var camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\t  var importantRE = /!important;?$/;\n\t  var propCache = Object.create(null);\n\t\n\t  var testEl = null;\n\t\n\t  var style = {\n\t\n\t    deep: true,\n\t\n\t    update: function update(value) {\n\t      if (typeof value === 'string') {\n\t        this.el.style.cssText = value;\n\t      } else if (isArray(value)) {\n\t        this.handleObject(value.reduce(extend, {}));\n\t      } else {\n\t        this.handleObject(value || {});\n\t      }\n\t    },\n\t\n\t    handleObject: function handleObject(value) {\n\t      // cache object styles so that only changed props\n\t      // are actually updated.\n\t      var cache = this.cache || (this.cache = {});\n\t      var name, val;\n\t      for (name in cache) {\n\t        if (!(name in value)) {\n\t          this.handleSingle(name, null);\n\t          delete cache[name];\n\t        }\n\t      }\n\t      for (name in value) {\n\t        val = value[name];\n\t        if (val !== cache[name]) {\n\t          cache[name] = val;\n\t          this.handleSingle(name, val);\n\t        }\n\t      }\n\t    },\n\t\n\t    handleSingle: function handleSingle(prop, value) {\n\t      prop = normalize(prop);\n\t      if (!prop) return; // unsupported prop\n\t      // cast possible numbers/booleans into strings\n\t      if (value != null) value += '';\n\t      if (value) {\n\t        var isImportant = importantRE.test(value) ? 'important' : '';\n\t        if (isImportant) {\n\t          value = value.replace(importantRE, '').trim();\n\t        }\n\t        this.el.style.setProperty(prop, value, isImportant);\n\t      } else {\n\t        this.el.style.removeProperty(prop);\n\t      }\n\t    }\n\t\n\t  };\n\t\n\t  /**\n\t   * Normalize a CSS property name.\n\t   * - cache result\n\t   * - auto prefix\n\t   * - camelCase -> dash-case\n\t   *\n\t   * @param {String} prop\n\t   * @return {String}\n\t   */\n\t\n\t  function normalize(prop) {\n\t    if (propCache[prop]) {\n\t      return propCache[prop];\n\t    }\n\t    var res = prefix(prop);\n\t    propCache[prop] = propCache[res] = res;\n\t    return res;\n\t  }\n\t\n\t  /**\n\t   * Auto detect the appropriate prefix for a CSS property.\n\t   * https://gist.github.com/paulirish/523692\n\t   *\n\t   * @param {String} prop\n\t   * @return {String}\n\t   */\n\t\n\t  function prefix(prop) {\n\t    prop = hyphenate(prop);\n\t    var camel = camelize(prop);\n\t    var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t    if (!testEl) {\n\t      testEl = document.createElement('div');\n\t    }\n\t    if (camel in testEl.style) {\n\t      return prop;\n\t    }\n\t    var i = prefixes.length;\n\t    var prefixed;\n\t    while (i--) {\n\t      prefixed = camelPrefixes[i] + upper;\n\t      if (prefixed in testEl.style) {\n\t        return prefixes[i] + prop;\n\t      }\n\t    }\n\t  }\n\t\n\t  // xlink\n\t  var xlinkNS = 'http://www.w3.org/1999/xlink';\n\t  var xlinkRE = /^xlink:/;\n\t\n\t  // check for attributes that prohibit interpolations\n\t  var disallowedInterpAttrRE = /^v-|^:|^@|^(is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t\n\t  // these attributes should also set their corresponding properties\n\t  // because they only affect the initial state of the element\n\t  var attrWithPropsRE = /^(value|checked|selected|muted)$/;\n\t\n\t  // these attributes should set a hidden property for\n\t  // binding v-model to object values\n\t  var modelProps = {\n\t    value: '_value',\n\t    'true-value': '_trueValue',\n\t    'false-value': '_falseValue'\n\t  };\n\t\n\t  var bind = {\n\t\n\t    priority: BIND,\n\t\n\t    bind: function bind() {\n\t      var attr = this.arg;\n\t      var tag = this.el.tagName;\n\t      // should be deep watch on object mode\n\t      if (!attr) {\n\t        this.deep = true;\n\t      }\n\t      // handle interpolation bindings\n\t      var descriptor = this.descriptor;\n\t      var tokens = descriptor.interp;\n\t      if (tokens) {\n\t        // handle interpolations with one-time tokens\n\t        if (descriptor.hasOneTime) {\n\t          this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t        }\n\t\n\t        // only allow binding on native attributes\n\t        if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t          'development' !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t          this.el.removeAttribute(attr);\n\t          this.invalid = true;\n\t        }\n\t\n\t        /* istanbul ignore if */\n\t        if (true) {\n\t          var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t          // warn src\n\t          if (attr === 'src') {\n\t            warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t          }\n\t\n\t          // warn style\n\t          if (attr === 'style') {\n\t            warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      if (this.invalid) {\n\t        return;\n\t      }\n\t      var attr = this.arg;\n\t      if (this.arg) {\n\t        this.handleSingle(attr, value);\n\t      } else {\n\t        this.handleObject(value || {});\n\t      }\n\t    },\n\t\n\t    // share object handler with v-bind:class\n\t    handleObject: style.handleObject,\n\t\n\t    handleSingle: function handleSingle(attr, value) {\n\t      var el = this.el;\n\t      var interp = this.descriptor.interp;\n\t      if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t        el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t        ? '' : value : value;\n\t      }\n\t      // set model props\n\t      var modelProp = modelProps[attr];\n\t      if (!interp && modelProp) {\n\t        el[modelProp] = value;\n\t        // update v-model if present\n\t        var model = el.__v_model;\n\t        if (model) {\n\t          model.listener();\n\t        }\n\t      }\n\t      // do not set value attribute for textarea\n\t      if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t        el.removeAttribute(attr);\n\t        return;\n\t      }\n\t      // update attribute\n\t      if (value != null && value !== false) {\n\t        if (attr === 'class') {\n\t          // handle edge case #1960:\n\t          // class interpolation should not overwrite Vue transition class\n\t          if (el.__v_trans) {\n\t            value += ' ' + el.__v_trans.id + '-transition';\n\t          }\n\t          setClass(el, value);\n\t        } else if (xlinkRE.test(attr)) {\n\t          el.setAttributeNS(xlinkNS, attr, value);\n\t        } else {\n\t          el.setAttribute(attr, value);\n\t        }\n\t      } else {\n\t        el.removeAttribute(attr);\n\t      }\n\t    }\n\t  };\n\t\n\t  // keyCode aliases\n\t  var keyCodes = {\n\t    esc: 27,\n\t    tab: 9,\n\t    enter: 13,\n\t    space: 32,\n\t    'delete': 46,\n\t    up: 38,\n\t    left: 37,\n\t    right: 39,\n\t    down: 40\n\t  };\n\t\n\t  function keyFilter(handler, keys) {\n\t    var codes = keys.map(function (key) {\n\t      var charCode = key.charCodeAt(0);\n\t      if (charCode > 47 && charCode < 58) {\n\t        return parseInt(key, 10);\n\t      }\n\t      if (key.length === 1) {\n\t        charCode = key.toUpperCase().charCodeAt(0);\n\t        if (charCode > 64 && charCode < 91) {\n\t          return charCode;\n\t        }\n\t      }\n\t      return keyCodes[key];\n\t    });\n\t    return function keyHandler(e) {\n\t      if (codes.indexOf(e.keyCode) > -1) {\n\t        return handler.call(this, e);\n\t      }\n\t    };\n\t  }\n\t\n\t  function stopFilter(handler) {\n\t    return function stopHandler(e) {\n\t      e.stopPropagation();\n\t      return handler.call(this, e);\n\t    };\n\t  }\n\t\n\t  function preventFilter(handler) {\n\t    return function preventHandler(e) {\n\t      e.preventDefault();\n\t      return handler.call(this, e);\n\t    };\n\t  }\n\t\n\t  var on = {\n\t\n\t    acceptStatement: true,\n\t    priority: ON,\n\t\n\t    bind: function bind() {\n\t      // deal with iframes\n\t      if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t        var self = this;\n\t        this.iframeBind = function () {\n\t          on$1(self.el.contentWindow, self.arg, self.handler);\n\t        };\n\t        this.on('load', this.iframeBind);\n\t      }\n\t    },\n\t\n\t    update: function update(handler) {\n\t      // stub a noop for v-on with no value,\n\t      // e.g. @mousedown.prevent\n\t      if (!this.descriptor.raw) {\n\t        handler = function () {};\n\t      }\n\t\n\t      if (typeof handler !== 'function') {\n\t        'development' !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t        return;\n\t      }\n\t\n\t      // apply modifiers\n\t      if (this.modifiers.stop) {\n\t        handler = stopFilter(handler);\n\t      }\n\t      if (this.modifiers.prevent) {\n\t        handler = preventFilter(handler);\n\t      }\n\t      // key filter\n\t      var keys = Object.keys(this.modifiers).filter(function (key) {\n\t        return key !== 'stop' && key !== 'prevent';\n\t      });\n\t      if (keys.length) {\n\t        handler = keyFilter(handler, keys);\n\t      }\n\t\n\t      this.reset();\n\t      this.handler = handler;\n\t\n\t      if (this.iframeBind) {\n\t        this.iframeBind();\n\t      } else {\n\t        on$1(this.el, this.arg, this.handler);\n\t      }\n\t    },\n\t\n\t    reset: function reset() {\n\t      var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t      if (this.handler) {\n\t        off(el, this.arg, this.handler);\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      this.reset();\n\t    }\n\t  };\n\t\n\t  var checkbox = {\n\t\n\t    bind: function bind() {\n\t      var self = this;\n\t      var el = this.el;\n\t\n\t      this.getValue = function () {\n\t        return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t      };\n\t\n\t      function getBooleanValue() {\n\t        var val = el.checked;\n\t        if (val && el.hasOwnProperty('_trueValue')) {\n\t          return el._trueValue;\n\t        }\n\t        if (!val && el.hasOwnProperty('_falseValue')) {\n\t          return el._falseValue;\n\t        }\n\t        return val;\n\t      }\n\t\n\t      this.listener = function () {\n\t        var model = self._watcher.value;\n\t        if (isArray(model)) {\n\t          var val = self.getValue();\n\t          if (el.checked) {\n\t            if (indexOf(model, val) < 0) {\n\t              model.push(val);\n\t            }\n\t          } else {\n\t            model.$remove(val);\n\t          }\n\t        } else {\n\t          self.set(getBooleanValue());\n\t        }\n\t      };\n\t\n\t      this.on('change', this.listener);\n\t      if (el.hasAttribute('checked')) {\n\t        this.afterBind = this.listener;\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      var el = this.el;\n\t      if (isArray(value)) {\n\t        el.checked = indexOf(value, this.getValue()) > -1;\n\t      } else {\n\t        if (el.hasOwnProperty('_trueValue')) {\n\t          el.checked = looseEqual(value, el._trueValue);\n\t        } else {\n\t          el.checked = !!value;\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  var select = {\n\t\n\t    bind: function bind() {\n\t      var self = this;\n\t      var el = this.el;\n\t\n\t      // method to force update DOM using latest value.\n\t      this.forceUpdate = function () {\n\t        if (self._watcher) {\n\t          self.update(self._watcher.get());\n\t        }\n\t      };\n\t\n\t      // check if this is a multiple select\n\t      var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t      // attach listener\n\t      this.listener = function () {\n\t        var value = getValue(el, multiple);\n\t        value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t        self.set(value);\n\t      };\n\t      this.on('change', this.listener);\n\t\n\t      // if has initial value, set afterBind\n\t      var initValue = getValue(el, multiple, true);\n\t      if (multiple && initValue.length || !multiple && initValue !== null) {\n\t        this.afterBind = this.listener;\n\t      }\n\t\n\t      // All major browsers except Firefox resets\n\t      // selectedIndex with value -1 to 0 when the element\n\t      // is appended to a new parent, therefore we have to\n\t      // force a DOM update whenever that happens...\n\t      this.vm.$on('hook:attached', this.forceUpdate);\n\t    },\n\t\n\t    update: function update(value) {\n\t      var el = this.el;\n\t      el.selectedIndex = -1;\n\t      var multi = this.multiple && isArray(value);\n\t      var options = el.options;\n\t      var i = options.length;\n\t      var op, val;\n\t      while (i--) {\n\t        op = options[i];\n\t        val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t        /* eslint-disable eqeqeq */\n\t        op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t        /* eslint-enable eqeqeq */\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      /* istanbul ignore next */\n\t      this.vm.$off('hook:attached', this.forceUpdate);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get select value\n\t   *\n\t   * @param {SelectElement} el\n\t   * @param {Boolean} multi\n\t   * @param {Boolean} init\n\t   * @return {Array|*}\n\t   */\n\t\n\t  function getValue(el, multi, init) {\n\t    var res = multi ? [] : null;\n\t    var op, val, selected;\n\t    for (var i = 0, l = el.options.length; i < l; i++) {\n\t      op = el.options[i];\n\t      selected = init ? op.hasAttribute('selected') : op.selected;\n\t      if (selected) {\n\t        val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t        if (multi) {\n\t          res.push(val);\n\t        } else {\n\t          return val;\n\t        }\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t\n\t  /**\n\t   * Native Array.indexOf uses strict equal, but in this\n\t   * case we need to match string/numbers with custom equal.\n\t   *\n\t   * @param {Array} arr\n\t   * @param {*} val\n\t   */\n\t\n\t  function indexOf$1(arr, val) {\n\t    var i = arr.length;\n\t    while (i--) {\n\t      if (looseEqual(arr[i], val)) {\n\t        return i;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  var radio = {\n\t\n\t    bind: function bind() {\n\t      var self = this;\n\t      var el = this.el;\n\t\n\t      this.getValue = function () {\n\t        // value overwrite via v-bind:value\n\t        if (el.hasOwnProperty('_value')) {\n\t          return el._value;\n\t        }\n\t        var val = el.value;\n\t        if (self.params.number) {\n\t          val = toNumber(val);\n\t        }\n\t        return val;\n\t      };\n\t\n\t      this.listener = function () {\n\t        self.set(self.getValue());\n\t      };\n\t      this.on('change', this.listener);\n\t\n\t      if (el.hasAttribute('checked')) {\n\t        this.afterBind = this.listener;\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      this.el.checked = looseEqual(value, this.getValue());\n\t    }\n\t  };\n\t\n\t  var text$2 = {\n\t\n\t    bind: function bind() {\n\t      var self = this;\n\t      var el = this.el;\n\t      var isRange = el.type === 'range';\n\t      var lazy = this.params.lazy;\n\t      var number = this.params.number;\n\t      var debounce = this.params.debounce;\n\t\n\t      // handle composition events.\n\t      //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t      // skip this for Android because it handles composition\n\t      // events quite differently. Android doesn't trigger\n\t      // composition events for language input methods e.g.\n\t      // Chinese, but instead triggers them for spelling\n\t      // suggestions... (see Discussion/#162)\n\t      var composing = false;\n\t      if (!isAndroid && !isRange) {\n\t        this.on('compositionstart', function () {\n\t          composing = true;\n\t        });\n\t        this.on('compositionend', function () {\n\t          composing = false;\n\t          // in IE11 the \"compositionend\" event fires AFTER\n\t          // the \"input\" event, so the input handler is blocked\n\t          // at the end... have to call it here.\n\t          //\n\t          // #1327: in lazy mode this is unecessary.\n\t          if (!lazy) {\n\t            self.listener();\n\t          }\n\t        });\n\t      }\n\t\n\t      // prevent messing with the input when user is typing,\n\t      // and force update on blur.\n\t      this.focused = false;\n\t      if (!isRange && !lazy) {\n\t        this.on('focus', function () {\n\t          self.focused = true;\n\t        });\n\t        this.on('blur', function () {\n\t          self.focused = false;\n\t          // do not sync value after fragment removal (#2017)\n\t          if (!self._frag || self._frag.inserted) {\n\t            self.rawListener();\n\t          }\n\t        });\n\t      }\n\t\n\t      // Now attach the main listener\n\t      this.listener = this.rawListener = function () {\n\t        if (composing || !self._bound) {\n\t          return;\n\t        }\n\t        var val = number || isRange ? toNumber(el.value) : el.value;\n\t        self.set(val);\n\t        // force update on next tick to avoid lock & same value\n\t        // also only update when user is not typing\n\t        nextTick(function () {\n\t          if (self._bound && !self.focused) {\n\t            self.update(self._watcher.value);\n\t          }\n\t        });\n\t      };\n\t\n\t      // apply debounce\n\t      if (debounce) {\n\t        this.listener = _debounce(this.listener, debounce);\n\t      }\n\t\n\t      // Support jQuery events, since jQuery.trigger() doesn't\n\t      // trigger native events in some cases and some plugins\n\t      // rely on $.trigger()\n\t      //\n\t      // We want to make sure if a listener is attached using\n\t      // jQuery, it is also removed with jQuery, that's why\n\t      // we do the check for each directive instance and\n\t      // store that check result on itself. This also allows\n\t      // easier test coverage control by unsetting the global\n\t      // jQuery variable in tests.\n\t      this.hasjQuery = typeof jQuery === 'function';\n\t      if (this.hasjQuery) {\n\t        jQuery(el).on('change', this.listener);\n\t        if (!lazy) {\n\t          jQuery(el).on('input', this.listener);\n\t        }\n\t      } else {\n\t        this.on('change', this.listener);\n\t        if (!lazy) {\n\t          this.on('input', this.listener);\n\t        }\n\t      }\n\t\n\t      // IE9 doesn't fire input event on backspace/del/cut\n\t      if (!lazy && isIE9) {\n\t        this.on('cut', function () {\n\t          nextTick(self.listener);\n\t        });\n\t        this.on('keyup', function (e) {\n\t          if (e.keyCode === 46 || e.keyCode === 8) {\n\t            self.listener();\n\t          }\n\t        });\n\t      }\n\t\n\t      // set initial value if present\n\t      if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t        this.afterBind = this.listener;\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      this.el.value = _toString(value);\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      var el = this.el;\n\t      if (this.hasjQuery) {\n\t        jQuery(el).off('change', this.listener);\n\t        jQuery(el).off('input', this.listener);\n\t      }\n\t    }\n\t  };\n\t\n\t  var handlers = {\n\t    text: text$2,\n\t    radio: radio,\n\t    select: select,\n\t    checkbox: checkbox\n\t  };\n\t\n\t  var model = {\n\t\n\t    priority: MODEL,\n\t    twoWay: true,\n\t    handlers: handlers,\n\t    params: ['lazy', 'number', 'debounce'],\n\t\n\t    /**\n\t     * Possible elements:\n\t     *   <select>\n\t     *   <textarea>\n\t     *   <input type=\"*\">\n\t     *     - text\n\t     *     - checkbox\n\t     *     - radio\n\t     *     - number\n\t     */\n\t\n\t    bind: function bind() {\n\t      // friendly warning...\n\t      this.checkFilters();\n\t      if (this.hasRead && !this.hasWrite) {\n\t        'development' !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t      }\n\t      var el = this.el;\n\t      var tag = el.tagName;\n\t      var handler;\n\t      if (tag === 'INPUT') {\n\t        handler = handlers[el.type] || handlers.text;\n\t      } else if (tag === 'SELECT') {\n\t        handler = handlers.select;\n\t      } else if (tag === 'TEXTAREA') {\n\t        handler = handlers.text;\n\t      } else {\n\t        'development' !== 'production' && warn('v-model does not support element type: ' + tag);\n\t        return;\n\t      }\n\t      el.__v_model = this;\n\t      handler.bind.call(this);\n\t      this.update = handler.update;\n\t      this._unbind = handler.unbind;\n\t    },\n\t\n\t    /**\n\t     * Check read/write filter stats.\n\t     */\n\t\n\t    checkFilters: function checkFilters() {\n\t      var filters = this.filters;\n\t      if (!filters) return;\n\t      var i = filters.length;\n\t      while (i--) {\n\t        var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t        if (typeof filter === 'function' || filter.read) {\n\t          this.hasRead = true;\n\t        }\n\t        if (filter.write) {\n\t          this.hasWrite = true;\n\t        }\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      this.el.__v_model = null;\n\t      this._unbind && this._unbind();\n\t    }\n\t  };\n\t\n\t  var show = {\n\t\n\t    bind: function bind() {\n\t      // check else block\n\t      var next = this.el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        this.elseEl = next;\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      this.apply(this.el, value);\n\t      if (this.elseEl) {\n\t        this.apply(this.elseEl, !value);\n\t      }\n\t    },\n\t\n\t    apply: function apply(el, value) {\n\t      if (inDoc(el)) {\n\t        applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t      } else {\n\t        toggle();\n\t      }\n\t      function toggle() {\n\t        el.style.display = value ? '' : 'none';\n\t      }\n\t    }\n\t  };\n\t\n\t  var templateCache = new Cache(1000);\n\t  var idSelectorCache = new Cache(1000);\n\t\n\t  var map = {\n\t    efault: [0, '', ''],\n\t    legend: [1, '<fieldset>', '</fieldset>'],\n\t    tr: [2, '<table><tbody>', '</tbody></table>'],\n\t    col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t  };\n\t\n\t  map.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\t  map.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\t  map.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\t  map.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t  /**\n\t   * Check if a node is a supported template node with a\n\t   * DocumentFragment content.\n\t   *\n\t   * @param {Node} node\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isRealTemplate(node) {\n\t    return isTemplate(node) && node.content instanceof DocumentFragment;\n\t  }\n\t\n\t  var tagRE$1 = /<([\\w:]+)/;\n\t  var entityRE = /&#?\\w+?;/;\n\t\n\t  /**\n\t   * Convert a string template to a DocumentFragment.\n\t   * Determines correct wrapping by tag types. Wrapping\n\t   * strategy found in jQuery & component/domify.\n\t   *\n\t   * @param {String} templateString\n\t   * @param {Boolean} raw\n\t   * @return {DocumentFragment}\n\t   */\n\t\n\t  function stringToFragment(templateString, raw) {\n\t    // try a cache hit first\n\t    var hit = templateCache.get(templateString);\n\t    if (hit) {\n\t      return hit;\n\t    }\n\t\n\t    var frag = document.createDocumentFragment();\n\t    var tagMatch = templateString.match(tagRE$1);\n\t    var entityMatch = entityRE.test(templateString);\n\t\n\t    if (!tagMatch && !entityMatch) {\n\t      // text only, return a single text node.\n\t      frag.appendChild(document.createTextNode(templateString));\n\t    } else {\n\t\n\t      var tag = tagMatch && tagMatch[1];\n\t      var wrap = map[tag] || map.efault;\n\t      var depth = wrap[0];\n\t      var prefix = wrap[1];\n\t      var suffix = wrap[2];\n\t      var node = document.createElement('div');\n\t\n\t      if (!raw) {\n\t        templateString = templateString.trim();\n\t      }\n\t      node.innerHTML = prefix + templateString + suffix;\n\t      while (depth--) {\n\t        node = node.lastChild;\n\t      }\n\t\n\t      var child;\n\t      /* eslint-disable no-cond-assign */\n\t      while (child = node.firstChild) {\n\t        /* eslint-enable no-cond-assign */\n\t        frag.appendChild(child);\n\t      }\n\t    }\n\t\n\t    templateCache.put(templateString, frag);\n\t    return frag;\n\t  }\n\t\n\t  /**\n\t   * Convert a template node to a DocumentFragment.\n\t   *\n\t   * @param {Node} node\n\t   * @return {DocumentFragment}\n\t   */\n\t\n\t  function nodeToFragment(node) {\n\t    // if its a template tag and the browser supports it,\n\t    // its content is already a document fragment.\n\t    if (isRealTemplate(node)) {\n\t      trimNode(node.content);\n\t      return node.content;\n\t    }\n\t    // script template\n\t    if (node.tagName === 'SCRIPT') {\n\t      return stringToFragment(node.textContent);\n\t    }\n\t    // normal node, clone it to avoid mutating the original\n\t    var clonedNode = cloneNode(node);\n\t    var frag = document.createDocumentFragment();\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = clonedNode.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t    trimNode(frag);\n\t    return frag;\n\t  }\n\t\n\t  // Test for the presence of the Safari template cloning bug\n\t  // https://bugs.webkit.org/showug.cgi?id=137755\n\t  var hasBrokenTemplate = (function () {\n\t    /* istanbul ignore else */\n\t    if (inBrowser) {\n\t      var a = document.createElement('div');\n\t      a.innerHTML = '<template>1</template>';\n\t      return !a.cloneNode(true).firstChild.innerHTML;\n\t    } else {\n\t      return false;\n\t    }\n\t  })();\n\t\n\t  // Test for IE10/11 textarea placeholder clone bug\n\t  var hasTextareaCloneBug = (function () {\n\t    /* istanbul ignore else */\n\t    if (inBrowser) {\n\t      var t = document.createElement('textarea');\n\t      t.placeholder = 't';\n\t      return t.cloneNode(true).value === 't';\n\t    } else {\n\t      return false;\n\t    }\n\t  })();\n\t\n\t  /**\n\t   * 1. Deal with Safari cloning nested <template> bug by\n\t   *    manually cloning all template instances.\n\t   * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t   *    the correct value after cloning.\n\t   *\n\t   * @param {Element|DocumentFragment} node\n\t   * @return {Element|DocumentFragment}\n\t   */\n\t\n\t  function cloneNode(node) {\n\t    if (!node.querySelectorAll) {\n\t      return node.cloneNode();\n\t    }\n\t    var res = node.cloneNode(true);\n\t    var i, original, cloned;\n\t    /* istanbul ignore if */\n\t    if (hasBrokenTemplate) {\n\t      var tempClone = res;\n\t      if (isRealTemplate(node)) {\n\t        node = node.content;\n\t        tempClone = res.content;\n\t      }\n\t      original = node.querySelectorAll('template');\n\t      if (original.length) {\n\t        cloned = tempClone.querySelectorAll('template');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t        }\n\t      }\n\t    }\n\t    /* istanbul ignore if */\n\t    if (hasTextareaCloneBug) {\n\t      if (node.tagName === 'TEXTAREA') {\n\t        res.value = node.value;\n\t      } else {\n\t        original = node.querySelectorAll('textarea');\n\t        if (original.length) {\n\t          cloned = res.querySelectorAll('textarea');\n\t          i = cloned.length;\n\t          while (i--) {\n\t            cloned[i].value = original[i].value;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t\n\t  /**\n\t   * Process the template option and normalizes it into a\n\t   * a DocumentFragment that can be used as a partial or a\n\t   * instance template.\n\t   *\n\t   * @param {*} template\n\t   *        Possible values include:\n\t   *        - DocumentFragment object\n\t   *        - Node object of type Template\n\t   *        - id selector: '#some-template-id'\n\t   *        - template string: '<div><span>{{msg}}</span></div>'\n\t   * @param {Boolean} shouldClone\n\t   * @param {Boolean} raw\n\t   *        inline HTML interpolation. Do not check for id\n\t   *        selector and keep whitespace in the string.\n\t   * @return {DocumentFragment|undefined}\n\t   */\n\t\n\t  function parseTemplate(template, shouldClone, raw) {\n\t    var node, frag;\n\t\n\t    // if the template is already a document fragment,\n\t    // do nothing\n\t    if (template instanceof DocumentFragment) {\n\t      trimNode(template);\n\t      return shouldClone ? cloneNode(template) : template;\n\t    }\n\t\n\t    if (typeof template === 'string') {\n\t      // id selector\n\t      if (!raw && template.charAt(0) === '#') {\n\t        // id selector can be cached too\n\t        frag = idSelectorCache.get(template);\n\t        if (!frag) {\n\t          node = document.getElementById(template.slice(1));\n\t          if (node) {\n\t            frag = nodeToFragment(node);\n\t            // save selector to cache\n\t            idSelectorCache.put(template, frag);\n\t          }\n\t        }\n\t      } else {\n\t        // normal string template\n\t        frag = stringToFragment(template, raw);\n\t      }\n\t    } else if (template.nodeType) {\n\t      // a direct node\n\t      frag = nodeToFragment(template);\n\t    }\n\t\n\t    return frag && shouldClone ? cloneNode(frag) : frag;\n\t  }\n\t\n\t  var template = Object.freeze({\n\t    cloneNode: cloneNode,\n\t    parseTemplate: parseTemplate\n\t  });\n\t\n\t  /**\n\t   * Abstraction for a partially-compiled fragment.\n\t   * Can optionally compile content with a child scope.\n\t   *\n\t   * @param {Function} linker\n\t   * @param {Vue} vm\n\t   * @param {DocumentFragment} frag\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   */\n\t  function Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t    this.children = [];\n\t    this.childFrags = [];\n\t    this.vm = vm;\n\t    this.scope = scope;\n\t    this.inserted = false;\n\t    this.parentFrag = parentFrag;\n\t    if (parentFrag) {\n\t      parentFrag.childFrags.push(this);\n\t    }\n\t    this.unlink = linker(vm, frag, host, scope, this);\n\t    var single = this.single = frag.childNodes.length === 1 &&\n\t    // do not go single mode if the only node is an anchor\n\t    !frag.childNodes[0].__vue_anchor;\n\t    if (single) {\n\t      this.node = frag.childNodes[0];\n\t      this.before = singleBefore;\n\t      this.remove = singleRemove;\n\t    } else {\n\t      this.node = createAnchor('fragment-start');\n\t      this.end = createAnchor('fragment-end');\n\t      this.frag = frag;\n\t      prepend(this.node, frag);\n\t      frag.appendChild(this.end);\n\t      this.before = multiBefore;\n\t      this.remove = multiRemove;\n\t    }\n\t    this.node.__vfrag__ = this;\n\t  }\n\t\n\t  /**\n\t   * Call attach/detach for all components contained within\n\t   * this fragment. Also do so recursively for all child\n\t   * fragments.\n\t   *\n\t   * @param {Function} hook\n\t   */\n\t\n\t  Fragment.prototype.callHook = function (hook) {\n\t    var i, l;\n\t    for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t      this.childFrags[i].callHook(hook);\n\t    }\n\t    for (i = 0, l = this.children.length; i < l; i++) {\n\t      hook(this.children[i]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Insert fragment before target, single node version\n\t   *\n\t   * @param {Node} target\n\t   * @param {Boolean} withTransition\n\t   */\n\t\n\t  function singleBefore(target, withTransition) {\n\t    this.inserted = true;\n\t    var method = withTransition !== false ? beforeWithTransition : before;\n\t    method(this.node, target, this.vm);\n\t    if (inDoc(this.node)) {\n\t      this.callHook(attach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Remove fragment, single node version\n\t   */\n\t\n\t  function singleRemove() {\n\t    this.inserted = false;\n\t    var shouldCallRemove = inDoc(this.node);\n\t    var self = this;\n\t    this.beforeRemove();\n\t    removeWithTransition(this.node, this.vm, function () {\n\t      if (shouldCallRemove) {\n\t        self.callHook(detach);\n\t      }\n\t      self.destroy();\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Insert fragment before target, multi-nodes version\n\t   *\n\t   * @param {Node} target\n\t   * @param {Boolean} withTransition\n\t   */\n\t\n\t  function multiBefore(target, withTransition) {\n\t    this.inserted = true;\n\t    var vm = this.vm;\n\t    var method = withTransition !== false ? beforeWithTransition : before;\n\t    mapNodeRange(this.node, this.end, function (node) {\n\t      method(node, target, vm);\n\t    });\n\t    if (inDoc(this.node)) {\n\t      this.callHook(attach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Remove fragment, multi-nodes version\n\t   */\n\t\n\t  function multiRemove() {\n\t    this.inserted = false;\n\t    var self = this;\n\t    var shouldCallRemove = inDoc(this.node);\n\t    this.beforeRemove();\n\t    removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t      if (shouldCallRemove) {\n\t        self.callHook(detach);\n\t      }\n\t      self.destroy();\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Prepare the fragment for removal.\n\t   */\n\t\n\t  Fragment.prototype.beforeRemove = function () {\n\t    var i, l;\n\t    for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t      // call the same method recursively on child\n\t      // fragments, depth-first\n\t      this.childFrags[i].beforeRemove(false);\n\t    }\n\t    for (i = 0, l = this.children.length; i < l; i++) {\n\t      // Call destroy for all contained instances,\n\t      // with remove:false and defer:true.\n\t      // Defer is necessary because we need to\n\t      // keep the children to call detach hooks\n\t      // on them.\n\t      this.children[i].$destroy(false, true);\n\t    }\n\t    var dirs = this.unlink.dirs;\n\t    for (i = 0, l = dirs.length; i < l; i++) {\n\t      // disable the watchers on all the directives\n\t      // so that the rendered content stays the same\n\t      // during removal.\n\t      dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Destroy the fragment.\n\t   */\n\t\n\t  Fragment.prototype.destroy = function () {\n\t    if (this.parentFrag) {\n\t      this.parentFrag.childFrags.$remove(this);\n\t    }\n\t    this.unlink();\n\t  };\n\t\n\t  /**\n\t   * Call attach hook for a Vue instance.\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function attach(child) {\n\t    if (!child._isAttached) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Call detach hook for a Vue instance.\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function detach(child) {\n\t    if (child._isAttached) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  var linkerCache = new Cache(5000);\n\t\n\t  /**\n\t   * A factory that can be used to create instances of a\n\t   * fragment. Caches the compiled linker if possible.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|String} el\n\t   */\n\t  function FragmentFactory(vm, el) {\n\t    this.vm = vm;\n\t    var template;\n\t    var isString = typeof el === 'string';\n\t    if (isString || isTemplate(el)) {\n\t      template = parseTemplate(el, true);\n\t    } else {\n\t      template = document.createDocumentFragment();\n\t      template.appendChild(el);\n\t    }\n\t    this.template = template;\n\t    // linker can be cached, but only for components\n\t    var linker;\n\t    var cid = vm.constructor.cid;\n\t    if (cid > 0) {\n\t      var cacheId = cid + (isString ? el : el.outerHTML);\n\t      linker = linkerCache.get(cacheId);\n\t      if (!linker) {\n\t        linker = compile(template, vm.$options, true);\n\t        linkerCache.put(cacheId, linker);\n\t      }\n\t    } else {\n\t      linker = compile(template, vm.$options, true);\n\t    }\n\t    this.linker = linker;\n\t  }\n\t\n\t  /**\n\t   * Create a fragment instance with given host and scope.\n\t   *\n\t   * @param {Vue} host\n\t   * @param {Object} scope\n\t   * @param {Fragment} parentFrag\n\t   */\n\t\n\t  FragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t    var frag = cloneNode(this.template);\n\t    return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t  };\n\t\n\t  var vIf = {\n\t\n\t    priority: IF,\n\t\n\t    bind: function bind() {\n\t      var el = this.el;\n\t      if (!el.__vue__) {\n\t        // check else block\n\t        var next = el.nextElementSibling;\n\t        if (next && getAttr(next, 'v-else') !== null) {\n\t          remove(next);\n\t          this.elseFactory = new FragmentFactory(this.vm, next);\n\t        }\n\t        // check main block\n\t        this.anchor = createAnchor('v-if');\n\t        replace(el, this.anchor);\n\t        this.factory = new FragmentFactory(this.vm, el);\n\t      } else {\n\t        'development' !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t        this.invalid = true;\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      if (this.invalid) return;\n\t      if (value) {\n\t        if (!this.frag) {\n\t          this.insert();\n\t        }\n\t      } else {\n\t        this.remove();\n\t      }\n\t    },\n\t\n\t    insert: function insert() {\n\t      if (this.elseFrag) {\n\t        this.elseFrag.remove();\n\t        this.elseFrag = null;\n\t      }\n\t      this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t      this.frag.before(this.anchor);\n\t    },\n\t\n\t    remove: function remove() {\n\t      if (this.frag) {\n\t        this.frag.remove();\n\t        this.frag = null;\n\t      }\n\t      if (this.elseFactory && !this.elseFrag) {\n\t        this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t        this.elseFrag.before(this.anchor);\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      if (this.frag) {\n\t        this.frag.destroy();\n\t      }\n\t    }\n\t  };\n\t\n\t  var uid$1 = 0;\n\t\n\t  var vFor = {\n\t\n\t    priority: FOR,\n\t\n\t    params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t    bind: function bind() {\n\t      // support \"item in items\" syntax\n\t      var inMatch = this.expression.match(/(.*) in (.*)/);\n\t      if (inMatch) {\n\t        var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t        if (itMatch) {\n\t          this.iterator = itMatch[1].trim();\n\t          this.alias = itMatch[2].trim();\n\t        } else {\n\t          this.alias = inMatch[1].trim();\n\t        }\n\t        this.expression = inMatch[2];\n\t      }\n\t\n\t      if (!this.alias) {\n\t        'development' !== 'production' && warn('Alias is required in v-for.');\n\t        return;\n\t      }\n\t\n\t      // uid as a cache identifier\n\t      this.id = '__v-for__' + ++uid$1;\n\t\n\t      // check if this is an option list,\n\t      // so that we know if we need to update the <select>'s\n\t      // v-model when the option list has changed.\n\t      // because v-model has a lower priority than v-for,\n\t      // the v-model is not bound here yet, so we have to\n\t      // retrive it in the actual updateModel() function.\n\t      var tag = this.el.tagName;\n\t      this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t      // setup anchor nodes\n\t      this.start = createAnchor('v-for-start');\n\t      this.end = createAnchor('v-for-end');\n\t      replace(this.el, this.end);\n\t      before(this.start, this.end);\n\t\n\t      // cache\n\t      this.cache = Object.create(null);\n\t\n\t      // fragment factory\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    },\n\t\n\t    update: function update(data) {\n\t      this.diff(data);\n\t      this.updateRef();\n\t      this.updateModel();\n\t    },\n\t\n\t    /**\n\t     * Diff, based on new data and old data, determine the\n\t     * minimum amount of DOM manipulations needed to make the\n\t     * DOM reflect the new data Array.\n\t     *\n\t     * The algorithm diffs the new data Array by storing a\n\t     * hidden reference to an owner vm instance on previously\n\t     * seen data. This allows us to achieve O(n) which is\n\t     * better than a levenshtein distance based algorithm,\n\t     * which is O(m * n).\n\t     *\n\t     * @param {Array} data\n\t     */\n\t\n\t    diff: function diff(data) {\n\t      // check if the Array was converted from an Object\n\t      var item = data[0];\n\t      var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t      var trackByKey = this.params.trackBy;\n\t      var oldFrags = this.frags;\n\t      var frags = this.frags = new Array(data.length);\n\t      var alias = this.alias;\n\t      var iterator = this.iterator;\n\t      var start = this.start;\n\t      var end = this.end;\n\t      var inDocument = inDoc(start);\n\t      var init = !oldFrags;\n\t      var i, l, frag, key, value, primitive;\n\t\n\t      // First pass, go through the new Array and fill up\n\t      // the new frags array. If a piece of data has a cached\n\t      // instance for it, we reuse it. Otherwise build a new\n\t      // instance.\n\t      for (i = 0, l = data.length; i < l; i++) {\n\t        item = data[i];\n\t        key = convertedFromObject ? item.$key : null;\n\t        value = convertedFromObject ? item.$value : item;\n\t        primitive = !isObject(value);\n\t        frag = !init && this.getCachedFrag(value, i, key);\n\t        if (frag) {\n\t          // reusable fragment\n\t          frag.reused = true;\n\t          // update $index\n\t          frag.scope.$index = i;\n\t          // update $key\n\t          if (key) {\n\t            frag.scope.$key = key;\n\t          }\n\t          // update iterator\n\t          if (iterator) {\n\t            frag.scope[iterator] = key !== null ? key : i;\n\t          }\n\t          // update data for track-by, object repeat &\n\t          // primitive values.\n\t          if (trackByKey || convertedFromObject || primitive) {\n\t            frag.scope[alias] = value;\n\t          }\n\t        } else {\n\t          // new isntance\n\t          frag = this.create(value, alias, i, key);\n\t          frag.fresh = !init;\n\t        }\n\t        frags[i] = frag;\n\t        if (init) {\n\t          frag.before(end);\n\t        }\n\t      }\n\t\n\t      // we're done for the initial render.\n\t      if (init) {\n\t        return;\n\t      }\n\t\n\t      // Second pass, go through the old fragments and\n\t      // destroy those who are not reused (and remove them\n\t      // from cache)\n\t      var removalIndex = 0;\n\t      var totalRemoved = oldFrags.length - frags.length;\n\t      for (i = 0, l = oldFrags.length; i < l; i++) {\n\t        frag = oldFrags[i];\n\t        if (!frag.reused) {\n\t          this.deleteCachedFrag(frag);\n\t          this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t        }\n\t      }\n\t\n\t      // Final pass, move/insert new fragments into the\n\t      // right place.\n\t      var targetPrev, prevEl, currentPrev;\n\t      var insertionIndex = 0;\n\t      for (i = 0, l = frags.length; i < l; i++) {\n\t        frag = frags[i];\n\t        // this is the frag that we should be after\n\t        targetPrev = frags[i - 1];\n\t        prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t        if (frag.reused && !frag.staggerCb) {\n\t          currentPrev = findPrevFrag(frag, start, this.id);\n\t          if (currentPrev !== targetPrev && (!currentPrev ||\n\t          // optimization for moving a single item.\n\t          // thanks to suggestions by @livoras in #1807\n\t          findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t            this.move(frag, prevEl);\n\t          }\n\t        } else {\n\t          // new instance, or still in stagger.\n\t          // insert with updated stagger index.\n\t          this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t        }\n\t        frag.reused = frag.fresh = false;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Create a new fragment instance.\n\t     *\n\t     * @param {*} value\n\t     * @param {String} alias\n\t     * @param {Number} index\n\t     * @param {String} [key]\n\t     * @return {Fragment}\n\t     */\n\t\n\t    create: function create(value, alias, index, key) {\n\t      var host = this._host;\n\t      // create iteration scope\n\t      var parentScope = this._scope || this.vm;\n\t      var scope = Object.create(parentScope);\n\t      // ref holder for the scope\n\t      scope.$refs = Object.create(parentScope.$refs);\n\t      scope.$els = Object.create(parentScope.$els);\n\t      // make sure point $parent to parent scope\n\t      scope.$parent = parentScope;\n\t      // for two-way binding on alias\n\t      scope.$forContext = this;\n\t      // define scope properties\n\t      defineReactive(scope, alias, value);\n\t      defineReactive(scope, '$index', index);\n\t      if (key) {\n\t        defineReactive(scope, '$key', key);\n\t      } else if (scope.$key) {\n\t        // avoid accidental fallback\n\t        def(scope, '$key', null);\n\t      }\n\t      if (this.iterator) {\n\t        defineReactive(scope, this.iterator, key !== null ? key : index);\n\t      }\n\t      var frag = this.factory.create(host, scope, this._frag);\n\t      frag.forId = this.id;\n\t      this.cacheFrag(value, frag, index, key);\n\t      return frag;\n\t    },\n\t\n\t    /**\n\t     * Update the v-ref on owner vm.\n\t     */\n\t\n\t    updateRef: function updateRef() {\n\t      var ref = this.descriptor.ref;\n\t      if (!ref) return;\n\t      var hash = (this._scope || this.vm).$refs;\n\t      var refs;\n\t      if (!this.fromObject) {\n\t        refs = this.frags.map(findVmFromFrag);\n\t      } else {\n\t        refs = {};\n\t        this.frags.forEach(function (frag) {\n\t          refs[frag.scope.$key] = findVmFromFrag(frag);\n\t        });\n\t      }\n\t      hash[ref] = refs;\n\t    },\n\t\n\t    /**\n\t     * For option lists, update the containing v-model on\n\t     * parent <select>.\n\t     */\n\t\n\t    updateModel: function updateModel() {\n\t      if (this.isOption) {\n\t        var parent = this.start.parentNode;\n\t        var model = parent && parent.__v_model;\n\t        if (model) {\n\t          model.forceUpdate();\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Insert a fragment. Handles staggering.\n\t     *\n\t     * @param {Fragment} frag\n\t     * @param {Number} index\n\t     * @param {Node} prevEl\n\t     * @param {Boolean} inDocument\n\t     */\n\t\n\t    insert: function insert(frag, index, prevEl, inDocument) {\n\t      if (frag.staggerCb) {\n\t        frag.staggerCb.cancel();\n\t        frag.staggerCb = null;\n\t      }\n\t      var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t      if (inDocument && staggerAmount) {\n\t        // create an anchor and insert it synchronously,\n\t        // so that we can resolve the correct order without\n\t        // worrying about some elements not inserted yet\n\t        var anchor = frag.staggerAnchor;\n\t        if (!anchor) {\n\t          anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t          anchor.__vfrag__ = frag;\n\t        }\n\t        after(anchor, prevEl);\n\t        var op = frag.staggerCb = cancellable(function () {\n\t          frag.staggerCb = null;\n\t          frag.before(anchor);\n\t          remove(anchor);\n\t        });\n\t        setTimeout(op, staggerAmount);\n\t      } else {\n\t        frag.before(prevEl.nextSibling);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Remove a fragment. Handles staggering.\n\t     *\n\t     * @param {Fragment} frag\n\t     * @param {Number} index\n\t     * @param {Number} total\n\t     * @param {Boolean} inDocument\n\t     */\n\t\n\t    remove: function remove(frag, index, total, inDocument) {\n\t      if (frag.staggerCb) {\n\t        frag.staggerCb.cancel();\n\t        frag.staggerCb = null;\n\t        // it's not possible for the same frag to be removed\n\t        // twice, so if we have a pending stagger callback,\n\t        // it means this frag is queued for enter but removed\n\t        // before its transition started. Since it is already\n\t        // destroyed, we can just leave it in detached state.\n\t        return;\n\t      }\n\t      var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t      if (inDocument && staggerAmount) {\n\t        var op = frag.staggerCb = cancellable(function () {\n\t          frag.staggerCb = null;\n\t          frag.remove();\n\t        });\n\t        setTimeout(op, staggerAmount);\n\t      } else {\n\t        frag.remove();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Move a fragment to a new position.\n\t     * Force no transition.\n\t     *\n\t     * @param {Fragment} frag\n\t     * @param {Node} prevEl\n\t     */\n\t\n\t    move: function move(frag, prevEl) {\n\t      frag.before(prevEl.nextSibling, false);\n\t    },\n\t\n\t    /**\n\t     * Cache a fragment using track-by or the object key.\n\t     *\n\t     * @param {*} value\n\t     * @param {Fragment} frag\n\t     * @param {Number} index\n\t     * @param {String} [key]\n\t     */\n\t\n\t    cacheFrag: function cacheFrag(value, frag, index, key) {\n\t      var trackByKey = this.params.trackBy;\n\t      var cache = this.cache;\n\t      var primitive = !isObject(value);\n\t      var id;\n\t      if (key || trackByKey || primitive) {\n\t        id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t        if (!cache[id]) {\n\t          cache[id] = frag;\n\t        } else if (trackByKey !== '$index') {\n\t          'development' !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        id = this.id;\n\t        if (hasOwn(value, id)) {\n\t          if (value[id] === null) {\n\t            value[id] = frag;\n\t          } else {\n\t            'development' !== 'production' && this.warnDuplicate(value);\n\t          }\n\t        } else {\n\t          def(value, id, frag);\n\t        }\n\t      }\n\t      frag.raw = value;\n\t    },\n\t\n\t    /**\n\t     * Get a cached fragment from the value/index/key\n\t     *\n\t     * @param {*} value\n\t     * @param {Number} index\n\t     * @param {String} key\n\t     * @return {Fragment}\n\t     */\n\t\n\t    getCachedFrag: function getCachedFrag(value, index, key) {\n\t      var trackByKey = this.params.trackBy;\n\t      var primitive = !isObject(value);\n\t      var frag;\n\t      if (key || trackByKey || primitive) {\n\t        var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t        frag = this.cache[id];\n\t      } else {\n\t        frag = value[this.id];\n\t      }\n\t      if (frag && (frag.reused || frag.fresh)) {\n\t        'development' !== 'production' && this.warnDuplicate(value);\n\t      }\n\t      return frag;\n\t    },\n\t\n\t    /**\n\t     * Delete a fragment from cache.\n\t     *\n\t     * @param {Fragment} frag\n\t     */\n\t\n\t    deleteCachedFrag: function deleteCachedFrag(frag) {\n\t      var value = frag.raw;\n\t      var trackByKey = this.params.trackBy;\n\t      var scope = frag.scope;\n\t      var index = scope.$index;\n\t      // fix #948: avoid accidentally fall through to\n\t      // a parent repeater which happens to have $key.\n\t      var key = hasOwn(scope, '$key') && scope.$key;\n\t      var primitive = !isObject(value);\n\t      if (trackByKey || key || primitive) {\n\t        var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t        this.cache[id] = null;\n\t      } else {\n\t        value[this.id] = null;\n\t        frag.raw = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Get the stagger amount for an insertion/removal.\n\t     *\n\t     * @param {Fragment} frag\n\t     * @param {Number} index\n\t     * @param {Number} total\n\t     * @param {String} type\n\t     */\n\t\n\t    getStagger: function getStagger(frag, index, total, type) {\n\t      type = type + 'Stagger';\n\t      var trans = frag.node.__v_trans;\n\t      var hooks = trans && trans.hooks;\n\t      var hook = hooks && (hooks[type] || hooks.stagger);\n\t      return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t    },\n\t\n\t    /**\n\t     * Pre-process the value before piping it through the\n\t     * filters. This is passed to and called by the watcher.\n\t     */\n\t\n\t    _preProcess: function _preProcess(value) {\n\t      // regardless of type, store the un-filtered raw value.\n\t      this.rawValue = value;\n\t      return value;\n\t    },\n\t\n\t    /**\n\t     * Post-process the value after it has been piped through\n\t     * the filters. This is passed to and called by the watcher.\n\t     *\n\t     * It is necessary for this to be called during the\n\t     * wathcer's dependency collection phase because we want\n\t     * the v-for to update when the source Object is mutated.\n\t     */\n\t\n\t    _postProcess: function _postProcess(value) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      } else if (isPlainObject(value)) {\n\t        // convert plain object to array.\n\t        var keys = Object.keys(value);\n\t        var i = keys.length;\n\t        var res = new Array(i);\n\t        var key;\n\t        while (i--) {\n\t          key = keys[i];\n\t          res[i] = {\n\t            $key: key,\n\t            $value: value[key]\n\t          };\n\t        }\n\t        return res;\n\t      } else {\n\t        if (typeof value === 'number') {\n\t          value = range(value);\n\t        }\n\t        return value || [];\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      if (this.descriptor.ref) {\n\t        (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t      }\n\t      if (this.frags) {\n\t        var i = this.frags.length;\n\t        var frag;\n\t        while (i--) {\n\t          frag = this.frags[i];\n\t          this.deleteCachedFrag(frag);\n\t          frag.destroy();\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Helper to find the previous element that is a fragment\n\t   * anchor. This is necessary because a destroyed frag's\n\t   * element could still be lingering in the DOM before its\n\t   * leaving transition finishes, but its inserted flag\n\t   * should have been set to false so we can skip them.\n\t   *\n\t   * If this is a block repeat, we want to make sure we only\n\t   * return frag that is bound to this v-for. (see #929)\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Comment|Text} anchor\n\t   * @param {String} id\n\t   * @return {Fragment}\n\t   */\n\t\n\t  function findPrevFrag(frag, anchor, id) {\n\t    var el = frag.node.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__vfrag__;\n\t    while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t      el = el.previousSibling;\n\t      /* istanbul ignore if */\n\t      if (!el) return;\n\t      frag = el.__vfrag__;\n\t    }\n\t    return frag;\n\t  }\n\t\n\t  /**\n\t   * Find a vm from a fragment.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  function findVmFromFrag(frag) {\n\t    var node = frag.node;\n\t    // handle multi-node frag\n\t    if (frag.end) {\n\t      while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t        node = node.nextSibling;\n\t      }\n\t    }\n\t    return node.__vue__;\n\t  }\n\t\n\t  /**\n\t   * Create a range array from given number.\n\t   *\n\t   * @param {Number} n\n\t   * @return {Array}\n\t   */\n\t\n\t  function range(n) {\n\t    var i = -1;\n\t    var ret = new Array(n);\n\t    while (++i < n) {\n\t      ret[i] = i;\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  if (true) {\n\t    vFor.warnDuplicate = function (value) {\n\t      warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t    };\n\t  }\n\t\n\t  var html = {\n\t\n\t    bind: function bind() {\n\t      // a comment node means this is a binding for\n\t      // {{{ inline unescaped html }}}\n\t      if (this.el.nodeType === 8) {\n\t        // hold nodes\n\t        this.nodes = [];\n\t        // replace the placeholder with proper anchor\n\t        this.anchor = createAnchor('v-html');\n\t        replace(this.el, this.anchor);\n\t      }\n\t    },\n\t\n\t    update: function update(value) {\n\t      value = _toString(value);\n\t      if (this.nodes) {\n\t        this.swap(value);\n\t      } else {\n\t        this.el.innerHTML = value;\n\t      }\n\t    },\n\t\n\t    swap: function swap(value) {\n\t      // remove old nodes\n\t      var i = this.nodes.length;\n\t      while (i--) {\n\t        remove(this.nodes[i]);\n\t      }\n\t      // convert new value to a fragment\n\t      // do not attempt to retrieve from id selector\n\t      var frag = parseTemplate(value, true, true);\n\t      // save a reference to these nodes so we can remove later\n\t      this.nodes = toArray(frag.childNodes);\n\t      before(frag, this.anchor);\n\t    }\n\t  };\n\t\n\t  var text = {\n\t\n\t    bind: function bind() {\n\t      this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t    },\n\t\n\t    update: function update(value) {\n\t      this.el[this.attr] = _toString(value);\n\t    }\n\t  };\n\t\n\t  // must export plain object\n\t  var publicDirectives = {\n\t    text: text,\n\t    html: html,\n\t    'for': vFor,\n\t    'if': vIf,\n\t    show: show,\n\t    model: model,\n\t    on: on,\n\t    bind: bind,\n\t    el: el,\n\t    ref: ref,\n\t    cloak: cloak\n\t  };\n\t\n\t  var queue$1 = [];\n\t  var queued = false;\n\t\n\t  /**\n\t   * Push a job into the queue.\n\t   *\n\t   * @param {Function} job\n\t   */\n\t\n\t  function pushJob(job) {\n\t    queue$1.push(job);\n\t    if (!queued) {\n\t      queued = true;\n\t      nextTick(flush);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Flush the queue, and do one forced reflow before\n\t   * triggering transitions.\n\t   */\n\t\n\t  function flush() {\n\t    // Force layout\n\t    var f = document.documentElement.offsetHeight;\n\t    for (var i = 0; i < queue$1.length; i++) {\n\t      queue$1[i]();\n\t    }\n\t    queue$1 = [];\n\t    queued = false;\n\t    // dummy return, so js linters don't complain about\n\t    // unused variable f\n\t    return f;\n\t  }\n\t\n\t  var TYPE_TRANSITION = 'transition';\n\t  var TYPE_ANIMATION = 'animation';\n\t  var transDurationProp = transitionProp + 'Duration';\n\t  var animDurationProp = animationProp + 'Duration';\n\t\n\t  /**\n\t   * A Transition object that encapsulates the state and logic\n\t   * of the transition.\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} id\n\t   * @param {Object} hooks\n\t   * @param {Vue} vm\n\t   */\n\t  function Transition(el, id, hooks, vm) {\n\t    this.id = id;\n\t    this.el = el;\n\t    this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t    this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t    this.hooks = hooks;\n\t    this.vm = vm;\n\t    // async state\n\t    this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t    this.justEntered = false;\n\t    this.entered = this.left = false;\n\t    this.typeCache = {};\n\t    // check css transition type\n\t    this.type = hooks && hooks.type;\n\t    /* istanbul ignore if */\n\t    if (true) {\n\t      if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t        warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n\t      }\n\t    }\n\t    // bind\n\t    var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t      self[m] = bind$1(self[m], self);\n\t    });\n\t  }\n\t\n\t  var p$1 = Transition.prototype;\n\t\n\t  /**\n\t   * Start an entering transition.\n\t   *\n\t   * 1. enter transition triggered\n\t   * 2. call beforeEnter hook\n\t   * 3. add enter class\n\t   * 4. insert/show element\n\t   * 5. call enter hook (with possible explicit js callback)\n\t   * 6. reflow\n\t   * 7. based on transition type:\n\t   *    - transition:\n\t   *        remove class now, wait for transitionend,\n\t   *        then done if there's no explicit js callback.\n\t   *    - animation:\n\t   *        wait for animationend, remove class,\n\t   *        then done if there's no explicit js callback.\n\t   *    - no css transition:\n\t   *        done now if there's no explicit js callback.\n\t   * 8. wait for either done or js callback, then call\n\t   *    afterEnter hook.\n\t   *\n\t   * @param {Function} op - insert/show the element\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  p$1.enter = function (op, cb) {\n\t    this.cancelPending();\n\t    this.callHook('beforeEnter');\n\t    this.cb = cb;\n\t    addClass(this.el, this.enterClass);\n\t    op();\n\t    this.entered = false;\n\t    this.callHookWithCb('enter');\n\t    if (this.entered) {\n\t      return; // user called done synchronously.\n\t    }\n\t    this.cancel = this.hooks && this.hooks.enterCancelled;\n\t    pushJob(this.enterNextTick);\n\t  };\n\t\n\t  /**\n\t   * The \"nextTick\" phase of an entering transition, which is\n\t   * to be pushed into a queue and executed after a reflow so\n\t   * that removing the class can trigger a CSS transition.\n\t   */\n\t\n\t  p$1.enterNextTick = function () {\n\t\n\t    // Important hack:\n\t    // in Chrome, if a just-entered element is applied the\n\t    // leave class while its interpolated property still has\n\t    // a very small value (within one frame), Chrome will\n\t    // skip the leave transition entirely and not firing the\n\t    // transtionend event. Therefore we need to protected\n\t    // against such cases using a one-frame timeout.\n\t    this.justEntered = true;\n\t    var self = this;\n\t    setTimeout(function () {\n\t      self.justEntered = false;\n\t    }, 17);\n\t\n\t    var enterDone = this.enterDone;\n\t    var type = this.getCssTransitionType(this.enterClass);\n\t    if (!this.pendingJsCb) {\n\t      if (type === TYPE_TRANSITION) {\n\t        // trigger transition by removing enter class now\n\t        removeClass(this.el, this.enterClass);\n\t        this.setupCssCb(transitionEndEvent, enterDone);\n\t      } else if (type === TYPE_ANIMATION) {\n\t        this.setupCssCb(animationEndEvent, enterDone);\n\t      } else {\n\t        enterDone();\n\t      }\n\t    } else if (type === TYPE_TRANSITION) {\n\t      removeClass(this.el, this.enterClass);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * The \"cleanup\" phase of an entering transition.\n\t   */\n\t\n\t  p$1.enterDone = function () {\n\t    this.entered = true;\n\t    this.cancel = this.pendingJsCb = null;\n\t    removeClass(this.el, this.enterClass);\n\t    this.callHook('afterEnter');\n\t    if (this.cb) this.cb();\n\t  };\n\t\n\t  /**\n\t   * Start a leaving transition.\n\t   *\n\t   * 1. leave transition triggered.\n\t   * 2. call beforeLeave hook\n\t   * 3. add leave class (trigger css transition)\n\t   * 4. call leave hook (with possible explicit js callback)\n\t   * 5. reflow if no explicit js callback is provided\n\t   * 6. based on transition type:\n\t   *    - transition or animation:\n\t   *        wait for end event, remove class, then done if\n\t   *        there's no explicit js callback.\n\t   *    - no css transition:\n\t   *        done if there's no explicit js callback.\n\t   * 7. wait for either done or js callback, then call\n\t   *    afterLeave hook.\n\t   *\n\t   * @param {Function} op - remove/hide the element\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  p$1.leave = function (op, cb) {\n\t    this.cancelPending();\n\t    this.callHook('beforeLeave');\n\t    this.op = op;\n\t    this.cb = cb;\n\t    addClass(this.el, this.leaveClass);\n\t    this.left = false;\n\t    this.callHookWithCb('leave');\n\t    if (this.left) {\n\t      return; // user called done synchronously.\n\t    }\n\t    this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t    // only need to handle leaveDone if\n\t    // 1. the transition is already done (synchronously called\n\t    //    by the user, which causes this.op set to null)\n\t    // 2. there's no explicit js callback\n\t    if (this.op && !this.pendingJsCb) {\n\t      // if a CSS transition leaves immediately after enter,\n\t      // the transitionend event never fires. therefore we\n\t      // detect such cases and end the leave immediately.\n\t      if (this.justEntered) {\n\t        this.leaveDone();\n\t      } else {\n\t        pushJob(this.leaveNextTick);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * The \"nextTick\" phase of a leaving transition.\n\t   */\n\t\n\t  p$1.leaveNextTick = function () {\n\t    var type = this.getCssTransitionType(this.leaveClass);\n\t    if (type) {\n\t      var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t      this.setupCssCb(event, this.leaveDone);\n\t    } else {\n\t      this.leaveDone();\n\t    }\n\t  };\n\t\n\t  /**\n\t   * The \"cleanup\" phase of a leaving transition.\n\t   */\n\t\n\t  p$1.leaveDone = function () {\n\t    this.left = true;\n\t    this.cancel = this.pendingJsCb = null;\n\t    this.op();\n\t    removeClass(this.el, this.leaveClass);\n\t    this.callHook('afterLeave');\n\t    if (this.cb) this.cb();\n\t    this.op = null;\n\t  };\n\t\n\t  /**\n\t   * Cancel any pending callbacks from a previously running\n\t   * but not finished transition.\n\t   */\n\t\n\t  p$1.cancelPending = function () {\n\t    this.op = this.cb = null;\n\t    var hasPending = false;\n\t    if (this.pendingCssCb) {\n\t      hasPending = true;\n\t      off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t      this.pendingCssEvent = this.pendingCssCb = null;\n\t    }\n\t    if (this.pendingJsCb) {\n\t      hasPending = true;\n\t      this.pendingJsCb.cancel();\n\t      this.pendingJsCb = null;\n\t    }\n\t    if (hasPending) {\n\t      removeClass(this.el, this.enterClass);\n\t      removeClass(this.el, this.leaveClass);\n\t    }\n\t    if (this.cancel) {\n\t      this.cancel.call(this.vm, this.el);\n\t      this.cancel = null;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Call a user-provided synchronous hook function.\n\t   *\n\t   * @param {String} type\n\t   */\n\t\n\t  p$1.callHook = function (type) {\n\t    if (this.hooks && this.hooks[type]) {\n\t      this.hooks[type].call(this.vm, this.el);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Call a user-provided, potentially-async hook function.\n\t   * We check for the length of arguments to see if the hook\n\t   * expects a `done` callback. If true, the transition's end\n\t   * will be determined by when the user calls that callback;\n\t   * otherwise, the end is determined by the CSS transition or\n\t   * animation.\n\t   *\n\t   * @param {String} type\n\t   */\n\t\n\t  p$1.callHookWithCb = function (type) {\n\t    var hook = this.hooks && this.hooks[type];\n\t    if (hook) {\n\t      if (hook.length > 1) {\n\t        this.pendingJsCb = cancellable(this[type + 'Done']);\n\t      }\n\t      hook.call(this.vm, this.el, this.pendingJsCb);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get an element's transition type based on the\n\t   * calculated styles.\n\t   *\n\t   * @param {String} className\n\t   * @return {Number}\n\t   */\n\t\n\t  p$1.getCssTransitionType = function (className) {\n\t    /* istanbul ignore if */\n\t    if (!transitionEndEvent ||\n\t    // skip CSS transitions if page is not visible -\n\t    // this solves the issue of transitionend events not\n\t    // firing until the page is visible again.\n\t    // pageVisibility API is supported in IE10+, same as\n\t    // CSS transitions.\n\t    document.hidden ||\n\t    // explicit js-only transition\n\t    this.hooks && this.hooks.css === false ||\n\t    // element is hidden\n\t    isHidden(this.el)) {\n\t      return;\n\t    }\n\t    var type = this.type || this.typeCache[className];\n\t    if (type) return type;\n\t    var inlineStyles = this.el.style;\n\t    var computedStyles = window.getComputedStyle(this.el);\n\t    var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t    if (transDuration && transDuration !== '0s') {\n\t      type = TYPE_TRANSITION;\n\t    } else {\n\t      var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t      if (animDuration && animDuration !== '0s') {\n\t        type = TYPE_ANIMATION;\n\t      }\n\t    }\n\t    if (type) {\n\t      this.typeCache[className] = type;\n\t    }\n\t    return type;\n\t  };\n\t\n\t  /**\n\t   * Setup a CSS transitionend/animationend callback.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} cb\n\t   */\n\t\n\t  p$1.setupCssCb = function (event, cb) {\n\t    this.pendingCssEvent = event;\n\t    var self = this;\n\t    var el = this.el;\n\t    var onEnd = this.pendingCssCb = function (e) {\n\t      if (e.target === el) {\n\t        off(el, event, onEnd);\n\t        self.pendingCssEvent = self.pendingCssCb = null;\n\t        if (!self.pendingJsCb && cb) {\n\t          cb();\n\t        }\n\t      }\n\t    };\n\t    on$1(el, event, onEnd);\n\t  };\n\t\n\t  /**\n\t   * Check if an element is hidden - in that case we can just\n\t   * skip the transition alltogether.\n\t   *\n\t   * @param {Element} el\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isHidden(el) {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t\n\t  var transition = {\n\t\n\t    priority: TRANSITION,\n\t\n\t    update: function update(id, oldId) {\n\t      var el = this.el;\n\t      // resolve on owner vm\n\t      var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t      id = id || 'v';\n\t      // apply on closest vm\n\t      el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n\t      if (oldId) {\n\t        removeClass(el, oldId + '-transition');\n\t      }\n\t      addClass(el, id + '-transition');\n\t    }\n\t  };\n\t\n\t  var bindingModes = config._propBindingModes;\n\t\n\t  var propDef = {\n\t\n\t    bind: function bind() {\n\t\n\t      var child = this.vm;\n\t      var parent = child._context;\n\t      // passed in from compiler directly\n\t      var prop = this.descriptor.prop;\n\t      var childKey = prop.path;\n\t      var parentKey = prop.parentPath;\n\t      var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t      var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t        val = coerceProp(prop, val);\n\t        if (assertProp(prop, val)) {\n\t          child[childKey] = val;\n\t        }\n\t      }, {\n\t        twoWay: twoWay,\n\t        filters: prop.filters,\n\t        // important: props need to be observed on the\n\t        // v-for scope if present\n\t        scope: this._scope\n\t      });\n\t\n\t      // set the child initial value.\n\t      initProp(child, prop, parentWatcher.value);\n\t\n\t      // setup two-way binding\n\t      if (twoWay) {\n\t        // important: defer the child watcher creation until\n\t        // the created hook (after data observation)\n\t        var self = this;\n\t        child.$once('pre-hook:created', function () {\n\t          self.childWatcher = new Watcher(child, childKey, function (val) {\n\t            parentWatcher.set(val);\n\t          }, {\n\t            // ensure sync upward before parent sync down.\n\t            // this is necessary in cases e.g. the child\n\t            // mutates a prop array, then replaces it. (#1683)\n\t            sync: true\n\t          });\n\t        });\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      this.parentWatcher.teardown();\n\t      if (this.childWatcher) {\n\t        this.childWatcher.teardown();\n\t      }\n\t    }\n\t  };\n\t\n\t  var component = {\n\t\n\t    priority: COMPONENT,\n\t\n\t    params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t    /**\n\t     * Setup. Two possible usages:\n\t     *\n\t     * - static:\n\t     *   <comp> or <div v-component=\"comp\">\n\t     *\n\t     * - dynamic:\n\t     *   <component :is=\"view\">\n\t     */\n\t\n\t    bind: function bind() {\n\t      if (!this.el.__vue__) {\n\t        // keep-alive cache\n\t        this.keepAlive = this.params.keepAlive;\n\t        if (this.keepAlive) {\n\t          this.cache = {};\n\t        }\n\t        // check inline-template\n\t        if (this.params.inlineTemplate) {\n\t          // extract inline template as a DocumentFragment\n\t          this.inlineTemplate = extractContent(this.el, true);\n\t        }\n\t        // component resolution related state\n\t        this.pendingComponentCb = this.Component = null;\n\t        // transition related state\n\t        this.pendingRemovals = 0;\n\t        this.pendingRemovalCb = null;\n\t        // create a ref anchor\n\t        this.anchor = createAnchor('v-component');\n\t        replace(this.el, this.anchor);\n\t        // remove is attribute.\n\t        // this is removed during compilation, but because compilation is\n\t        // cached, when the component is used elsewhere this attribute\n\t        // will remain at link time.\n\t        this.el.removeAttribute('is');\n\t        // remove ref, same as above\n\t        if (this.descriptor.ref) {\n\t          this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t        }\n\t        // if static, build right now.\n\t        if (this.literal) {\n\t          this.setComponent(this.expression);\n\t        }\n\t      } else {\n\t        'development' !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Public update, called by the watcher in the dynamic\n\t     * literal scenario, e.g. <component :is=\"view\">\n\t     */\n\t\n\t    update: function update(value) {\n\t      if (!this.literal) {\n\t        this.setComponent(value);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Switch dynamic components. May resolve the component\n\t     * asynchronously, and perform transition based on\n\t     * specified transition mode. Accepts a few additional\n\t     * arguments specifically for vue-router.\n\t     *\n\t     * The callback is called when the full transition is\n\t     * finished.\n\t     *\n\t     * @param {String} value\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    setComponent: function setComponent(value, cb) {\n\t      this.invalidatePending();\n\t      if (!value) {\n\t        // just remove current\n\t        this.unbuild(true);\n\t        this.remove(this.childVM, cb);\n\t        this.childVM = null;\n\t      } else {\n\t        var self = this;\n\t        this.resolveComponent(value, function () {\n\t          self.mountComponent(cb);\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Resolve the component constructor to use when creating\n\t     * the child vm.\n\t     */\n\t\n\t    resolveComponent: function resolveComponent(id, cb) {\n\t      var self = this;\n\t      this.pendingComponentCb = cancellable(function (Component) {\n\t        self.ComponentName = Component.options.name || id;\n\t        self.Component = Component;\n\t        cb();\n\t      });\n\t      this.vm._resolveComponent(id, this.pendingComponentCb);\n\t    },\n\t\n\t    /**\n\t     * Create a new instance using the current constructor and\n\t     * replace the existing instance. This method doesn't care\n\t     * whether the new component and the old one are actually\n\t     * the same.\n\t     *\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    mountComponent: function mountComponent(cb) {\n\t      // actual mount\n\t      this.unbuild(true);\n\t      var self = this;\n\t      var activateHook = this.Component.options.activate;\n\t      var cached = this.getCached();\n\t      var newComponent = this.build();\n\t      if (activateHook && !cached) {\n\t        this.waitingFor = newComponent;\n\t        activateHook.call(newComponent, function () {\n\t          if (self.waitingFor !== newComponent) {\n\t            return;\n\t          }\n\t          self.waitingFor = null;\n\t          self.transition(newComponent, cb);\n\t        });\n\t      } else {\n\t        // update ref for kept-alive component\n\t        if (cached) {\n\t          newComponent._updateRef();\n\t        }\n\t        this.transition(newComponent, cb);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * When the component changes or unbinds before an async\n\t     * constructor is resolved, we need to invalidate its\n\t     * pending callback.\n\t     */\n\t\n\t    invalidatePending: function invalidatePending() {\n\t      if (this.pendingComponentCb) {\n\t        this.pendingComponentCb.cancel();\n\t        this.pendingComponentCb = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Instantiate/insert a new child vm.\n\t     * If keep alive and has cached instance, insert that\n\t     * instance; otherwise build a new one and cache it.\n\t     *\n\t     * @param {Object} [extraOptions]\n\t     * @return {Vue} - the created instance\n\t     */\n\t\n\t    build: function build(extraOptions) {\n\t      var cached = this.getCached();\n\t      if (cached) {\n\t        return cached;\n\t      }\n\t      if (this.Component) {\n\t        // default options\n\t        var options = {\n\t          name: this.ComponentName,\n\t          el: cloneNode(this.el),\n\t          template: this.inlineTemplate,\n\t          // make sure to add the child with correct parent\n\t          // if this is a transcluded component, its parent\n\t          // should be the transclusion host.\n\t          parent: this._host || this.vm,\n\t          // if no inline-template, then the compiled\n\t          // linker can be cached for better performance.\n\t          _linkerCachable: !this.inlineTemplate,\n\t          _ref: this.descriptor.ref,\n\t          _asComponent: true,\n\t          _isRouterView: this._isRouterView,\n\t          // if this is a transcluded component, context\n\t          // will be the common parent vm of this instance\n\t          // and its host.\n\t          _context: this.vm,\n\t          // if this is inside an inline v-for, the scope\n\t          // will be the intermediate scope created for this\n\t          // repeat fragment. this is used for linking props\n\t          // and container directives.\n\t          _scope: this._scope,\n\t          // pass in the owner fragment of this component.\n\t          // this is necessary so that the fragment can keep\n\t          // track of its contained components in order to\n\t          // call attach/detach hooks for them.\n\t          _frag: this._frag\n\t        };\n\t        // extra options\n\t        // in 1.0.0 this is used by vue-router only\n\t        /* istanbul ignore if */\n\t        if (extraOptions) {\n\t          extend(options, extraOptions);\n\t        }\n\t        var child = new this.Component(options);\n\t        if (this.keepAlive) {\n\t          this.cache[this.Component.cid] = child;\n\t        }\n\t        /* istanbul ignore if */\n\t        if ('development' !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n\t          warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t        }\n\t        return child;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Try to get a cached instance of the current component.\n\t     *\n\t     * @return {Vue|undefined}\n\t     */\n\t\n\t    getCached: function getCached() {\n\t      return this.keepAlive && this.cache[this.Component.cid];\n\t    },\n\t\n\t    /**\n\t     * Teardown the current child, but defers cleanup so\n\t     * that we can separate the destroy and removal steps.\n\t     *\n\t     * @param {Boolean} defer\n\t     */\n\t\n\t    unbuild: function unbuild(defer) {\n\t      if (this.waitingFor) {\n\t        this.waitingFor.$destroy();\n\t        this.waitingFor = null;\n\t      }\n\t      var child = this.childVM;\n\t      if (!child || this.keepAlive) {\n\t        if (child) {\n\t          // remove ref\n\t          child._updateRef(true);\n\t        }\n\t        return;\n\t      }\n\t      // the sole purpose of `deferCleanup` is so that we can\n\t      // \"deactivate\" the vm right now and perform DOM removal\n\t      // later.\n\t      child.$destroy(false, defer);\n\t    },\n\t\n\t    /**\n\t     * Remove current destroyed child and manually do\n\t     * the cleanup after removal.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    remove: function remove(child, cb) {\n\t      var keepAlive = this.keepAlive;\n\t      if (child) {\n\t        // we may have a component switch when a previous\n\t        // component is still being transitioned out.\n\t        // we want to trigger only one lastest insertion cb\n\t        // when the existing transition finishes. (#1119)\n\t        this.pendingRemovals++;\n\t        this.pendingRemovalCb = cb;\n\t        var self = this;\n\t        child.$remove(function () {\n\t          self.pendingRemovals--;\n\t          if (!keepAlive) child._cleanup();\n\t          if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t            self.pendingRemovalCb();\n\t            self.pendingRemovalCb = null;\n\t          }\n\t        });\n\t      } else if (cb) {\n\t        cb();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Actually swap the components, depending on the\n\t     * transition mode. Defaults to simultaneous.\n\t     *\n\t     * @param {Vue} target\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    transition: function transition(target, cb) {\n\t      var self = this;\n\t      var current = this.childVM;\n\t      // for devtool inspection\n\t      if (true) {\n\t        if (current) current._inactive = true;\n\t        target._inactive = false;\n\t      }\n\t      this.childVM = target;\n\t      switch (self.params.transitionMode) {\n\t        case 'in-out':\n\t          target.$before(self.anchor, function () {\n\t            self.remove(current, cb);\n\t          });\n\t          break;\n\t        case 'out-in':\n\t          self.remove(current, function () {\n\t            target.$before(self.anchor, cb);\n\t          });\n\t          break;\n\t        default:\n\t          self.remove(current);\n\t          target.$before(self.anchor, cb);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Unbind.\n\t     */\n\t\n\t    unbind: function unbind() {\n\t      this.invalidatePending();\n\t      // Do not defer cleanup when unbinding\n\t      this.unbuild();\n\t      // destroy all keep-alive cached instances\n\t      if (this.cache) {\n\t        for (var key in this.cache) {\n\t          this.cache[key].$destroy();\n\t        }\n\t        this.cache = null;\n\t      }\n\t    }\n\t  };\n\t\n\t  var vClass = {\n\t\n\t    deep: true,\n\t\n\t    update: function update(value) {\n\t      if (value && typeof value === 'string') {\n\t        this.handleObject(stringToObject(value));\n\t      } else if (isPlainObject(value)) {\n\t        this.handleObject(value);\n\t      } else if (isArray(value)) {\n\t        this.handleArray(value);\n\t      } else {\n\t        this.cleanup();\n\t      }\n\t    },\n\t\n\t    handleObject: function handleObject(value) {\n\t      this.cleanup(value);\n\t      var keys = this.prevKeys = Object.keys(value);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        var key = keys[i];\n\t        if (value[key]) {\n\t          addClass(this.el, key);\n\t        } else {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    },\n\t\n\t    handleArray: function handleArray(value) {\n\t      this.cleanup(value);\n\t      for (var i = 0, l = value.length; i < l; i++) {\n\t        if (value[i]) {\n\t          addClass(this.el, value[i]);\n\t        }\n\t      }\n\t      this.prevKeys = value.slice();\n\t    },\n\t\n\t    cleanup: function cleanup(value) {\n\t      if (this.prevKeys) {\n\t        var i = this.prevKeys.length;\n\t        while (i--) {\n\t          var key = this.prevKeys[i];\n\t          if (key && (!value || !contains$1(value, key))) {\n\t            removeClass(this.el, key);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  function stringToObject(value) {\n\t    var res = {};\n\t    var keys = value.trim().split(/\\s+/);\n\t    var i = keys.length;\n\t    while (i--) {\n\t      res[keys[i]] = true;\n\t    }\n\t    return res;\n\t  }\n\t\n\t  function contains$1(value, key) {\n\t    return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n\t  }\n\t\n\t  var internalDirectives = {\n\t    style: style,\n\t    'class': vClass,\n\t    component: component,\n\t    prop: propDef,\n\t    transition: transition\n\t  };\n\t\n\t  var propBindingModes = config._propBindingModes;\n\t  var empty = {};\n\t\n\t  // regexes\n\t  var identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\t  var settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t  /**\n\t   * Compile props on a root element and return\n\t   * a props link function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Array} propOptions\n\t   * @return {Function} propsLinkFn\n\t   */\n\t\n\t  function compileProps(el, propOptions) {\n\t    var props = [];\n\t    var names = Object.keys(propOptions);\n\t    var i = names.length;\n\t    var options, name, attr, value, path, parsed, prop;\n\t    while (i--) {\n\t      name = names[i];\n\t      options = propOptions[name] || empty;\n\t\n\t      if ('development' !== 'production' && name === '$data') {\n\t        warn('Do not use $data as prop.');\n\t        continue;\n\t      }\n\t\n\t      // props could contain dashes, which will be\n\t      // interpreted as minus calculations by the parser\n\t      // so we need to camelize the path here\n\t      path = camelize(name);\n\t      if (!identRE$1.test(path)) {\n\t        'development' !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t        continue;\n\t      }\n\t\n\t      prop = {\n\t        name: name,\n\t        path: path,\n\t        options: options,\n\t        mode: propBindingModes.ONE_WAY,\n\t        raw: null\n\t      };\n\t\n\t      attr = hyphenate(name);\n\t      // first check dynamic version\n\t      if ((value = getBindAttr(el, attr)) === null) {\n\t        if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t          prop.mode = propBindingModes.TWO_WAY;\n\t        } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t          prop.mode = propBindingModes.ONE_TIME;\n\t        }\n\t      }\n\t      if (value !== null) {\n\t        // has dynamic binding!\n\t        prop.raw = value;\n\t        parsed = parseDirective(value);\n\t        value = parsed.expression;\n\t        prop.filters = parsed.filters;\n\t        // check binding type\n\t        if (isLiteral(value) && !parsed.filters) {\n\t          // for expressions containing literal numbers and\n\t          // booleans, there's no need to setup a prop binding,\n\t          // so we can optimize them as a one-time set.\n\t          prop.optimizedLiteral = true;\n\t        } else {\n\t          prop.dynamic = true;\n\t          // check non-settable path for two-way bindings\n\t          if ('development' !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n\t            prop.mode = propBindingModes.ONE_WAY;\n\t            warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t          }\n\t        }\n\t        prop.parentPath = value;\n\t\n\t        // warn required two-way\n\t        if ('development' !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n\t          warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t        }\n\t      } else if ((value = getAttr(el, attr)) !== null) {\n\t        // has literal binding!\n\t        prop.raw = value;\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        'development' !== 'production' && warn('Missing required prop: ' + name);\n\t      }\n\t      // push prop\n\t      props.push(prop);\n\t    }\n\t    return makePropsLinkFn(props);\n\t  }\n\t\n\t  /**\n\t   * Build a function that applies props to a vm.\n\t   *\n\t   * @param {Array} props\n\t   * @return {Function} propsLinkFn\n\t   */\n\t\n\t  function makePropsLinkFn(props) {\n\t    return function propsLinkFn(vm, scope) {\n\t      // store resolved props info\n\t      vm._props = {};\n\t      var i = props.length;\n\t      var prop, path, options, value, raw;\n\t      while (i--) {\n\t        prop = props[i];\n\t        raw = prop.raw;\n\t        path = prop.path;\n\t        options = prop.options;\n\t        vm._props[path] = prop;\n\t        if (raw === null) {\n\t          // initialize absent prop\n\t          initProp(vm, prop, getDefault(vm, options));\n\t        } else if (prop.dynamic) {\n\t          // dynamic prop\n\t          if (vm._context) {\n\t            if (prop.mode === propBindingModes.ONE_TIME) {\n\t              // one time binding\n\t              value = (scope || vm._context).$get(prop.parentPath);\n\t              initProp(vm, prop, value);\n\t            } else {\n\t              // dynamic binding\n\t              vm._bindDir({\n\t                name: 'prop',\n\t                def: propDef,\n\t                prop: prop\n\t              }, null, null, scope); // el, host, scope\n\t            }\n\t          } else {\n\t              'development' !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n\t            }\n\t        } else if (prop.optimizedLiteral) {\n\t          // optimized literal, cast it and just set once\n\t          var stripped = stripQuotes(raw);\n\t          value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          // string literal, but we need to cater for\n\t          // Boolean props with no value\n\t          value = options.type === Boolean && raw === '' ? true : raw;\n\t          initProp(vm, prop, value);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Get the default value of a prop.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Object} options\n\t   * @return {*}\n\t   */\n\t\n\t  function getDefault(vm, options) {\n\t    // no default, return undefined\n\t    if (!hasOwn(options, 'default')) {\n\t      // absent boolean value defaults to false\n\t      return options.type === Boolean ? false : undefined;\n\t    }\n\t    var def = options['default'];\n\t    // warn against non-factory defaults for Object & Array\n\t    if (isObject(def)) {\n\t      'development' !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t    }\n\t    // call factory function for non-Function types\n\t    return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t  }\n\t\n\t  // special binding prefixes\n\t  var bindRE = /^v-bind:|^:/;\n\t  var onRE = /^v-on:|^@/;\n\t  var argRE = /:(.*)$/;\n\t  var modifierRE = /\\.[^\\.]+/g;\n\t  var transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t  // terminal directives\n\t  var terminalDirectives = ['for', 'if'];\n\t\n\t  // default directive priority\n\t  var DEFAULT_PRIORITY = 1000;\n\t\n\t  /**\n\t   * Compile a template and return a reusable composite link\n\t   * function, which recursively contains more link functions\n\t   * inside. This top level compile function would normally\n\t   * be called on instance root nodes, but can also be used\n\t   * for partial compilation if the partial argument is true.\n\t   *\n\t   * The returned composite link function, when called, will\n\t   * return an unlink function that tearsdown all directives\n\t   * created during the linking phase.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Object} options\n\t   * @param {Boolean} partial\n\t   * @return {Function}\n\t   */\n\t\n\t  function compile(el, options, partial) {\n\t    // link function for the node itself.\n\t    var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t    // link function for the childNodes\n\t    var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t    /**\n\t     * A composite linker function to be called on a already\n\t     * compiled piece of DOM, which instantiates all directive\n\t     * instances.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {Element|DocumentFragment} el\n\t     * @param {Vue} [host] - host vm of transcluded content\n\t     * @param {Object} [scope] - v-for scope\n\t     * @param {Fragment} [frag] - link context fragment\n\t     * @return {Function|undefined}\n\t     */\n\t\n\t    return function compositeLinkFn(vm, el, host, scope, frag) {\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(el.childNodes);\n\t      // link\n\t      var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t        if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t        if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t      }, vm);\n\t      return makeUnlinkFn(vm, dirs);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Apply a linker to a vm/element pair and capture the\n\t   * directives created during the process.\n\t   *\n\t   * @param {Function} linker\n\t   * @param {Vue} vm\n\t   */\n\t\n\t  function linkAndCapture(linker, vm) {\n\t    var originalDirCount = vm._directives.length;\n\t    linker();\n\t    var dirs = vm._directives.slice(originalDirCount);\n\t    dirs.sort(directiveComparator);\n\t    for (var i = 0, l = dirs.length; i < l; i++) {\n\t      dirs[i]._bind();\n\t    }\n\t    return dirs;\n\t  }\n\t\n\t  /**\n\t   * Directive priority sort comparator\n\t   *\n\t   * @param {Object} a\n\t   * @param {Object} b\n\t   */\n\t\n\t  function directiveComparator(a, b) {\n\t    a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t    b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t    return a > b ? -1 : a === b ? 0 : 1;\n\t  }\n\t\n\t  /**\n\t   * Linker functions return an unlink function that\n\t   * tearsdown all directives instances generated during\n\t   * the process.\n\t   *\n\t   * We create unlink functions with only the necessary\n\t   * information to avoid retaining additional closures.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Array} dirs\n\t   * @param {Vue} [context]\n\t   * @param {Array} [contextDirs]\n\t   * @return {Function}\n\t   */\n\t\n\t  function makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t    function unlink(destroying) {\n\t      teardownDirs(vm, dirs, destroying);\n\t      if (context && contextDirs) {\n\t        teardownDirs(context, contextDirs);\n\t      }\n\t    }\n\t    // expose linked directives\n\t    unlink.dirs = dirs;\n\t    return unlink;\n\t  }\n\t\n\t  /**\n\t   * Teardown partial linked directives.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Array} dirs\n\t   * @param {Boolean} destroying\n\t   */\n\t\n\t  function teardownDirs(vm, dirs, destroying) {\n\t    var i = dirs.length;\n\t    while (i--) {\n\t      dirs[i]._teardown();\n\t      if (!destroying) {\n\t        vm._directives.$remove(dirs[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Compile link props on an instance.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   * @param {Object} props\n\t   * @param {Object} [scope]\n\t   * @return {Function}\n\t   */\n\t\n\t  function compileAndLinkProps(vm, el, props, scope) {\n\t    var propsLinkFn = compileProps(el, props);\n\t    var propDirs = linkAndCapture(function () {\n\t      propsLinkFn(vm, scope);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, propDirs);\n\t  }\n\t\n\t  /**\n\t   * Compile the root element of an instance.\n\t   *\n\t   * 1. attrs on context container (context scope)\n\t   * 2. attrs on the component template root node, if\n\t   *    replace:true (child scope)\n\t   *\n\t   * If this is a fragment instance, we only need to compile 1.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @param {Object} contextOptions\n\t   * @return {Function}\n\t   */\n\t\n\t  function compileRoot(el, options, contextOptions) {\n\t    var containerAttrs = options._containerAttrs;\n\t    var replacerAttrs = options._replacerAttrs;\n\t    var contextLinkFn, replacerLinkFn;\n\t\n\t    // only need to compile other attributes for\n\t    // non-fragment instances\n\t    if (el.nodeType !== 11) {\n\t      // for components, container and replacer need to be\n\t      // compiled separately and linked in different scopes.\n\t      if (options._asComponent) {\n\t        // 2. container attributes\n\t        if (containerAttrs && contextOptions) {\n\t          contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t        }\n\t        if (replacerAttrs) {\n\t          // 3. replacer attributes\n\t          replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t        }\n\t      } else {\n\t        // non-component, just compile as a normal element.\n\t        replacerLinkFn = compileDirectives(el.attributes, options);\n\t      }\n\t    } else if ('development' !== 'production' && containerAttrs) {\n\t      // warn container directives for fragment instances\n\t      var names = containerAttrs.filter(function (attr) {\n\t        // allow vue-loader/vueify scoped css attributes\n\t        return attr.name.indexOf('_v-') < 0 &&\n\t        // allow event listeners\n\t        !onRE.test(attr.name) &&\n\t        // allow slots\n\t        attr.name !== 'slot';\n\t      }).map(function (attr) {\n\t        return '\"' + attr.name + '\"';\n\t      });\n\t      if (names.length) {\n\t        var plural = names.length > 1;\n\t        warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t      }\n\t    }\n\t\n\t    options._containerAttrs = options._replacerAttrs = null;\n\t    return function rootLinkFn(vm, el, scope) {\n\t      // link context scope dirs\n\t      var context = vm._context;\n\t      var contextDirs;\n\t      if (context && contextLinkFn) {\n\t        contextDirs = linkAndCapture(function () {\n\t          contextLinkFn(context, el, null, scope);\n\t        }, context);\n\t      }\n\t\n\t      // link self\n\t      var selfDirs = linkAndCapture(function () {\n\t        if (replacerLinkFn) replacerLinkFn(vm, el);\n\t      }, vm);\n\t\n\t      // return the unlink function that tearsdown context\n\t      // container directives.\n\t      return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Compile a node and return a nodeLinkFn based on the\n\t   * node type.\n\t   *\n\t   * @param {Node} node\n\t   * @param {Object} options\n\t   * @return {Function|null}\n\t   */\n\t\n\t  function compileNode(node, options) {\n\t    var type = node.nodeType;\n\t    if (type === 1 && node.tagName !== 'SCRIPT') {\n\t      return compileElement(node, options);\n\t    } else if (type === 3 && node.data.trim()) {\n\t      return compileTextNode(node, options);\n\t    } else {\n\t      return null;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Compile an element and return a nodeLinkFn.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @return {Function|null}\n\t   */\n\t\n\t  function compileElement(el, options) {\n\t    // preprocess textareas.\n\t    // textarea treats its text content as the initial value.\n\t    // just bind it as an attr directive for value.\n\t    if (el.tagName === 'TEXTAREA') {\n\t      var tokens = parseText(el.value);\n\t      if (tokens) {\n\t        el.setAttribute(':value', tokensToExp(tokens));\n\t        el.value = '';\n\t      }\n\t    }\n\t    var linkFn;\n\t    var hasAttrs = el.hasAttributes();\n\t    // check terminal directives (for & if)\n\t    if (hasAttrs) {\n\t      linkFn = checkTerminalDirectives(el, options);\n\t    }\n\t    // check element directives\n\t    if (!linkFn) {\n\t      linkFn = checkElementDirectives(el, options);\n\t    }\n\t    // check component\n\t    if (!linkFn) {\n\t      linkFn = checkComponent(el, options);\n\t    }\n\t    // normal directives\n\t    if (!linkFn && hasAttrs) {\n\t      linkFn = compileDirectives(el.attributes, options);\n\t    }\n\t    return linkFn;\n\t  }\n\t\n\t  /**\n\t   * Compile a textNode and return a nodeLinkFn.\n\t   *\n\t   * @param {TextNode} node\n\t   * @param {Object} options\n\t   * @return {Function|null} textNodeLinkFn\n\t   */\n\t\n\t  function compileTextNode(node, options) {\n\t    // skip marked text nodes\n\t    if (node._skip) {\n\t      return removeText;\n\t    }\n\t\n\t    var tokens = parseText(node.wholeText);\n\t    if (!tokens) {\n\t      return null;\n\t    }\n\t\n\t    // mark adjacent text nodes as skipped,\n\t    // because we are using node.wholeText to compile\n\t    // all adjacent text nodes together. This fixes\n\t    // issues in IE where sometimes it splits up a single\n\t    // text node into multiple ones.\n\t    var next = node.nextSibling;\n\t    while (next && next.nodeType === 3) {\n\t      next._skip = true;\n\t      next = next.nextSibling;\n\t    }\n\t\n\t    var frag = document.createDocumentFragment();\n\t    var el, token;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t      frag.appendChild(el);\n\t    }\n\t    return makeTextNodeLinkFn(tokens, frag, options);\n\t  }\n\t\n\t  /**\n\t   * Linker for an skipped text node.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Text} node\n\t   */\n\t\n\t  function removeText(vm, node) {\n\t    remove(node);\n\t  }\n\t\n\t  /**\n\t   * Process a single text token.\n\t   *\n\t   * @param {Object} token\n\t   * @param {Object} options\n\t   * @return {Node}\n\t   */\n\t\n\t  function processTextToken(token, options) {\n\t    var el;\n\t    if (token.oneTime) {\n\t      el = document.createTextNode(token.value);\n\t    } else {\n\t      if (token.html) {\n\t        el = document.createComment('v-html');\n\t        setTokenType('html');\n\t      } else {\n\t        // IE will clean up empty textNodes during\n\t        // frag.cloneNode(true), so we have to give it\n\t        // something here...\n\t        el = document.createTextNode(' ');\n\t        setTokenType('text');\n\t      }\n\t    }\n\t    function setTokenType(type) {\n\t      if (token.descriptor) return;\n\t      var parsed = parseDirective(token.value);\n\t      token.descriptor = {\n\t        name: type,\n\t        def: publicDirectives[type],\n\t        expression: parsed.expression,\n\t        filters: parsed.filters\n\t      };\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Build a function that processes a textNode.\n\t   *\n\t   * @param {Array<Object>} tokens\n\t   * @param {DocumentFragment} frag\n\t   */\n\t\n\t  function makeTextNodeLinkFn(tokens, frag) {\n\t    return function textNodeLinkFn(vm, el, host, scope) {\n\t      var fragClone = frag.cloneNode(true);\n\t      var childNodes = toArray(fragClone.childNodes);\n\t      var token, value, node;\n\t      for (var i = 0, l = tokens.length; i < l; i++) {\n\t        token = tokens[i];\n\t        value = token.value;\n\t        if (token.tag) {\n\t          node = childNodes[i];\n\t          if (token.oneTime) {\n\t            value = (scope || vm).$eval(value);\n\t            if (token.html) {\n\t              replace(node, parseTemplate(value, true));\n\t            } else {\n\t              node.data = value;\n\t            }\n\t          } else {\n\t            vm._bindDir(token.descriptor, node, host, scope);\n\t          }\n\t        }\n\t      }\n\t      replace(el, fragClone);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Compile a node list and return a childLinkFn.\n\t   *\n\t   * @param {NodeList} nodeList\n\t   * @param {Object} options\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  function compileNodeList(nodeList, options) {\n\t    var linkFns = [];\n\t    var nodeLinkFn, childLinkFn, node;\n\t    for (var i = 0, l = nodeList.length; i < l; i++) {\n\t      node = nodeList[i];\n\t      nodeLinkFn = compileNode(node, options);\n\t      childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t      linkFns.push(nodeLinkFn, childLinkFn);\n\t    }\n\t    return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t  }\n\t\n\t  /**\n\t   * Make a child link function for a node's childNodes.\n\t   *\n\t   * @param {Array<Function>} linkFns\n\t   * @return {Function} childLinkFn\n\t   */\n\t\n\t  function makeChildLinkFn(linkFns) {\n\t    return function childLinkFn(vm, nodes, host, scope, frag) {\n\t      var node, nodeLinkFn, childrenLinkFn;\n\t      for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t        node = nodes[n];\n\t        nodeLinkFn = linkFns[i++];\n\t        childrenLinkFn = linkFns[i++];\n\t        // cache childNodes before linking parent, fix #657\n\t        var childNodes = toArray(node.childNodes);\n\t        if (nodeLinkFn) {\n\t          nodeLinkFn(vm, node, host, scope, frag);\n\t        }\n\t        if (childrenLinkFn) {\n\t          childrenLinkFn(vm, childNodes, host, scope, frag);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Check for element directives (custom elements that should\n\t   * be resovled as terminal directives).\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   */\n\t\n\t  function checkElementDirectives(el, options) {\n\t    var tag = el.tagName.toLowerCase();\n\t    if (commonTagRE.test(tag)) return;\n\t    // special case: give named slot a higher priority\n\t    // than unnamed slots\n\t    if (tag === 'slot' && hasBindAttr(el, 'name')) {\n\t      tag = '_namedSlot';\n\t    }\n\t    var def = resolveAsset(options, 'elementDirectives', tag);\n\t    if (def) {\n\t      return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if an element is a component. If yes, return\n\t   * a component link function.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  function checkComponent(el, options) {\n\t    var component = checkComponentAttr(el, options);\n\t    if (component) {\n\t      var ref = findRef(el);\n\t      var descriptor = {\n\t        name: 'component',\n\t        ref: ref,\n\t        expression: component.id,\n\t        def: internalDirectives.component,\n\t        modifiers: {\n\t          literal: !component.dynamic\n\t        }\n\t      };\n\t      var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t        if (ref) {\n\t          defineReactive((scope || vm).$refs, ref, null);\n\t        }\n\t        vm._bindDir(descriptor, el, host, scope, frag);\n\t      };\n\t      componentLinkFn.terminal = true;\n\t      return componentLinkFn;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check an element for terminal directives in fixed order.\n\t   * If it finds one, return a terminal link function.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @return {Function} terminalLinkFn\n\t   */\n\t\n\t  function checkTerminalDirectives(el, options) {\n\t    // skip v-pre\n\t    if (getAttr(el, 'v-pre') !== null) {\n\t      return skip;\n\t    }\n\t    // skip v-else block, but only if following v-if\n\t    if (el.hasAttribute('v-else')) {\n\t      var prev = el.previousElementSibling;\n\t      if (prev && prev.hasAttribute('v-if')) {\n\t        return skip;\n\t      }\n\t    }\n\t    var value, dirName;\n\t    for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n\t      dirName = terminalDirectives[i];\n\t      value = el.getAttribute('v-' + dirName);\n\t      if (value != null) {\n\t        return makeTerminalNodeLinkFn(el, dirName, value, options);\n\t      }\n\t    }\n\t  }\n\t\n\t  function skip() {}\n\t  skip.terminal = true;\n\t\n\t  /**\n\t   * Build a node link function for a terminal directive.\n\t   * A terminal link function terminates the current\n\t   * compilation recursion and handles compilation of the\n\t   * subtree in the directive.\n\t   *\n\t   * @param {Element} el\n\t   * @param {String} dirName\n\t   * @param {String} value\n\t   * @param {Object} options\n\t   * @param {Object} [def]\n\t   * @return {Function} terminalLinkFn\n\t   */\n\t\n\t  function makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n\t    var parsed = parseDirective(value);\n\t    var descriptor = {\n\t      name: dirName,\n\t      expression: parsed.expression,\n\t      filters: parsed.filters,\n\t      raw: value,\n\t      // either an element directive, or if/for\n\t      def: def || publicDirectives[dirName]\n\t    };\n\t    // check ref for v-for and router-view\n\t    if (dirName === 'for' || dirName === 'router-view') {\n\t      descriptor.ref = findRef(el);\n\t    }\n\t    var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t      if (descriptor.ref) {\n\t        defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    fn.terminal = true;\n\t    return fn;\n\t  }\n\t\n\t  /**\n\t   * Compile the directives on an element and return a linker.\n\t   *\n\t   * @param {Array|NamedNodeMap} attrs\n\t   * @param {Object} options\n\t   * @return {Function}\n\t   */\n\t\n\t  function compileDirectives(attrs, options) {\n\t    var i = attrs.length;\n\t    var dirs = [];\n\t    var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens;\n\t    while (i--) {\n\t      attr = attrs[i];\n\t      name = rawName = attr.name;\n\t      value = rawValue = attr.value;\n\t      tokens = parseText(value);\n\t      // reset arg\n\t      arg = null;\n\t      // check modifiers\n\t      modifiers = parseModifiers(name);\n\t      name = name.replace(modifierRE, '');\n\t\n\t      // attribute interpolations\n\t      if (tokens) {\n\t        value = tokensToExp(tokens);\n\t        arg = name;\n\t        pushDir('bind', publicDirectives.bind, tokens);\n\t        // warn against mixing mustaches with v-bind\n\t        if (true) {\n\t          if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t            return attr.name === ':class' || attr.name === 'v-bind:class';\n\t          })) {\n\t            warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t          }\n\t        }\n\t      } else\n\t\n\t        // special attribute: transition\n\t        if (transitionRE.test(name)) {\n\t          modifiers.literal = !bindRE.test(name);\n\t          pushDir('transition', internalDirectives.transition);\n\t        } else\n\t\n\t          // event handlers\n\t          if (onRE.test(name)) {\n\t            arg = name.replace(onRE, '');\n\t            pushDir('on', publicDirectives.on);\n\t          } else\n\t\n\t            // attribute bindings\n\t            if (bindRE.test(name)) {\n\t              dirName = name.replace(bindRE, '');\n\t              if (dirName === 'style' || dirName === 'class') {\n\t                pushDir(dirName, internalDirectives[dirName]);\n\t              } else {\n\t                arg = dirName;\n\t                pushDir('bind', publicDirectives.bind);\n\t              }\n\t            } else\n\t\n\t              // normal directives\n\t              if (name.indexOf('v-') === 0) {\n\t                // check arg\n\t                arg = (arg = name.match(argRE)) && arg[1];\n\t                if (arg) {\n\t                  name = name.replace(argRE, '');\n\t                }\n\t                // extract directive name\n\t                dirName = name.slice(2);\n\t\n\t                // skip v-else (when used with v-show)\n\t                if (dirName === 'else') {\n\t                  continue;\n\t                }\n\t\n\t                dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t                if (true) {\n\t                  assertAsset(dirDef, 'directive', dirName);\n\t                }\n\t\n\t                if (dirDef) {\n\t                  pushDir(dirName, dirDef);\n\t                }\n\t              }\n\t    }\n\t\n\t    /**\n\t     * Push a directive.\n\t     *\n\t     * @param {String} dirName\n\t     * @param {Object|Function} def\n\t     * @param {Array} [interpTokens]\n\t     */\n\t\n\t    function pushDir(dirName, def, interpTokens) {\n\t      var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t      var parsed = !hasOneTimeToken && parseDirective(value);\n\t      dirs.push({\n\t        name: dirName,\n\t        attr: rawName,\n\t        raw: rawValue,\n\t        def: def,\n\t        arg: arg,\n\t        modifiers: modifiers,\n\t        // conversion from interpolation strings with one-time token\n\t        // to expression is differed until directive bind time so that we\n\t        // have access to the actual vm context for one-time bindings.\n\t        expression: parsed && parsed.expression,\n\t        filters: parsed && parsed.filters,\n\t        interp: interpTokens,\n\t        hasOneTime: hasOneTimeToken\n\t      });\n\t    }\n\t\n\t    if (dirs.length) {\n\t      return makeNodeLinkFn(dirs);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Parse modifiers from directive attribute name.\n\t   *\n\t   * @param {String} name\n\t   * @return {Object}\n\t   */\n\t\n\t  function parseModifiers(name) {\n\t    var res = Object.create(null);\n\t    var match = name.match(modifierRE);\n\t    if (match) {\n\t      var i = match.length;\n\t      while (i--) {\n\t        res[match[i].slice(1)] = true;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t\n\t  /**\n\t   * Build a link function for all directives on a single node.\n\t   *\n\t   * @param {Array} directives\n\t   * @return {Function} directivesLinkFn\n\t   */\n\t\n\t  function makeNodeLinkFn(directives) {\n\t    return function nodeLinkFn(vm, el, host, scope, frag) {\n\t      // reverse apply because it's sorted low to high\n\t      var i = directives.length;\n\t      while (i--) {\n\t        vm._bindDir(directives[i], el, host, scope, frag);\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Check if an interpolation string contains one-time tokens.\n\t   *\n\t   * @param {Array} tokens\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function hasOneTime(tokens) {\n\t    var i = tokens.length;\n\t    while (i--) {\n\t      if (tokens[i].oneTime) return true;\n\t    }\n\t  }\n\t\n\t  var specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t  /**\n\t   * Process an element or a DocumentFragment based on a\n\t   * instance option object. This allows us to transclude\n\t   * a template node/fragment before the instance is created,\n\t   * so the processed fragment can then be cloned and reused\n\t   * in v-for.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @return {Element|DocumentFragment}\n\t   */\n\t\n\t  function transclude(el, options) {\n\t    // extract container attributes to pass them down\n\t    // to compiler, because they need to be compiled in\n\t    // parent scope. we are mutating the options object here\n\t    // assuming the same object will be used for compile\n\t    // right after this.\n\t    if (options) {\n\t      options._containerAttrs = extractAttrs(el);\n\t    }\n\t    // for template tags, what we want is its content as\n\t    // a documentFragment (for fragment instances)\n\t    if (isTemplate(el)) {\n\t      el = parseTemplate(el);\n\t    }\n\t    if (options) {\n\t      if (options._asComponent && !options.template) {\n\t        options.template = '<slot></slot>';\n\t      }\n\t      if (options.template) {\n\t        options._content = extractContent(el);\n\t        el = transcludeTemplate(el, options);\n\t      }\n\t    }\n\t    if (el instanceof DocumentFragment) {\n\t      // anchors for fragment instance\n\t      // passing in `persist: true` to avoid them being\n\t      // discarded by IE during template cloning\n\t      prepend(createAnchor('v-start', true), el);\n\t      el.appendChild(createAnchor('v-end', true));\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Process the template option.\n\t   * If the replace option is true this will swap the $el.\n\t   *\n\t   * @param {Element} el\n\t   * @param {Object} options\n\t   * @return {Element|DocumentFragment}\n\t   */\n\t\n\t  function transcludeTemplate(el, options) {\n\t    var template = options.template;\n\t    var frag = parseTemplate(template, true);\n\t    if (frag) {\n\t      var replacer = frag.firstChild;\n\t      var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t      if (options.replace) {\n\t        /* istanbul ignore if */\n\t        if (el === document.body) {\n\t          'development' !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t        }\n\t        // there are many cases where the instance must\n\t        // become a fragment instance: basically anything that\n\t        // can create more than 1 root nodes.\n\t        if (\n\t        // multi-children template\n\t        frag.childNodes.length > 1 ||\n\t        // non-element template\n\t        replacer.nodeType !== 1 ||\n\t        // single nested component\n\t        tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t        // element directive\n\t        resolveAsset(options, 'elementDirectives', tag) ||\n\t        // for block\n\t        replacer.hasAttribute('v-for') ||\n\t        // if block\n\t        replacer.hasAttribute('v-if')) {\n\t          return frag;\n\t        } else {\n\t          options._replacerAttrs = extractAttrs(replacer);\n\t          mergeAttrs(el, replacer);\n\t          return replacer;\n\t        }\n\t      } else {\n\t        el.appendChild(frag);\n\t        return el;\n\t      }\n\t    } else {\n\t      'development' !== 'production' && warn('Invalid template option: ' + template);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to extract a component container's attributes\n\t   * into a plain object array.\n\t   *\n\t   * @param {Element} el\n\t   * @return {Array}\n\t   */\n\t\n\t  function extractAttrs(el) {\n\t    if (el.nodeType === 1 && el.hasAttributes()) {\n\t      return toArray(el.attributes);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Merge the attributes of two elements, and make sure\n\t   * the class names are merged properly.\n\t   *\n\t   * @param {Element} from\n\t   * @param {Element} to\n\t   */\n\t\n\t  function mergeAttrs(from, to) {\n\t    var attrs = from.attributes;\n\t    var i = attrs.length;\n\t    var name, value;\n\t    while (i--) {\n\t      name = attrs[i].name;\n\t      value = attrs[i].value;\n\t      if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t        to.setAttribute(name, value);\n\t      } else if (name === 'class' && !parseText(value)) {\n\t        value.split(/\\s+/).forEach(function (cls) {\n\t          addClass(to, cls);\n\t        });\n\t      }\n\t    }\n\t  }\n\t\n\t  var compiler = Object.freeze({\n\t  \tcompile: compile,\n\t  \tcompileAndLinkProps: compileAndLinkProps,\n\t  \tcompileRoot: compileRoot,\n\t  \tterminalDirectives: terminalDirectives,\n\t  \ttransclude: transclude\n\t  });\n\t\n\t  function stateMixin (Vue) {\n\t\n\t    /**\n\t     * Accessor for `$data` property, since setting $data\n\t     * requires observing the new object and updating\n\t     * proxied properties.\n\t     */\n\t\n\t    Object.defineProperty(Vue.prototype, '$data', {\n\t      get: function get() {\n\t        return this._data;\n\t      },\n\t      set: function set(newData) {\n\t        if (newData !== this._data) {\n\t          this._setData(newData);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Setup the scope of an instance, which contains:\n\t     * - observed data\n\t     * - computed properties\n\t     * - user methods\n\t     * - meta properties\n\t     */\n\t\n\t    Vue.prototype._initState = function () {\n\t      this._initProps();\n\t      this._initMeta();\n\t      this._initMethods();\n\t      this._initData();\n\t      this._initComputed();\n\t    };\n\t\n\t    /**\n\t     * Initialize props.\n\t     */\n\t\n\t    Vue.prototype._initProps = function () {\n\t      var options = this.$options;\n\t      var el = options.el;\n\t      var props = options.props;\n\t      if (props && !el) {\n\t        'development' !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t      }\n\t      // make sure to convert string selectors into element now\n\t      el = options.el = query(el);\n\t      this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t      // props must be linked in proper scope if inside v-for\n\t      ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t    };\n\t\n\t    /**\n\t     * Initialize the data.\n\t     */\n\t\n\t    Vue.prototype._initData = function () {\n\t      var propsData = this._data;\n\t      var optionsDataFn = this.$options.data;\n\t      var optionsData = optionsDataFn && optionsDataFn();\n\t      if (optionsData) {\n\t        this._data = optionsData;\n\t        for (var prop in propsData) {\n\t          if ('development' !== 'production' && hasOwn(optionsData, prop)) {\n\t            warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t          }\n\t          if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n\t            set(optionsData, prop, propsData[prop]);\n\t          }\n\t        }\n\t      }\n\t      var data = this._data;\n\t      // proxy data on instance\n\t      var keys = Object.keys(data);\n\t      var i, key;\n\t      i = keys.length;\n\t      while (i--) {\n\t        key = keys[i];\n\t        this._proxy(key);\n\t      }\n\t      // observe data\n\t      observe(data, this);\n\t    };\n\t\n\t    /**\n\t     * Swap the instance's $data. Called in $data's setter.\n\t     *\n\t     * @param {Object} newData\n\t     */\n\t\n\t    Vue.prototype._setData = function (newData) {\n\t      newData = newData || {};\n\t      var oldData = this._data;\n\t      this._data = newData;\n\t      var keys, key, i;\n\t      // unproxy keys not present in new data\n\t      keys = Object.keys(oldData);\n\t      i = keys.length;\n\t      while (i--) {\n\t        key = keys[i];\n\t        if (!(key in newData)) {\n\t          this._unproxy(key);\n\t        }\n\t      }\n\t      // proxy keys not already proxied,\n\t      // and trigger change for changed values\n\t      keys = Object.keys(newData);\n\t      i = keys.length;\n\t      while (i--) {\n\t        key = keys[i];\n\t        if (!hasOwn(this, key)) {\n\t          // new property\n\t          this._proxy(key);\n\t        }\n\t      }\n\t      oldData.__ob__.removeVm(this);\n\t      observe(newData, this);\n\t      this._digest();\n\t    };\n\t\n\t    /**\n\t     * Proxy a property, so that\n\t     * vm.prop === vm._data.prop\n\t     *\n\t     * @param {String} key\n\t     */\n\t\n\t    Vue.prototype._proxy = function (key) {\n\t      if (!isReserved(key)) {\n\t        // need to store ref to self here\n\t        // because these getter/setters might\n\t        // be called by child scopes via\n\t        // prototype inheritance.\n\t        var self = this;\n\t        Object.defineProperty(self, key, {\n\t          configurable: true,\n\t          enumerable: true,\n\t          get: function proxyGetter() {\n\t            return self._data[key];\n\t          },\n\t          set: function proxySetter(val) {\n\t            self._data[key] = val;\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Unproxy a property.\n\t     *\n\t     * @param {String} key\n\t     */\n\t\n\t    Vue.prototype._unproxy = function (key) {\n\t      if (!isReserved(key)) {\n\t        delete this[key];\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Force update on every watcher in scope.\n\t     */\n\t\n\t    Vue.prototype._digest = function () {\n\t      for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t        this._watchers[i].update(true); // shallow updates\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Setup computed properties. They are essentially\n\t     * special getter/setters\n\t     */\n\t\n\t    function noop() {}\n\t    Vue.prototype._initComputed = function () {\n\t      var computed = this.$options.computed;\n\t      if (computed) {\n\t        for (var key in computed) {\n\t          var userDef = computed[key];\n\t          var def = {\n\t            enumerable: true,\n\t            configurable: true\n\t          };\n\t          if (typeof userDef === 'function') {\n\t            def.get = makeComputedGetter(userDef, this);\n\t            def.set = noop;\n\t          } else {\n\t            def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n\t            def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n\t          }\n\t          Object.defineProperty(this, key, def);\n\t        }\n\t      }\n\t    };\n\t\n\t    function makeComputedGetter(getter, owner) {\n\t      var watcher = new Watcher(owner, getter, null, {\n\t        lazy: true\n\t      });\n\t      return function computedGetter() {\n\t        if (watcher.dirty) {\n\t          watcher.evaluate();\n\t        }\n\t        if (Dep.target) {\n\t          watcher.depend();\n\t        }\n\t        return watcher.value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Setup instance methods. Methods must be bound to the\n\t     * instance since they might be passed down as a prop to\n\t     * child components.\n\t     */\n\t\n\t    Vue.prototype._initMethods = function () {\n\t      var methods = this.$options.methods;\n\t      if (methods) {\n\t        for (var key in methods) {\n\t          this[key] = bind$1(methods[key], this);\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Initialize meta information like $index, $key & $value.\n\t     */\n\t\n\t    Vue.prototype._initMeta = function () {\n\t      var metas = this.$options._meta;\n\t      if (metas) {\n\t        for (var key in metas) {\n\t          defineReactive(this, key, metas[key]);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  var eventRE = /^v-on:|^@/;\n\t\n\t  function eventsMixin (Vue) {\n\t\n\t    /**\n\t     * Setup the instance's option events & watchers.\n\t     * If the value is a string, we pull it from the\n\t     * instance's methods by name.\n\t     */\n\t\n\t    Vue.prototype._initEvents = function () {\n\t      var options = this.$options;\n\t      if (options._asComponent) {\n\t        registerComponentEvents(this, options.el);\n\t      }\n\t      registerCallbacks(this, '$on', options.events);\n\t      registerCallbacks(this, '$watch', options.watch);\n\t    };\n\t\n\t    /**\n\t     * Register v-on events on a child component\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {Element} el\n\t     */\n\t\n\t    function registerComponentEvents(vm, el) {\n\t      var attrs = el.attributes;\n\t      var name, handler;\n\t      for (var i = 0, l = attrs.length; i < l; i++) {\n\t        name = attrs[i].name;\n\t        if (eventRE.test(name)) {\n\t          name = name.replace(eventRE, '');\n\t          handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t          handler._fromParent = true;\n\t          vm.$on(name.replace(eventRE), handler);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Register callbacks for option events and watchers.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {String} action\n\t     * @param {Object} hash\n\t     */\n\t\n\t    function registerCallbacks(vm, action, hash) {\n\t      if (!hash) return;\n\t      var handlers, key, i, j;\n\t      for (key in hash) {\n\t        handlers = hash[key];\n\t        if (isArray(handlers)) {\n\t          for (i = 0, j = handlers.length; i < j; i++) {\n\t            register(vm, action, key, handlers[i]);\n\t          }\n\t        } else {\n\t          register(vm, action, key, handlers);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Helper to register an event/watch callback.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {String} action\n\t     * @param {String} key\n\t     * @param {Function|String|Object} handler\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    function register(vm, action, key, handler, options) {\n\t      var type = typeof handler;\n\t      if (type === 'function') {\n\t        vm[action](key, handler, options);\n\t      } else if (type === 'string') {\n\t        var methods = vm.$options.methods;\n\t        var method = methods && methods[handler];\n\t        if (method) {\n\t          vm[action](key, method, options);\n\t        } else {\n\t          'development' !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t        }\n\t      } else if (handler && type === 'object') {\n\t        register(vm, action, key, handler.handler, handler);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Setup recursive attached/detached calls\n\t     */\n\t\n\t    Vue.prototype._initDOMHooks = function () {\n\t      this.$on('hook:attached', onAttached);\n\t      this.$on('hook:detached', onDetached);\n\t    };\n\t\n\t    /**\n\t     * Callback to recursively call attached hook on children\n\t     */\n\t\n\t    function onAttached() {\n\t      if (!this._isAttached) {\n\t        this._isAttached = true;\n\t        this.$children.forEach(callAttach);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Iterator to call attached hook\n\t     *\n\t     * @param {Vue} child\n\t     */\n\t\n\t    function callAttach(child) {\n\t      if (!child._isAttached && inDoc(child.$el)) {\n\t        child._callHook('attached');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Callback to recursively call detached hook on children\n\t     */\n\t\n\t    function onDetached() {\n\t      if (this._isAttached) {\n\t        this._isAttached = false;\n\t        this.$children.forEach(callDetach);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Iterator to call detached hook\n\t     *\n\t     * @param {Vue} child\n\t     */\n\t\n\t    function callDetach(child) {\n\t      if (child._isAttached && !inDoc(child.$el)) {\n\t        child._callHook('detached');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Trigger all handlers for a hook\n\t     *\n\t     * @param {String} hook\n\t     */\n\t\n\t    Vue.prototype._callHook = function (hook) {\n\t      this.$emit('pre-hook:' + hook);\n\t      var handlers = this.$options[hook];\n\t      if (handlers) {\n\t        for (var i = 0, j = handlers.length; i < j; i++) {\n\t          handlers[i].call(this);\n\t        }\n\t      }\n\t      this.$emit('hook:' + hook);\n\t    };\n\t  }\n\t\n\t  function noop() {}\n\t\n\t  /**\n\t   * A directive links a DOM element with a piece of data,\n\t   * which is the result of evaluating an expression.\n\t   * It registers a watcher with the expression and calls\n\t   * the DOM update function when a change is triggered.\n\t   *\n\t   * @param {String} name\n\t   * @param {Node} el\n\t   * @param {Vue} vm\n\t   * @param {Object} descriptor\n\t   *                 - {String} name\n\t   *                 - {Object} def\n\t   *                 - {String} expression\n\t   *                 - {Array<Object>} [filters]\n\t   *                 - {Boolean} literal\n\t   *                 - {String} attr\n\t   *                 - {String} raw\n\t   * @param {Object} def - directive definition object\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   * @constructor\n\t   */\n\t  function Directive(descriptor, vm, el, host, scope, frag) {\n\t    this.vm = vm;\n\t    this.el = el;\n\t    // copy descriptor properties\n\t    this.descriptor = descriptor;\n\t    this.name = descriptor.name;\n\t    this.expression = descriptor.expression;\n\t    this.arg = descriptor.arg;\n\t    this.modifiers = descriptor.modifiers;\n\t    this.filters = descriptor.filters;\n\t    this.literal = this.modifiers && this.modifiers.literal;\n\t    // private\n\t    this._locked = false;\n\t    this._bound = false;\n\t    this._listeners = null;\n\t    // link context\n\t    this._host = host;\n\t    this._scope = scope;\n\t    this._frag = frag;\n\t    // store directives on node in dev mode\n\t    if ('development' !== 'production' && this.el) {\n\t      this.el._vue_directives = this.el._vue_directives || [];\n\t      this.el._vue_directives.push(this);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Initialize the directive, mixin definition properties,\n\t   * setup the watcher, call definition bind() and update()\n\t   * if present.\n\t   *\n\t   * @param {Object} def\n\t   */\n\t\n\t  Directive.prototype._bind = function () {\n\t    var name = this.name;\n\t    var descriptor = this.descriptor;\n\t\n\t    // remove attribute\n\t    if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t      var attr = descriptor.attr || 'v-' + name;\n\t      this.el.removeAttribute(attr);\n\t    }\n\t\n\t    // copy def properties\n\t    var def = descriptor.def;\n\t    if (typeof def === 'function') {\n\t      this.update = def;\n\t    } else {\n\t      extend(this, def);\n\t    }\n\t\n\t    // setup directive params\n\t    this._setupParams();\n\t\n\t    // initial bind\n\t    if (this.bind) {\n\t      this.bind();\n\t    }\n\t    this._bound = true;\n\t\n\t    if (this.literal) {\n\t      this.update && this.update(descriptor.raw);\n\t    } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t      // wrapped updater for context\n\t      var dir = this;\n\t      if (this.update) {\n\t        this._update = function (val, oldVal) {\n\t          if (!dir._locked) {\n\t            dir.update(val, oldVal);\n\t          }\n\t        };\n\t      } else {\n\t        this._update = noop;\n\t      }\n\t      var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n\t      var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n\t      var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t      {\n\t        filters: this.filters,\n\t        twoWay: this.twoWay,\n\t        deep: this.deep,\n\t        preProcess: preProcess,\n\t        postProcess: postProcess,\n\t        scope: this._scope\n\t      });\n\t      // v-model with inital inline value need to sync back to\n\t      // model instead of update to DOM on init. They would\n\t      // set the afterBind hook to indicate that.\n\t      if (this.afterBind) {\n\t        this.afterBind();\n\t      } else if (this.update) {\n\t        this.update(watcher.value);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup all param attributes, e.g. track-by,\n\t   * transition-mode, etc...\n\t   */\n\t\n\t  Directive.prototype._setupParams = function () {\n\t    if (!this.params) {\n\t      return;\n\t    }\n\t    var params = this.params;\n\t    // swap the params array with a fresh object.\n\t    this.params = Object.create(null);\n\t    var i = params.length;\n\t    var key, val, mappedKey;\n\t    while (i--) {\n\t      key = params[i];\n\t      mappedKey = camelize(key);\n\t      val = getBindAttr(this.el, key);\n\t      if (val != null) {\n\t        // dynamic\n\t        this._setupParamWatcher(mappedKey, val);\n\t      } else {\n\t        // static\n\t        val = getAttr(this.el, key);\n\t        if (val != null) {\n\t          this.params[mappedKey] = val === '' ? true : val;\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup a watcher for a dynamic param.\n\t   *\n\t   * @param {String} key\n\t   * @param {String} expression\n\t   */\n\t\n\t  Directive.prototype._setupParamWatcher = function (key, expression) {\n\t    var self = this;\n\t    var called = false;\n\t    var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t      self.params[key] = val;\n\t      // since we are in immediate mode,\n\t      // only call the param change callbacks if this is not the first update.\n\t      if (called) {\n\t        var cb = self.paramWatchers && self.paramWatchers[key];\n\t        if (cb) {\n\t          cb.call(self, val, oldVal);\n\t        }\n\t      } else {\n\t        called = true;\n\t      }\n\t    }, {\n\t      immediate: true,\n\t      user: false\n\t    });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t  };\n\t\n\t  /**\n\t   * Check if the directive is a function caller\n\t   * and if the expression is a callable one. If both true,\n\t   * we wrap up the expression and use it as the event\n\t   * handler.\n\t   *\n\t   * e.g. on-click=\"a++\"\n\t   *\n\t   * @return {Boolean}\n\t   */\n\t\n\t  Directive.prototype._checkStatement = function () {\n\t    var expression = this.expression;\n\t    if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t      var fn = parseExpression(expression).get;\n\t      var scope = this._scope || this.vm;\n\t      var handler = function handler(e) {\n\t        scope.$event = e;\n\t        fn.call(scope, scope);\n\t        scope.$event = null;\n\t      };\n\t      if (this.filters) {\n\t        handler = scope._applyFilters(handler, null, this.filters);\n\t      }\n\t      this.update(handler);\n\t      return true;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the corresponding value with the setter.\n\t   * This should only be used in two-way directives\n\t   * e.g. v-model.\n\t   *\n\t   * @param {*} value\n\t   * @public\n\t   */\n\t\n\t  Directive.prototype.set = function (value) {\n\t    /* istanbul ignore else */\n\t    if (this.twoWay) {\n\t      this._withLock(function () {\n\t        this._watcher.set(value);\n\t      });\n\t    } else if (true) {\n\t      warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Execute a function while preventing that function from\n\t   * triggering updates on this directive instance.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Directive.prototype._withLock = function (fn) {\n\t    var self = this;\n\t    self._locked = true;\n\t    fn.call(self);\n\t    nextTick(function () {\n\t      self._locked = false;\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Convenience method that attaches a DOM event listener\n\t   * to the directive element and autometically tears it down\n\t   * during unbind.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} handler\n\t   */\n\t\n\t  Directive.prototype.on = function (event, handler) {\n\t    on$1(this.el, event, handler);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t  };\n\t\n\t  /**\n\t   * Teardown the watcher and call unbind.\n\t   */\n\t\n\t  Directive.prototype._teardown = function () {\n\t    if (this._bound) {\n\t      this._bound = false;\n\t      if (this.unbind) {\n\t        this.unbind();\n\t      }\n\t      if (this._watcher) {\n\t        this._watcher.teardown();\n\t      }\n\t      var listeners = this._listeners;\n\t      var i;\n\t      if (listeners) {\n\t        i = listeners.length;\n\t        while (i--) {\n\t          off(this.el, listeners[i][0], listeners[i][1]);\n\t        }\n\t      }\n\t      var unwatchFns = this._paramUnwatchFns;\n\t      if (unwatchFns) {\n\t        i = unwatchFns.length;\n\t        while (i--) {\n\t          unwatchFns[i]();\n\t        }\n\t      }\n\t      if ('development' !== 'production' && this.el) {\n\t        this.el._vue_directives.$remove(this);\n\t      }\n\t      this.vm = this.el = this._watcher = this._listeners = null;\n\t    }\n\t  };\n\t\n\t  function lifecycleMixin (Vue) {\n\t\n\t    /**\n\t     * Update v-ref for component.\n\t     *\n\t     * @param {Boolean} remove\n\t     */\n\t\n\t    Vue.prototype._updateRef = function (remove) {\n\t      var ref = this.$options._ref;\n\t      if (ref) {\n\t        var refs = (this._scope || this._context).$refs;\n\t        if (remove) {\n\t          if (refs[ref] === this) {\n\t            refs[ref] = null;\n\t          }\n\t        } else {\n\t          refs[ref] = this;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Transclude, compile and link element.\n\t     *\n\t     * If a pre-compiled linker is available, that means the\n\t     * passed in element will be pre-transcluded and compiled\n\t     * as well - all we need to do is to call the linker.\n\t     *\n\t     * Otherwise we need to call transclude/compile/link here.\n\t     *\n\t     * @param {Element} el\n\t     * @return {Element}\n\t     */\n\t\n\t    Vue.prototype._compile = function (el) {\n\t      var options = this.$options;\n\t\n\t      // transclude and init element\n\t      // transclude can potentially replace original\n\t      // so we need to keep reference; this step also injects\n\t      // the template and caches the original attributes\n\t      // on the container node and replacer node.\n\t      var original = el;\n\t      el = transclude(el, options);\n\t      this._initElement(el);\n\t\n\t      // handle v-pre on root node (#2026)\n\t      if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t        return;\n\t      }\n\t\n\t      // root is always compiled per-instance, because\n\t      // container attrs and props can be different every time.\n\t      var contextOptions = this._context && this._context.$options;\n\t      var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t      // compile and link the rest\n\t      var contentLinkFn;\n\t      var ctor = this.constructor;\n\t      // component compilation can be cached\n\t      // as long as it's not using inline-template\n\t      if (options._linkerCachable) {\n\t        contentLinkFn = ctor.linker;\n\t        if (!contentLinkFn) {\n\t          contentLinkFn = ctor.linker = compile(el, options);\n\t        }\n\t      }\n\t\n\t      // link phase\n\t      // make sure to link root with prop scope!\n\t      var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t      var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t      // register composite unlink function\n\t      // to be called during instance destruction\n\t      this._unlinkFn = function () {\n\t        rootUnlinkFn();\n\t        // passing destroying: true to avoid searching and\n\t        // splicing the directives\n\t        contentUnlinkFn(true);\n\t      };\n\t\n\t      // finally replace original\n\t      if (options.replace) {\n\t        replace(original, el);\n\t      }\n\t\n\t      this._isCompiled = true;\n\t      this._callHook('compiled');\n\t      return el;\n\t    };\n\t\n\t    /**\n\t     * Initialize instance element. Called in the public\n\t     * $mount() method.\n\t     *\n\t     * @param {Element} el\n\t     */\n\t\n\t    Vue.prototype._initElement = function (el) {\n\t      if (el instanceof DocumentFragment) {\n\t        this._isFragment = true;\n\t        this.$el = this._fragmentStart = el.firstChild;\n\t        this._fragmentEnd = el.lastChild;\n\t        // set persisted text anchors to empty\n\t        if (this._fragmentStart.nodeType === 3) {\n\t          this._fragmentStart.data = this._fragmentEnd.data = '';\n\t        }\n\t        this._fragment = el;\n\t      } else {\n\t        this.$el = el;\n\t      }\n\t      this.$el.__vue__ = this;\n\t      this._callHook('beforeCompile');\n\t    };\n\t\n\t    /**\n\t     * Create and bind a directive to an element.\n\t     *\n\t     * @param {String} name - directive name\n\t     * @param {Node} node   - target node\n\t     * @param {Object} desc - parsed directive descriptor\n\t     * @param {Object} def  - directive definition object\n\t     * @param {Vue} [host] - transclusion host component\n\t     * @param {Object} [scope] - v-for scope\n\t     * @param {Fragment} [frag] - owner fragment\n\t     */\n\t\n\t    Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t      this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t    };\n\t\n\t    /**\n\t     * Teardown an instance, unobserves the data, unbind all the\n\t     * directives, turn off all the event listeners, etc.\n\t     *\n\t     * @param {Boolean} remove - whether to remove the DOM node.\n\t     * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t     *                                 be called later\n\t     */\n\t\n\t    Vue.prototype._destroy = function (remove, deferCleanup) {\n\t      if (this._isBeingDestroyed) {\n\t        if (!deferCleanup) {\n\t          this._cleanup();\n\t        }\n\t        return;\n\t      }\n\t\n\t      var destroyReady;\n\t      var pendingRemoval;\n\t\n\t      var self = this;\n\t      // Cleanup should be called either synchronously or asynchronoysly as\n\t      // callback of this.$remove(), or if remove and deferCleanup are false.\n\t      // In any case it should be called after all other removing, unbinding and\n\t      // turning of is done\n\t      var cleanupIfPossible = function cleanupIfPossible() {\n\t        if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t          self._cleanup();\n\t        }\n\t      };\n\t\n\t      // remove DOM element\n\t      if (remove && this.$el) {\n\t        pendingRemoval = true;\n\t        this.$remove(function () {\n\t          pendingRemoval = false;\n\t          cleanupIfPossible();\n\t        });\n\t      }\n\t\n\t      this._callHook('beforeDestroy');\n\t      this._isBeingDestroyed = true;\n\t      var i;\n\t      // remove self from parent. only necessary\n\t      // if parent is not being destroyed as well.\n\t      var parent = this.$parent;\n\t      if (parent && !parent._isBeingDestroyed) {\n\t        parent.$children.$remove(this);\n\t        // unregister ref (remove: true)\n\t        this._updateRef(true);\n\t      }\n\t      // destroy all children.\n\t      i = this.$children.length;\n\t      while (i--) {\n\t        this.$children[i].$destroy();\n\t      }\n\t      // teardown props\n\t      if (this._propsUnlinkFn) {\n\t        this._propsUnlinkFn();\n\t      }\n\t      // teardown all directives. this also tearsdown all\n\t      // directive-owned watchers.\n\t      if (this._unlinkFn) {\n\t        this._unlinkFn();\n\t      }\n\t      i = this._watchers.length;\n\t      while (i--) {\n\t        this._watchers[i].teardown();\n\t      }\n\t      // remove reference to self on $el\n\t      if (this.$el) {\n\t        this.$el.__vue__ = null;\n\t      }\n\t\n\t      destroyReady = true;\n\t      cleanupIfPossible();\n\t    };\n\t\n\t    /**\n\t     * Clean up to ensure garbage collection.\n\t     * This is called after the leave transition if there\n\t     * is any.\n\t     */\n\t\n\t    Vue.prototype._cleanup = function () {\n\t      if (this._isDestroyed) {\n\t        return;\n\t      }\n\t      // remove self from owner fragment\n\t      // do it in cleanup so that we can call $destroy with\n\t      // defer right when a fragment is about to be removed.\n\t      if (this._frag) {\n\t        this._frag.children.$remove(this);\n\t      }\n\t      // remove reference from data ob\n\t      // frozen object may not have observer.\n\t      if (this._data.__ob__) {\n\t        this._data.__ob__.removeVm(this);\n\t      }\n\t      // Clean up references to private properties and other\n\t      // instances. preserve reference to _data so that proxy\n\t      // accessors still work. The only potential side effect\n\t      // here is that mutating the instance after it's destroyed\n\t      // may affect the state of other components that are still\n\t      // observing the same object, but that seems to be a\n\t      // reasonable responsibility for the user rather than\n\t      // always throwing an error on them.\n\t      this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t      // call the last hook...\n\t      this._isDestroyed = true;\n\t      this._callHook('destroyed');\n\t      // turn off all instance listeners.\n\t      this.$off();\n\t    };\n\t  }\n\t\n\t  function miscMixin (Vue) {\n\t\n\t    /**\n\t     * Apply a list of filter (descriptors) to a value.\n\t     * Using plain for loops here because this will be called in\n\t     * the getter of any watcher with filters so it is very\n\t     * performance sensitive.\n\t     *\n\t     * @param {*} value\n\t     * @param {*} [oldValue]\n\t     * @param {Array} filters\n\t     * @param {Boolean} write\n\t     * @return {*}\n\t     */\n\t\n\t    Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t      var filter, fn, args, arg, offset, i, l, j, k;\n\t      for (i = 0, l = filters.length; i < l; i++) {\n\t        filter = filters[i];\n\t        fn = resolveAsset(this.$options, 'filters', filter.name);\n\t        if (true) {\n\t          assertAsset(fn, 'filter', filter.name);\n\t        }\n\t        if (!fn) continue;\n\t        fn = write ? fn.write : fn.read || fn;\n\t        if (typeof fn !== 'function') continue;\n\t        args = write ? [value, oldValue] : [value];\n\t        offset = write ? 2 : 1;\n\t        if (filter.args) {\n\t          for (j = 0, k = filter.args.length; j < k; j++) {\n\t            arg = filter.args[j];\n\t            args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t          }\n\t        }\n\t        value = fn.apply(this, args);\n\t      }\n\t      return value;\n\t    };\n\t\n\t    /**\n\t     * Resolve a component, depending on whether the component\n\t     * is defined normally or using an async factory function.\n\t     * Resolves synchronously if already resolved, otherwise\n\t     * resolves asynchronously and caches the resolved\n\t     * constructor on the factory.\n\t     *\n\t     * @param {String} id\n\t     * @param {Function} cb\n\t     */\n\t\n\t    Vue.prototype._resolveComponent = function (id, cb) {\n\t      var factory = resolveAsset(this.$options, 'components', id);\n\t      if (true) {\n\t        assertAsset(factory, 'component', id);\n\t      }\n\t      if (!factory) {\n\t        return;\n\t      }\n\t      // async component factory\n\t      if (!factory.options) {\n\t        if (factory.resolved) {\n\t          // cached\n\t          cb(factory.resolved);\n\t        } else if (factory.requested) {\n\t          // pool callbacks\n\t          factory.pendingCallbacks.push(cb);\n\t        } else {\n\t          factory.requested = true;\n\t          var cbs = factory.pendingCallbacks = [cb];\n\t          factory(function resolve(res) {\n\t            if (isPlainObject(res)) {\n\t              res = Vue.extend(res);\n\t            }\n\t            // cache resolved\n\t            factory.resolved = res;\n\t            // invoke callbacks\n\t            for (var i = 0, l = cbs.length; i < l; i++) {\n\t              cbs[i](res);\n\t            }\n\t          }, function reject(reason) {\n\t            'development' !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t          });\n\t        }\n\t      } else {\n\t        // normal component\n\t        cb(factory);\n\t      }\n\t    };\n\t  }\n\t\n\t  function globalAPI (Vue) {\n\t\n\t    /**\n\t     * Expose useful internals\n\t     */\n\t\n\t    Vue.util = util;\n\t    Vue.config = config;\n\t    Vue.set = set;\n\t    Vue['delete'] = del;\n\t    Vue.nextTick = nextTick;\n\t\n\t    /**\n\t     * The following are exposed for advanced usage / plugins\n\t     */\n\t\n\t    Vue.compiler = compiler;\n\t    Vue.FragmentFactory = FragmentFactory;\n\t    Vue.internalDirectives = internalDirectives;\n\t    Vue.parsers = {\n\t      path: path,\n\t      text: text$1,\n\t      template: template,\n\t      directive: directive,\n\t      expression: expression\n\t    };\n\t\n\t    /**\n\t     * Each instance constructor, including Vue, has a unique\n\t     * cid. This enables us to create wrapped \"child\n\t     * constructors\" for prototypal inheritance and cache them.\n\t     */\n\t\n\t    Vue.cid = 0;\n\t    var cid = 1;\n\t\n\t    /**\n\t     * Class inheritance\n\t     *\n\t     * @param {Object} extendOptions\n\t     */\n\t\n\t    Vue.extend = function (extendOptions) {\n\t      extendOptions = extendOptions || {};\n\t      var Super = this;\n\t      var isFirstExtend = Super.cid === 0;\n\t      if (isFirstExtend && extendOptions._Ctor) {\n\t        return extendOptions._Ctor;\n\t      }\n\t      var name = extendOptions.name || Super.options.name;\n\t      if (true) {\n\t        if (!/^[a-zA-Z][\\w-]+$/.test(name)) {\n\t          warn('Invalid component name: ' + name);\n\t          name = null;\n\t        }\n\t      }\n\t      var Sub = createClass(name || 'VueComponent');\n\t      Sub.prototype = Object.create(Super.prototype);\n\t      Sub.prototype.constructor = Sub;\n\t      Sub.cid = cid++;\n\t      Sub.options = mergeOptions(Super.options, extendOptions);\n\t      Sub['super'] = Super;\n\t      // allow further extension\n\t      Sub.extend = Super.extend;\n\t      // create asset registers, so extended classes\n\t      // can have their private assets too.\n\t      config._assetTypes.forEach(function (type) {\n\t        Sub[type] = Super[type];\n\t      });\n\t      // enable recursive self-lookup\n\t      if (name) {\n\t        Sub.options.components[name] = Sub;\n\t      }\n\t      // cache constructor\n\t      if (isFirstExtend) {\n\t        extendOptions._Ctor = Sub;\n\t      }\n\t      return Sub;\n\t    };\n\t\n\t    /**\n\t     * A function that returns a sub-class constructor with the\n\t     * given name. This gives us much nicer output when\n\t     * logging instances in the console.\n\t     *\n\t     * @param {String} name\n\t     * @return {Function}\n\t     */\n\t\n\t    function createClass(name) {\n\t      return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    }\n\t\n\t    /**\n\t     * Plugin system\n\t     *\n\t     * @param {Object} plugin\n\t     */\n\t\n\t    Vue.use = function (plugin) {\n\t      /* istanbul ignore if */\n\t      if (plugin.installed) {\n\t        return;\n\t      }\n\t      // additional parameters\n\t      var args = toArray(arguments, 1);\n\t      args.unshift(this);\n\t      if (typeof plugin.install === 'function') {\n\t        plugin.install.apply(plugin, args);\n\t      } else {\n\t        plugin.apply(null, args);\n\t      }\n\t      plugin.installed = true;\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Apply a global mixin by merging it into the default\n\t     * options.\n\t     */\n\t\n\t    Vue.mixin = function (mixin) {\n\t      Vue.options = mergeOptions(Vue.options, mixin);\n\t    };\n\t\n\t    /**\n\t     * Create asset registration methods with the following\n\t     * signature:\n\t     *\n\t     * @param {String} id\n\t     * @param {*} definition\n\t     */\n\t\n\t    config._assetTypes.forEach(function (type) {\n\t      Vue[type] = function (id, definition) {\n\t        if (!definition) {\n\t          return this.options[type + 's'][id];\n\t        } else {\n\t          /* istanbul ignore if */\n\t          if (true) {\n\t            if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t              warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t            }\n\t          }\n\t          if (type === 'component' && isPlainObject(definition)) {\n\t            definition.name = id;\n\t            definition = Vue.extend(definition);\n\t          }\n\t          this.options[type + 's'][id] = definition;\n\t          return definition;\n\t        }\n\t      };\n\t    });\n\t  }\n\t\n\t  var filterRE = /[^|]\\|[^|]/;\n\t\n\t  function dataAPI (Vue) {\n\t\n\t    /**\n\t     * Get the value from an expression on this vm.\n\t     *\n\t     * @param {String} exp\n\t     * @param {Boolean} [asStatement]\n\t     * @return {*}\n\t     */\n\t\n\t    Vue.prototype.$get = function (exp, asStatement) {\n\t      var res = parseExpression(exp);\n\t      if (res) {\n\t        if (asStatement && !isSimplePath(exp)) {\n\t          var self = this;\n\t          return function statementHandler() {\n\t            self.$arguments = toArray(arguments);\n\t            var result = res.get.call(self, self);\n\t            self.$arguments = null;\n\t            return result;\n\t          };\n\t        } else {\n\t          try {\n\t            return res.get.call(this, this);\n\t          } catch (e) {}\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the value from an expression on this vm.\n\t     * The expression must be a valid left-hand\n\t     * expression in an assignment.\n\t     *\n\t     * @param {String} exp\n\t     * @param {*} val\n\t     */\n\t\n\t    Vue.prototype.$set = function (exp, val) {\n\t      var res = parseExpression(exp, true);\n\t      if (res && res.set) {\n\t        res.set.call(this, this, val);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Delete a property on the VM\n\t     *\n\t     * @param {String} key\n\t     */\n\t\n\t    Vue.prototype.$delete = function (key) {\n\t      del(this._data, key);\n\t    };\n\t\n\t    /**\n\t     * Watch an expression, trigger callback when its\n\t     * value changes.\n\t     *\n\t     * @param {String|Function} expOrFn\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} deep\n\t     *                 - {Boolean} immediate\n\t     * @return {Function} - unwatchFn\n\t     */\n\t\n\t    Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t      var vm = this;\n\t      var parsed;\n\t      if (typeof expOrFn === 'string') {\n\t        parsed = parseDirective(expOrFn);\n\t        expOrFn = parsed.expression;\n\t      }\n\t      var watcher = new Watcher(vm, expOrFn, cb, {\n\t        deep: options && options.deep,\n\t        sync: options && options.sync,\n\t        filters: parsed && parsed.filters,\n\t        user: !options || options.user !== false\n\t      });\n\t      if (options && options.immediate) {\n\t        cb.call(vm, watcher.value);\n\t      }\n\t      return function unwatchFn() {\n\t        watcher.teardown();\n\t      };\n\t    };\n\t\n\t    /**\n\t     * Evaluate a text directive, including filters.\n\t     *\n\t     * @param {String} text\n\t     * @param {Boolean} [asStatement]\n\t     * @return {String}\n\t     */\n\t\n\t    Vue.prototype.$eval = function (text, asStatement) {\n\t      // check for filters.\n\t      if (filterRE.test(text)) {\n\t        var dir = parseDirective(text);\n\t        // the filter regex check might give false positive\n\t        // for pipes inside strings, so it's possible that\n\t        // we don't get any filters here\n\t        var val = this.$get(dir.expression, asStatement);\n\t        return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t      } else {\n\t        // no filter\n\t        return this.$get(text, asStatement);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Interpolate a piece of template text.\n\t     *\n\t     * @param {String} text\n\t     * @return {String}\n\t     */\n\t\n\t    Vue.prototype.$interpolate = function (text) {\n\t      var tokens = parseText(text);\n\t      var vm = this;\n\t      if (tokens) {\n\t        if (tokens.length === 1) {\n\t          return vm.$eval(tokens[0].value) + '';\n\t        } else {\n\t          return tokens.map(function (token) {\n\t            return token.tag ? vm.$eval(token.value) : token.value;\n\t          }).join('');\n\t        }\n\t      } else {\n\t        return text;\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Log instance data as a plain JS object\n\t     * so that it is easier to inspect in console.\n\t     * This method assumes console is available.\n\t     *\n\t     * @param {String} [path]\n\t     */\n\t\n\t    Vue.prototype.$log = function (path) {\n\t      var data = path ? getPath(this._data, path) : this._data;\n\t      if (data) {\n\t        data = clean(data);\n\t      }\n\t      // include computed fields\n\t      if (!path) {\n\t        for (var key in this.$options.computed) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t      console.log(data);\n\t    };\n\t\n\t    /**\n\t     * \"clean\" a getter/setter converted object into a plain\n\t     * object copy.\n\t     *\n\t     * @param {Object} - obj\n\t     * @return {Object}\n\t     */\n\t\n\t    function clean(obj) {\n\t      return JSON.parse(JSON.stringify(obj));\n\t    }\n\t  }\n\t\n\t  function domAPI (Vue) {\n\t\n\t    /**\n\t     * Convenience on-instance nextTick. The callback is\n\t     * auto-bound to the instance, and this avoids component\n\t     * modules having to rely on the global Vue.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Vue.prototype.$nextTick = function (fn) {\n\t      nextTick(fn, this);\n\t    };\n\t\n\t    /**\n\t     * Append instance to target\n\t     *\n\t     * @param {Node} target\n\t     * @param {Function} [cb]\n\t     * @param {Boolean} [withTransition] - defaults to true\n\t     */\n\t\n\t    Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t      return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t    };\n\t\n\t    /**\n\t     * Prepend instance to target\n\t     *\n\t     * @param {Node} target\n\t     * @param {Function} [cb]\n\t     * @param {Boolean} [withTransition] - defaults to true\n\t     */\n\t\n\t    Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t      target = query(target);\n\t      if (target.hasChildNodes()) {\n\t        this.$before(target.firstChild, cb, withTransition);\n\t      } else {\n\t        this.$appendTo(target, cb, withTransition);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Insert instance before target\n\t     *\n\t     * @param {Node} target\n\t     * @param {Function} [cb]\n\t     * @param {Boolean} [withTransition] - defaults to true\n\t     */\n\t\n\t    Vue.prototype.$before = function (target, cb, withTransition) {\n\t      return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t    };\n\t\n\t    /**\n\t     * Insert instance after target\n\t     *\n\t     * @param {Node} target\n\t     * @param {Function} [cb]\n\t     * @param {Boolean} [withTransition] - defaults to true\n\t     */\n\t\n\t    Vue.prototype.$after = function (target, cb, withTransition) {\n\t      target = query(target);\n\t      if (target.nextSibling) {\n\t        this.$before(target.nextSibling, cb, withTransition);\n\t      } else {\n\t        this.$appendTo(target.parentNode, cb, withTransition);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Remove instance from DOM\n\t     *\n\t     * @param {Function} [cb]\n\t     * @param {Boolean} [withTransition] - defaults to true\n\t     */\n\t\n\t    Vue.prototype.$remove = function (cb, withTransition) {\n\t      if (!this.$el.parentNode) {\n\t        return cb && cb();\n\t      }\n\t      var inDocument = this._isAttached && inDoc(this.$el);\n\t      // if we are not in document, no need to check\n\t      // for transitions\n\t      if (!inDocument) withTransition = false;\n\t      var self = this;\n\t      var realCb = function realCb() {\n\t        if (inDocument) self._callHook('detached');\n\t        if (cb) cb();\n\t      };\n\t      if (this._isFragment) {\n\t        removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t      } else {\n\t        var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t        op(this.$el, this, realCb);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Shared DOM insertion function.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {Element} target\n\t     * @param {Function} [cb]\n\t     * @param {Boolean} [withTransition]\n\t     * @param {Function} op1 - op for non-transition insert\n\t     * @param {Function} op2 - op for transition insert\n\t     * @return vm\n\t     */\n\t\n\t    function insert(vm, target, cb, withTransition, op1, op2) {\n\t      target = query(target);\n\t      var targetIsDetached = !inDoc(target);\n\t      var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t      var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t      if (vm._isFragment) {\n\t        mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t          op(node, target, vm);\n\t        });\n\t        cb && cb();\n\t      } else {\n\t        op(vm.$el, target, vm, cb);\n\t      }\n\t      if (shouldCallHook) {\n\t        vm._callHook('attached');\n\t      }\n\t      return vm;\n\t    }\n\t\n\t    /**\n\t     * Check for selectors\n\t     *\n\t     * @param {String|Element} el\n\t     */\n\t\n\t    function query(el) {\n\t      return typeof el === 'string' ? document.querySelector(el) : el;\n\t    }\n\t\n\t    /**\n\t     * Append operation that takes a callback.\n\t     *\n\t     * @param {Node} el\n\t     * @param {Node} target\n\t     * @param {Vue} vm - unused\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    function append(el, target, vm, cb) {\n\t      target.appendChild(el);\n\t      if (cb) cb();\n\t    }\n\t\n\t    /**\n\t     * InsertBefore operation that takes a callback.\n\t     *\n\t     * @param {Node} el\n\t     * @param {Node} target\n\t     * @param {Vue} vm - unused\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    function beforeWithCb(el, target, vm, cb) {\n\t      before(el, target);\n\t      if (cb) cb();\n\t    }\n\t\n\t    /**\n\t     * Remove operation that takes a callback.\n\t     *\n\t     * @param {Node} el\n\t     * @param {Vue} vm - unused\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    function removeWithCb(el, vm, cb) {\n\t      remove(el);\n\t      if (cb) cb();\n\t    }\n\t  }\n\t\n\t  function eventsAPI (Vue) {\n\t\n\t    /**\n\t     * Listen on the given `event` with `fn`.\n\t     *\n\t     * @param {String} event\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Vue.prototype.$on = function (event, fn) {\n\t      (this._events[event] || (this._events[event] = [])).push(fn);\n\t      modifyListenerCount(this, event, 1);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Adds an `event` listener that will be invoked a single\n\t     * time then automatically removed.\n\t     *\n\t     * @param {String} event\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Vue.prototype.$once = function (event, fn) {\n\t      var self = this;\n\t      function on() {\n\t        self.$off(event, on);\n\t        fn.apply(this, arguments);\n\t      }\n\t      on.fn = fn;\n\t      this.$on(event, on);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Remove the given callback for `event` or all\n\t     * registered callbacks.\n\t     *\n\t     * @param {String} event\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Vue.prototype.$off = function (event, fn) {\n\t      var cbs;\n\t      // all\n\t      if (!arguments.length) {\n\t        if (this.$parent) {\n\t          for (event in this._events) {\n\t            cbs = this._events[event];\n\t            if (cbs) {\n\t              modifyListenerCount(this, event, -cbs.length);\n\t            }\n\t          }\n\t        }\n\t        this._events = {};\n\t        return this;\n\t      }\n\t      // specific event\n\t      cbs = this._events[event];\n\t      if (!cbs) {\n\t        return this;\n\t      }\n\t      if (arguments.length === 1) {\n\t        modifyListenerCount(this, event, -cbs.length);\n\t        this._events[event] = null;\n\t        return this;\n\t      }\n\t      // specific handler\n\t      var cb;\n\t      var i = cbs.length;\n\t      while (i--) {\n\t        cb = cbs[i];\n\t        if (cb === fn || cb.fn === fn) {\n\t          modifyListenerCount(this, event, -1);\n\t          cbs.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Trigger an event on self.\n\t     *\n\t     * @param {String|Object} event\n\t     * @return {Boolean} shouldPropagate\n\t     */\n\t\n\t    Vue.prototype.$emit = function (event) {\n\t      var isSource = typeof event === 'string';\n\t      event = isSource ? event : event.name;\n\t      var cbs = this._events[event];\n\t      var shouldPropagate = isSource || !cbs;\n\t      if (cbs) {\n\t        cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t        // this is a somewhat hacky solution to the question raised\n\t        // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t        // the propagation handling is somewhat broken. Therefore we\n\t        // need to treat these inline callbacks differently.\n\t        var hasParentCbs = isSource && cbs.some(function (cb) {\n\t          return cb._fromParent;\n\t        });\n\t        if (hasParentCbs) {\n\t          shouldPropagate = false;\n\t        }\n\t        var args = toArray(arguments, 1);\n\t        for (var i = 0, l = cbs.length; i < l; i++) {\n\t          var cb = cbs[i];\n\t          var res = cb.apply(this, args);\n\t          if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t            shouldPropagate = true;\n\t          }\n\t        }\n\t      }\n\t      return shouldPropagate;\n\t    };\n\t\n\t    /**\n\t     * Recursively broadcast an event to all children instances.\n\t     *\n\t     * @param {String|Object} event\n\t     * @param {...*} additional arguments\n\t     */\n\t\n\t    Vue.prototype.$broadcast = function (event) {\n\t      var isSource = typeof event === 'string';\n\t      event = isSource ? event : event.name;\n\t      // if no child has registered for this event,\n\t      // then there's no need to broadcast.\n\t      if (!this._eventsCount[event]) return;\n\t      var children = this.$children;\n\t      var args = toArray(arguments);\n\t      if (isSource) {\n\t        // use object event to indicate non-source emit\n\t        // on children\n\t        args[0] = { name: event, source: this };\n\t      }\n\t      for (var i = 0, l = children.length; i < l; i++) {\n\t        var child = children[i];\n\t        var shouldPropagate = child.$emit.apply(child, args);\n\t        if (shouldPropagate) {\n\t          child.$broadcast.apply(child, args);\n\t        }\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Recursively propagate an event up the parent chain.\n\t     *\n\t     * @param {String} event\n\t     * @param {...*} additional arguments\n\t     */\n\t\n\t    Vue.prototype.$dispatch = function (event) {\n\t      var shouldPropagate = this.$emit.apply(this, arguments);\n\t      if (!shouldPropagate) return;\n\t      var parent = this.$parent;\n\t      var args = toArray(arguments);\n\t      // use object event to indicate non-source emit\n\t      // on parents\n\t      args[0] = { name: event, source: this };\n\t      while (parent) {\n\t        shouldPropagate = parent.$emit.apply(parent, args);\n\t        parent = shouldPropagate ? parent.$parent : null;\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Modify the listener counts on all parents.\n\t     * This bookkeeping allows $broadcast to return early when\n\t     * no child has listened to a certain event.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {String} event\n\t     * @param {Number} count\n\t     */\n\t\n\t    var hookRE = /^hook:/;\n\t    function modifyListenerCount(vm, event, count) {\n\t      var parent = vm.$parent;\n\t      // hooks do not get broadcasted so no need\n\t      // to do bookkeeping for them\n\t      if (!parent || !count || hookRE.test(event)) return;\n\t      while (parent) {\n\t        parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t        parent = parent.$parent;\n\t      }\n\t    }\n\t  }\n\t\n\t  function lifecycleAPI (Vue) {\n\t\n\t    /**\n\t     * Set instance target element and kick off the compilation\n\t     * process. The passed in `el` can be a selector string, an\n\t     * existing Element, or a DocumentFragment (for block\n\t     * instances).\n\t     *\n\t     * @param {Element|DocumentFragment|string} el\n\t     * @public\n\t     */\n\t\n\t    Vue.prototype.$mount = function (el) {\n\t      if (this._isCompiled) {\n\t        'development' !== 'production' && warn('$mount() should be called only once.');\n\t        return;\n\t      }\n\t      el = query(el);\n\t      if (!el) {\n\t        el = document.createElement('div');\n\t      }\n\t      this._compile(el);\n\t      this._initDOMHooks();\n\t      if (inDoc(this.$el)) {\n\t        this._callHook('attached');\n\t        ready.call(this);\n\t      } else {\n\t        this.$once('hook:attached', ready);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Mark an instance as ready.\n\t     */\n\t\n\t    function ready() {\n\t      this._isAttached = true;\n\t      this._isReady = true;\n\t      this._callHook('ready');\n\t    }\n\t\n\t    /**\n\t     * Teardown the instance, simply delegate to the internal\n\t     * _destroy.\n\t     */\n\t\n\t    Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t      this._destroy(remove, deferCleanup);\n\t    };\n\t\n\t    /**\n\t     * Partially compile a piece of DOM and return a\n\t     * decompile function.\n\t     *\n\t     * @param {Element|DocumentFragment} el\n\t     * @param {Vue} [host]\n\t     * @return {Function}\n\t     */\n\t\n\t    Vue.prototype.$compile = function (el, host, scope, frag) {\n\t      return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The exposed Vue constructor.\n\t   *\n\t   * API conventions:\n\t   * - public API methods/properties are prefixed with `$`\n\t   * - internal methods/properties are prefixed with `_`\n\t   * - non-prefixed properties are assumed to be proxied user\n\t   *   data.\n\t   *\n\t   * @constructor\n\t   * @param {Object} [options]\n\t   * @public\n\t   */\n\t\n\t  function Vue(options) {\n\t    this._init(options);\n\t  }\n\t\n\t  // install internals\n\t  initMixin(Vue);\n\t  stateMixin(Vue);\n\t  eventsMixin(Vue);\n\t  lifecycleMixin(Vue);\n\t  miscMixin(Vue);\n\t\n\t  // install APIs\n\t  globalAPI(Vue);\n\t  dataAPI(Vue);\n\t  domAPI(Vue);\n\t  eventsAPI(Vue);\n\t  lifecycleAPI(Vue);\n\t\n\t  var convertArray = vFor._postProcess;\n\t\n\t  /**\n\t   * Limit filter for arrays\n\t   *\n\t   * @param {Number} n\n\t   * @param {Number} offset (Decimal expected)\n\t   */\n\t\n\t  function limitBy(arr, n, offset) {\n\t    offset = offset ? parseInt(offset, 10) : 0;\n\t    n = toNumber(n);\n\t    return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t  }\n\t\n\t  /**\n\t   * Filter filter for arrays\n\t   *\n\t   * @param {String} search\n\t   * @param {String} [delimiter]\n\t   * @param {String} ...dataKeys\n\t   */\n\t\n\t  function filterBy(arr, search, delimiter) {\n\t    arr = convertArray(arr);\n\t    if (search == null) {\n\t      return arr;\n\t    }\n\t    if (typeof search === 'function') {\n\t      return arr.filter(search);\n\t    }\n\t    // cast to lowercase string\n\t    search = ('' + search).toLowerCase();\n\t    // allow optional `in` delimiter\n\t    // because why not\n\t    var n = delimiter === 'in' ? 3 : 2;\n\t    // extract and flatten keys\n\t    var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t      return prev.concat(cur);\n\t    }, []);\n\t    var res = [];\n\t    var item, key, val, j;\n\t    for (var i = 0, l = arr.length; i < l; i++) {\n\t      item = arr[i];\n\t      val = item && item.$value || item;\n\t      j = keys.length;\n\t      if (j) {\n\t        while (j--) {\n\t          key = keys[j];\n\t          if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t            res.push(item);\n\t            break;\n\t          }\n\t        }\n\t      } else if (contains(item, search)) {\n\t        res.push(item);\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t\n\t  /**\n\t   * Filter filter for arrays\n\t   *\n\t   * @param {String} sortKey\n\t   * @param {String} reverse\n\t   */\n\t\n\t  function orderBy(arr, sortKey, reverse) {\n\t    arr = convertArray(arr);\n\t    if (!sortKey) {\n\t      return arr;\n\t    }\n\t    var order = reverse && reverse < 0 ? -1 : 1;\n\t    // sort on a copy to avoid mutating original array\n\t    return arr.slice().sort(function (a, b) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t      return a === b ? 0 : a > b ? order : -order;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * String contain helper\n\t   *\n\t   * @param {*} val\n\t   * @param {String} search\n\t   */\n\t\n\t  function contains(val, search) {\n\t    var i;\n\t    if (isPlainObject(val)) {\n\t      var keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) {\n\t        if (contains(val[keys[i]], search)) {\n\t          return true;\n\t        }\n\t      }\n\t    } else if (isArray(val)) {\n\t      i = val.length;\n\t      while (i--) {\n\t        if (contains(val[i], search)) {\n\t          return true;\n\t        }\n\t      }\n\t    } else if (val != null) {\n\t      return val.toString().toLowerCase().indexOf(search) > -1;\n\t    }\n\t  }\n\t\n\t  var digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t  // asset collections must be a plain object.\n\t  var filters = {\n\t\n\t    orderBy: orderBy,\n\t    filterBy: filterBy,\n\t    limitBy: limitBy,\n\t\n\t    /**\n\t     * Stringify value.\n\t     *\n\t     * @param {Number} indent\n\t     */\n\t\n\t    json: {\n\t      read: function read(value, indent) {\n\t        return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t      },\n\t      write: function write(value) {\n\t        try {\n\t          return JSON.parse(value);\n\t        } catch (e) {\n\t          return value;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * 'abc' => 'Abc'\n\t     */\n\t\n\t    capitalize: function capitalize(value) {\n\t      if (!value && value !== 0) return '';\n\t      value = value.toString();\n\t      return value.charAt(0).toUpperCase() + value.slice(1);\n\t    },\n\t\n\t    /**\n\t     * 'abc' => 'ABC'\n\t     */\n\t\n\t    uppercase: function uppercase(value) {\n\t      return value || value === 0 ? value.toString().toUpperCase() : '';\n\t    },\n\t\n\t    /**\n\t     * 'AbC' => 'abc'\n\t     */\n\t\n\t    lowercase: function lowercase(value) {\n\t      return value || value === 0 ? value.toString().toLowerCase() : '';\n\t    },\n\t\n\t    /**\n\t     * 12345 => $12,345.00\n\t     *\n\t     * @param {String} sign\n\t     */\n\t\n\t    currency: function currency(value, _currency) {\n\t      value = parseFloat(value);\n\t      if (!isFinite(value) || !value && value !== 0) return '';\n\t      _currency = _currency != null ? _currency : '$';\n\t      var stringified = Math.abs(value).toFixed(2);\n\t      var _int = stringified.slice(0, -3);\n\t      var i = _int.length % 3;\n\t      var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t      var _float = stringified.slice(-3);\n\t      var sign = value < 0 ? '-' : '';\n\t      return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t    },\n\t\n\t    /**\n\t     * 'item' => 'items'\n\t     *\n\t     * @params\n\t     *  an array of strings corresponding to\n\t     *  the single, double, triple ... forms of the word to\n\t     *  be pluralized. When the number to be pluralized\n\t     *  exceeds the length of the args, it will use the last\n\t     *  entry in the array.\n\t     *\n\t     *  e.g. ['single', 'double', 'triple', 'multiple']\n\t     */\n\t\n\t    pluralize: function pluralize(value) {\n\t      var args = toArray(arguments, 1);\n\t      return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t    },\n\t\n\t    /**\n\t     * Debounce a handler function.\n\t     *\n\t     * @param {Function} handler\n\t     * @param {Number} delay = 300\n\t     * @return {Function}\n\t     */\n\t\n\t    debounce: function debounce(handler, delay) {\n\t      if (!handler) return;\n\t      if (!delay) {\n\t        delay = 300;\n\t      }\n\t      return _debounce(handler, delay);\n\t    }\n\t  };\n\t\n\t  var partial = {\n\t\n\t    priority: PARTIAL,\n\t\n\t    params: ['name'],\n\t\n\t    // watch changes to name for dynamic partials\n\t    paramWatchers: {\n\t      name: function name(value) {\n\t        vIf.remove.call(this);\n\t        if (value) {\n\t          this.insert(value);\n\t        }\n\t      }\n\t    },\n\t\n\t    bind: function bind() {\n\t      this.anchor = createAnchor('v-partial');\n\t      replace(this.el, this.anchor);\n\t      this.insert(this.params.name);\n\t    },\n\t\n\t    insert: function insert(id) {\n\t      var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t      if (true) {\n\t        assertAsset(partial, 'partial', id);\n\t      }\n\t      if (partial) {\n\t        this.factory = new FragmentFactory(this.vm, partial);\n\t        vIf.insert.call(this);\n\t      }\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      if (this.frag) {\n\t        this.frag.destroy();\n\t      }\n\t    }\n\t  };\n\t\n\t  // This is the elementDirective that handles <content>\n\t  // transclusions. It relies on the raw content of an\n\t  // instance being stored as `$options._content` during\n\t  // the transclude phase.\n\t\n\t  // We are exporting two versions, one for named and one\n\t  // for unnamed, because the unnamed slots must be compiled\n\t  // AFTER all named slots have selected their content. So\n\t  // we need to give them different priorities in the compilation\n\t  // process. (See #1965)\n\t\n\t  var slot = {\n\t\n\t    priority: SLOT,\n\t\n\t    bind: function bind() {\n\t      var host = this.vm;\n\t      var raw = host.$options._content;\n\t      if (!raw) {\n\t        this.fallback();\n\t        return;\n\t      }\n\t      var context = host._context;\n\t      var slotName = this.params && this.params.name;\n\t      if (!slotName) {\n\t        // Default slot\n\t        this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n\t      } else {\n\t        // Named slot\n\t        var selector = '[slot=\"' + slotName + '\"]';\n\t        var nodes = raw.querySelectorAll(selector);\n\t        if (nodes.length) {\n\t          this.tryCompile(extractFragment(nodes, raw), context, host);\n\t        } else {\n\t          this.fallback();\n\t        }\n\t      }\n\t    },\n\t\n\t    tryCompile: function tryCompile(content, context, host) {\n\t      if (content.hasChildNodes()) {\n\t        this.compile(content, context, host);\n\t      } else {\n\t        this.fallback();\n\t      }\n\t    },\n\t\n\t    compile: function compile(content, context, host) {\n\t      if (content && context) {\n\t        var scope = host ? host._scope : this._scope;\n\t        this.unlink = context.$compile(content, host, scope, this._frag);\n\t      }\n\t      if (content) {\n\t        replace(this.el, content);\n\t      } else {\n\t        remove(this.el);\n\t      }\n\t    },\n\t\n\t    fallback: function fallback() {\n\t      this.compile(extractContent(this.el, true), this.vm);\n\t    },\n\t\n\t    unbind: function unbind() {\n\t      if (this.unlink) {\n\t        this.unlink();\n\t      }\n\t    }\n\t  };\n\t\n\t  var namedSlot = extend(extend({}, slot), {\n\t    priority: slot.priority + 1,\n\t    params: ['name']\n\t  });\n\t\n\t  /**\n\t   * Extract qualified content nodes from a node list.\n\t   *\n\t   * @param {NodeList} nodes\n\t   * @param {Element} parent\n\t   * @param {Boolean} main\n\t   * @return {DocumentFragment}\n\t   */\n\t\n\t  function extractFragment(nodes, parent, main) {\n\t    var frag = document.createDocumentFragment();\n\t    for (var i = 0, l = nodes.length; i < l; i++) {\n\t      var node = nodes[i];\n\t      // if this is the main outlet, we want to skip all\n\t      // previously selected nodes;\n\t      // otherwise, we want to mark the node as selected.\n\t      // clone the node so the original raw content remains\n\t      // intact. this ensures proper re-compilation in cases\n\t      // where the outlet is inside a conditional block\n\t      if (main && !node.__v_selected) {\n\t        append(node);\n\t      } else if (!main && node.parentNode === parent) {\n\t        node.__v_selected = true;\n\t        append(node);\n\t      }\n\t    }\n\t    return frag;\n\t\n\t    function append(node) {\n\t      if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t        node = parseTemplate(node);\n\t      }\n\t      node = cloneNode(node);\n\t      frag.appendChild(node);\n\t    }\n\t  }\n\t\n\t  var elementDirectives = {\n\t    slot: slot,\n\t    _namedSlot: namedSlot, // same as slot but with higher priority\n\t    partial: partial\n\t  };\n\t\n\t  Vue.version = '1.0.14';\n\t\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: publicDirectives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  // devtools global hook\n\t  /* istanbul ignore if */\n\t  if ('development' !== 'production' && inBrowser) {\n\t    if (window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n\t      window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('init', Vue);\n\t    } else if (/Chrome\\/\\d+/.test(navigator.userAgent)) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t\n\t  return Vue;\n\t\n\t}));\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _defineProperty = __webpack_require__(21);\n\t\n\tvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (obj, key, value) {\n\t  if (key in obj) {\n\t    (0, _defineProperty2.default)(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      configurable: true,\n\t      writable: true\n\t    });\n\t  } else {\n\t    obj[key] = value;\n\t  }\n\t\n\t  return obj;\n\t};\n\t\n\texports.__esModule = true;\n\n/***/ },\n/* 7 */,\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vuex v0.6.2\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  (global.Vuex = factory());\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t  babelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n\t    return typeof obj;\n\t  } : function (obj) {\n\t    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n\t  };\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t\n\t  babelHelpers.createClass = function () {\n\t    function defineProperties(target, props) {\n\t      for (var i = 0; i < props.length; i++) {\n\t        var descriptor = props[i];\n\t        descriptor.enumerable = descriptor.enumerable || false;\n\t        descriptor.configurable = true;\n\t        if (\"value\" in descriptor) descriptor.writable = true;\n\t        Object.defineProperty(target, descriptor.key, descriptor);\n\t      }\n\t    }\n\t\n\t    return function (Constructor, protoProps, staticProps) {\n\t      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t      if (staticProps) defineProperties(Constructor, staticProps);\n\t      return Constructor;\n\t    };\n\t  }();\n\t\n\t  babelHelpers.toConsumableArray = function (arr) {\n\t    if (Array.isArray(arr)) {\n\t      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\t\n\t      return arr2;\n\t    } else {\n\t      return Array.from(arr);\n\t    }\n\t  };\n\t\n\t  babelHelpers;\n\t\n\t  /**\n\t   * Merge an array of objects into one.\n\t   *\n\t   * @param {Array<Object>} arr\n\t   * @return {Object}\n\t   */\n\t\n\t  function mergeObjects(arr) {\n\t    return arr.reduce(function (prev, obj) {\n\t      Object.keys(obj).forEach(function (key) {\n\t        var existing = prev[key];\n\t        if (existing) {\n\t          // allow multiple mutation objects to contain duplicate\n\t          // handlers for the same mutation type\n\t          if (Array.isArray(existing)) {\n\t            existing.push(obj[key]);\n\t          } else {\n\t            prev[key] = [prev[key], obj[key]];\n\t          }\n\t        } else {\n\t          prev[key] = obj[key];\n\t        }\n\t      });\n\t      return prev;\n\t    }, {});\n\t  }\n\t\n\t  /**\n\t   * Deep clone an object. Faster than JSON.parse(JSON.stringify()).\n\t   *\n\t   * @param {*} obj\n\t   * @return {*}\n\t   */\n\t\n\t  function deepClone(obj) {\n\t    if (Array.isArray(obj)) {\n\t      return obj.map(deepClone);\n\t    } else if (obj && (typeof obj === 'undefined' ? 'undefined' : babelHelpers.typeof(obj)) === 'object') {\n\t      var cloned = {};\n\t      var keys = Object.keys(obj);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        var key = keys[i];\n\t        cloned[key] = deepClone(obj[key]);\n\t      }\n\t      return cloned;\n\t    } else {\n\t      return obj;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Hacks to get access to Vue internals.\n\t   * Maybe we should expose these...\n\t   */\n\t\n\t  var Watcher = void 0;\n\t  function getWatcher(vm) {\n\t    if (!Watcher) {\n\t      var unwatch = vm.$watch('__vuex__', function (a) {\n\t        return a;\n\t      });\n\t      Watcher = vm._watchers[0].constructor;\n\t      unwatch();\n\t    }\n\t    return Watcher;\n\t  }\n\t\n\t  var Dep = void 0;\n\t  function getDep(vm) {\n\t    if (!Dep) {\n\t      Dep = vm._data.__ob__.dep.constructor;\n\t    }\n\t    return Dep;\n\t  }\n\t\n\t  var hook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t  var devtoolMiddleware = {\n\t    onInit: function onInit(state, store) {\n\t      if (!hook) return;\n\t      hook.emit('vuex:init', store);\n\t      hook.on('vuex:travel-to-state', function (targetState) {\n\t        var currentState = store._vm._data;\n\t        store._dispatching = true;\n\t        Object.keys(targetState).forEach(function (key) {\n\t          currentState[key] = targetState[key];\n\t        });\n\t        store._dispatching = false;\n\t      });\n\t    },\n\t    onMutation: function onMutation(mutation, state) {\n\t      if (!hook) return;\n\t      hook.emit('vuex:mutation', mutation, state);\n\t    }\n\t  };\n\t\n\t  function override (Vue) {\n\t    // override init and inject vuex init procedure\n\t    var _init = Vue.prototype._init;\n\t    Vue.prototype._init = function () {\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n\t      _init.call(this, options);\n\t    };\n\t\n\t    function vuexInit() {\n\t      var options = this.$options;\n\t      var store = options.store;\n\t      var vuex = options.vuex;\n\t      // store injection\n\t\n\t      if (store) {\n\t        this.$store = store;\n\t      } else if (options.parent && options.parent.$store) {\n\t        this.$store = options.parent.$store;\n\t      }\n\t      // vuex option handling\n\t      if (vuex) {\n\t        if (!this.$store) {\n\t          console.warn('[vuex] store not injected. make sure to ' + 'provide the store option in your root component.');\n\t        }\n\t        var state = vuex.state;\n\t        var getters = vuex.getters;\n\t        var actions = vuex.actions;\n\t        // handle deprecated state option\n\t\n\t        if (state && !getters) {\n\t          console.warn('[vuex] vuex.state option will been deprecated in 1.0. ' + 'Use vuex.getters instead.');\n\t          getters = state;\n\t        }\n\t        // getters\n\t        if (getters) {\n\t          options.computed = options.computed || {};\n\t          for (var key in getters) {\n\t            defineVuexGetter(this, key, getters[key]);\n\t          }\n\t        }\n\t        // actions\n\t        if (actions) {\n\t          options.methods = options.methods || {};\n\t          for (var _key in actions) {\n\t            options.methods[_key] = makeBoundAction(actions[_key], this.$store);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    function setter() {\n\t      throw new Error('vuex getter properties are read-only.');\n\t    }\n\t\n\t    function defineVuexGetter(vm, key, getter) {\n\t      Object.defineProperty(vm, key, {\n\t        enumerable: true,\n\t        configurable: true,\n\t        get: makeComputedGetter(vm.$store, getter),\n\t        set: setter\n\t      });\n\t    }\n\t\n\t    function makeComputedGetter(store, getter) {\n\t      var id = store._getterCacheId;\n\t      // cached\n\t      if (getter[id]) {\n\t        return getter[id];\n\t      }\n\t      var vm = store._vm;\n\t      var Watcher = getWatcher(vm);\n\t      var Dep = getDep(vm);\n\t      var watcher = new Watcher(vm, function (state) {\n\t        return getter(state);\n\t      }, null, { lazy: true });\n\t      var computedGetter = function computedGetter() {\n\t        if (watcher.dirty) {\n\t          watcher.evaluate();\n\t        }\n\t        if (Dep.target) {\n\t          watcher.depend();\n\t        }\n\t        return watcher.value;\n\t      };\n\t      getter[id] = computedGetter;\n\t      return computedGetter;\n\t    }\n\t\n\t    function makeBoundAction(action, store) {\n\t      return function vuexBoundAction() {\n\t        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n\t          args[_key2] = arguments[_key2];\n\t        }\n\t\n\t        return action.call.apply(action, [this, store].concat(args));\n\t      };\n\t    }\n\t\n\t    // option merging\n\t    var merge = Vue.config.optionMergeStrategies.computed;\n\t    Vue.config.optionMergeStrategies.vuex = function (toVal, fromVal) {\n\t      if (!toVal) return fromVal;\n\t      if (!fromVal) return toVal;\n\t      return {\n\t        getters: merge(toVal.getters, fromVal.getters),\n\t        state: merge(toVal.state, fromVal.state),\n\t        actions: merge(toVal.actions, fromVal.actions)\n\t      };\n\t    };\n\t  }\n\t\n\t  var Vue = void 0;\n\t  var uid = 0;\n\t\n\t  var Store = function () {\n\t\n\t    /**\n\t     * @param {Object} options\n\t     *        - {Object} state\n\t     *        - {Object} actions\n\t     *        - {Object} mutations\n\t     *        - {Array} middlewares\n\t     *        - {Boolean} strict\n\t     */\n\t\n\t    function Store() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$state = _ref.state;\n\t      var state = _ref$state === undefined ? {} : _ref$state;\n\t      var _ref$mutations = _ref.mutations;\n\t      var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n\t      var _ref$modules = _ref.modules;\n\t      var modules = _ref$modules === undefined ? {} : _ref$modules;\n\t      var _ref$middlewares = _ref.middlewares;\n\t      var middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares;\n\t      var _ref$strict = _ref.strict;\n\t      var strict = _ref$strict === undefined ? false : _ref$strict;\n\t      babelHelpers.classCallCheck(this, Store);\n\t\n\t      this._getterCacheId = 'vuex_store_' + uid++;\n\t      this._dispatching = false;\n\t      this._rootMutations = this._mutations = mutations;\n\t      this._modules = modules;\n\t      // bind dispatch to self\n\t      var dispatch = this.dispatch;\n\t      this.dispatch = function () {\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t          args[_key] = arguments[_key];\n\t        }\n\t\n\t        dispatch.apply(_this, args);\n\t      };\n\t      // use a Vue instance to store the state tree\n\t      // suppress warnings just in case the user has added\n\t      // some funky global mixins\n\t      if (!Vue) {\n\t        throw new Error('[vuex] must call Vue.use(Vuex) before creating a store instance.');\n\t      }\n\t      var silent = Vue.config.silent;\n\t      Vue.config.silent = true;\n\t      this._vm = new Vue({\n\t        data: state\n\t      });\n\t      Vue.config.silent = silent;\n\t      this._setupModuleState(state, modules);\n\t      this._setupModuleMutations(modules);\n\t      this._setupMiddlewares(middlewares, state);\n\t      // add extra warnings in strict mode\n\t      if (strict) {\n\t        this._setupMutationCheck();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Getter for the entire state tree.\n\t     * Read only.\n\t     *\n\t     * @return {Object}\n\t     */\n\t\n\t    babelHelpers.createClass(Store, [{\n\t      key: 'dispatch',\n\t\n\t\n\t      /**\n\t       * Dispatch an action.\n\t       *\n\t       * @param {String} type\n\t       */\n\t\n\t      value: function dispatch(type) {\n\t        var _this2 = this;\n\t\n\t        for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t          payload[_key2 - 1] = arguments[_key2];\n\t        }\n\t\n\t        // compatibility for object actions, e.g. FSA\n\t        if ((typeof type === 'undefined' ? 'undefined' : babelHelpers.typeof(type)) === 'object' && type.type && arguments.length === 1) {\n\t          payload = [type];\n\t          type = type.type;\n\t        }\n\t        var mutation = this._mutations[type];\n\t        var prevSnapshot = this._prevSnapshot;\n\t        var state = this.state;\n\t        var snapshot = void 0,\n\t            clonedPayload = void 0;\n\t        if (mutation) {\n\t          this._dispatching = true;\n\t          // apply the mutation\n\t          if (Array.isArray(mutation)) {\n\t            mutation.forEach(function (m) {\n\t              return m.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n\t            });\n\t          } else {\n\t            mutation.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n\t          }\n\t          this._dispatching = false;\n\t          // invoke middlewares\n\t          if (this._needSnapshots) {\n\t            snapshot = this._prevSnapshot = deepClone(state);\n\t            clonedPayload = deepClone(payload);\n\t          }\n\t          this._middlewares.forEach(function (m) {\n\t            if (m.onMutation) {\n\t              if (m.snapshot) {\n\t                m.onMutation({ type: type, payload: clonedPayload }, snapshot, prevSnapshot, _this2);\n\t              } else {\n\t                m.onMutation({ type: type, payload: payload }, state, _this2);\n\t              }\n\t            }\n\t          });\n\t        } else {\n\t          console.warn('[vuex] Unknown mutation: ' + type);\n\t        }\n\t      }\n\t\n\t      /**\n\t       * Watch state changes on the store.\n\t       * Same API as Vue's $watch, except when watching a function,\n\t       * the function gets the state as the first argument.\n\t       *\n\t       * @param {String|Function} expOrFn\n\t       * @param {Function} cb\n\t       * @param {Object} [options]\n\t       */\n\t\n\t    }, {\n\t      key: 'watch',\n\t      value: function watch(expOrFn, cb, options) {\n\t        var _this3 = this;\n\t\n\t        return this._vm.$watch(function () {\n\t          return typeof expOrFn === 'function' ? expOrFn(_this3.state) : _this3._vm.$get(expOrFn);\n\t        }, cb, options);\n\t      }\n\t\n\t      /**\n\t       * Hot update mutations & modules.\n\t       *\n\t       * @param {Object} options\n\t       *        - {Object} [mutations]\n\t       *        - {Object} [modules]\n\t       */\n\t\n\t    }, {\n\t      key: 'hotUpdate',\n\t      value: function hotUpdate() {\n\t        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t        var mutations = _ref2.mutations;\n\t        var modules = _ref2.modules;\n\t\n\t        this._rootMutations = this._mutations = mutations || this._rootMutations;\n\t        this._setupModuleMutations(modules || this._modules);\n\t      }\n\t\n\t      /**\n\t       * Attach sub state tree of each module to the root tree.\n\t       *\n\t       * @param {Object} state\n\t       * @param {Object} modules\n\t       */\n\t\n\t    }, {\n\t      key: '_setupModuleState',\n\t      value: function _setupModuleState(state, modules) {\n\t        var setPath = Vue.parsers.path.setPath;\n\t\n\t        Object.keys(modules).forEach(function (key) {\n\t          setPath(state, key, modules[key].state || {});\n\t        });\n\t      }\n\t\n\t      /**\n\t       * Bind mutations for each module to its sub tree and\n\t       * merge them all into one final mutations map.\n\t       *\n\t       * @param {Object} updatedModules\n\t       */\n\t\n\t    }, {\n\t      key: '_setupModuleMutations',\n\t      value: function _setupModuleMutations(updatedModules) {\n\t        var modules = this._modules;\n\t        var getPath = Vue.parsers.path.getPath;\n\t\n\t        var allMutations = [this._rootMutations];\n\t        Object.keys(updatedModules).forEach(function (key) {\n\t          modules[key] = updatedModules[key];\n\t        });\n\t        Object.keys(modules).forEach(function (key) {\n\t          var module = modules[key];\n\t          if (!module || !module.mutations) return;\n\t          // bind mutations to sub state tree\n\t          var mutations = {};\n\t          Object.keys(module.mutations).forEach(function (name) {\n\t            var original = module.mutations[name];\n\t            mutations[name] = function (state) {\n\t              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n\t                args[_key3 - 1] = arguments[_key3];\n\t              }\n\t\n\t              original.apply(undefined, [getPath(state, key)].concat(args));\n\t            };\n\t          });\n\t          allMutations.push(mutations);\n\t        });\n\t        this._mutations = mergeObjects(allMutations);\n\t      }\n\t\n\t      /**\n\t       * Setup mutation check: if the vuex instance's state is mutated\n\t       * outside of a mutation handler, we throw en error. This effectively\n\t       * enforces all mutations to the state to be trackable and hot-reloadble.\n\t       * However, this comes at a run time cost since we are doing a deep\n\t       * watch on the entire state tree, so it is only enalbed with the\n\t       * strict option is set to true.\n\t       */\n\t\n\t    }, {\n\t      key: '_setupMutationCheck',\n\t      value: function _setupMutationCheck() {\n\t        var _this4 = this;\n\t\n\t        var Watcher = getWatcher(this._vm);\n\t        /* eslint-disable no-new */\n\t        new Watcher(this._vm, '$data', function () {\n\t          if (!_this4._dispatching) {\n\t            throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n\t          }\n\t        }, { deep: true, sync: true });\n\t        /* eslint-enable no-new */\n\t      }\n\t\n\t      /**\n\t       * Setup the middlewares. The devtools middleware is always\n\t       * included, since it does nothing if no devtool is detected.\n\t       *\n\t       * A middleware can demand the state it receives to be\n\t       * \"snapshots\", i.e. deep clones of the actual state tree.\n\t       *\n\t       * @param {Array} middlewares\n\t       * @param {Object} state\n\t       */\n\t\n\t    }, {\n\t      key: '_setupMiddlewares',\n\t      value: function _setupMiddlewares(middlewares, state) {\n\t        var _this5 = this;\n\t\n\t        this._middlewares = [devtoolMiddleware].concat(middlewares);\n\t        this._needSnapshots = middlewares.some(function (m) {\n\t          return m.snapshot;\n\t        });\n\t        if (this._needSnapshots) {\n\t          console.log('[vuex] One or more of your middlewares are taking state snapshots ' + 'for each mutation. Make sure to use them only during development.');\n\t        }\n\t        var initialSnapshot = this._prevSnapshot = this._needSnapshots ? deepClone(state) : null;\n\t        // call init hooks\n\t        this._middlewares.forEach(function (m) {\n\t          if (m.onInit) {\n\t            m.onInit(m.snapshot ? initialSnapshot : state, _this5);\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'state',\n\t      get: function get() {\n\t        return this._vm._data;\n\t      },\n\t      set: function set(v) {\n\t        throw new Error('[vuex] Vuex root state is read only.');\n\t      }\n\t    }]);\n\t    return Store;\n\t  }();\n\t\n\t  function install(_Vue) {\n\t    Vue = _Vue;\n\t    override(Vue);\n\t  }\n\t\n\t  // auto install in dist mode\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    install(window.Vue);\n\t  }\n\t\n\t  function createLogger() {\n\t    console.warn('[vuex] Vuex.createLogger has been deprecated.' + 'Use `import createLogger from \\'vuex/logger\\' instead.');\n\t  }\n\t\n\t  var index = {\n\t    Store: Store,\n\t    install: install,\n\t    createLogger: createLogger\n\t  };\n\t\n\t  return index;\n\t\n\t}));\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _breadcrumb = __webpack_require__(36);\n\t\n\tvar _breadcrumb2 = _interopRequireDefault(_breadcrumb);\n\t\n\tvar _actions = __webpack_require__(3);\n\t\n\tvar _top = __webpack_require__(37);\n\t\n\tvar _top2 = _interopRequireDefault(_top);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    components: {\n\t        Top: _top2.default,\n\t        Breadcrumb: _breadcrumb2.default\n\t    },\n\t    vuex: {\n\t        getters: {\n\t            currentMenu: function currentMenu(_ref) {\n\t                var breadcrumb = _ref.breadcrumb;\n\t\n\t                return breadcrumb.breadcrumbInfo.currentMenu;\n\t            }\n\t        },\n\t        actions: {\n\t            loadBreadCrumb: _actions.loadBreadCrumb\n\t        }\n\t    },\n\t    ready: function ready() {\n\t        console.log(this.$route.fullPath);\n\t        this.loadBreadCrumb(this.$route.fullPath);\n\t    }\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _actions = __webpack_require__(3);\n\t\n\texports.default = {\n\t    vuex: {\n\t        getters: {\n\t            navList: function navList(_ref) {\n\t                var nav = _ref.nav;\n\t                return nav.navList;\n\t            }\n\t        },\n\t        actions: {\n\t            loadNavList: _actions.loadNavList,\n\t            loadBreadCrumb: _actions.loadBreadCrumb\n\t        }\n\t    },\n\t    created: function created() {\n\t        var _self = this;\n\t        this.loadNavList();\n\t    },\n\t    methods: {\n\t        changeBreadCrumb: function changeBreadCrumb(url) {\n\t            this.loadBreadCrumb(url);\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    props: ['currentMenu']\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _actions = __webpack_require__(3);\n\t\n\texports.default = {\n\t    vuex: {\n\t        getters: {\n\t            breadcrumbInfo: function breadcrumbInfo(_ref) {\n\t                var breadcrumb = _ref.breadcrumb;\n\t\n\t                return breadcrumb.breadcrumbInfo;\n\t            }\n\t        },\n\t        actions: {\n\t            loadBreadCrumb: _actions.loadBreadCrumb\n\t        }\n\t    },\n\t    created: function created() {},\n\t    computed: {\n\t        b: {\n\t            get: function get() {},\n\t            set: function set(newValue) {}\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 13 */,\n/* 14 */,\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Silder = __webpack_require__(35);\n\t\n\tvar _Silder2 = _interopRequireDefault(_Silder);\n\t\n\tvar _Main = __webpack_require__(34);\n\t\n\tvar _Main2 = _interopRequireDefault(_Main);\n\t\n\tvar _store = __webpack_require__(20);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    store: _store2.default,\n\t    components: {\n\t        Silder: _Silder2.default,\n\t        Main: _Main2.default\n\t    }\n\t};\n\n/***/ },\n/* 16 */,\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\texports.default = function (router) {\n\t    router.map({\n\t        '/mvvm': {\n\t            component: function component(resolve) {\n\t                __webpack_require__.e/* require */(2, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(38)]; (resolve.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));});\n\t            }\n\t        },\n\t        '/mvvm/2': {\n\t            component: function component(resolve) {\n\t                __webpack_require__.e/* require */(1, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(39)]; (resolve.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));});\n\t            }\n\t        }\n\t    });\n\t\n\t    router.redirect({\n\t        \"*\": '/mvvm'\n\t    });\n\t    router.beforeEach(function (transition) {\n\t        console.log(\"*====\", transition);\n\t\n\t        transition.next();\n\t    });\n\t};\n\t\n\tvar _actions = __webpack_require__(3);\n\t\n\tvar actions = _interopRequireWildcard(_actions);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _defineProperty2 = __webpack_require__(6);\n\t\n\tvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\t\n\tvar _mutationTypes = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar state = {\n\t    breadcrumbInfo: {}\n\t};\n\tvar mutations = (0, _defineProperty3.default)({}, _mutationTypes.LOAD_BREADCRUMB, function (state, breadcrumbInfo) {\n\t    state.breadcrumbInfo = breadcrumbInfo;\n\t});\n\texports.default = {\n\t    state: state,\n\t    mutations: mutations\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _defineProperty2 = __webpack_require__(6);\n\t\n\tvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\t\n\tvar _mutationTypes = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar state = {\n\t    navList: []\n\t};\n\tvar mutations = (0, _defineProperty3.default)({}, _mutationTypes.LOAD_NAV_LIST, function (state, list) {\n\t    state.navList = list;\n\t});\n\texports.default = {\n\t    state: state,\n\t    mutations: mutations\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _vue = __webpack_require__(5);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vuex = __webpack_require__(8);\n\t\n\tvar _vuex2 = _interopRequireDefault(_vuex);\n\t\n\tvar _nav = __webpack_require__(19);\n\t\n\tvar _nav2 = _interopRequireDefault(_nav);\n\t\n\tvar _breadcrumb = __webpack_require__(18);\n\t\n\tvar _breadcrumb2 = _interopRequireDefault(_breadcrumb);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vuex2.default);\n\texports.default = new _vuex2.default.Store({\n\t    modules: {\n\t        nav: _nav2.default,\n\t        breadcrumb: _breadcrumb2.default\n\t    },\n\t    strict: (\"production\") !== 'production'\n\t});\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(22), __esModule: true };\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $ = __webpack_require__(23);\n\tmodule.exports = function defineProperty(it, key, desc){\n\t  return $.setDesc(it, key, desc);\n\t};\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tvar $Object = Object;\n\tmodule.exports = {\n\t  create:     $Object.create,\n\t  getProto:   $Object.getPrototypeOf,\n\t  isEnum:     {}.propertyIsEnumerable,\n\t  getDesc:    $Object.getOwnPropertyDescriptor,\n\t  setDesc:    $Object.defineProperty,\n\t  setDescs:   $Object.defineProperties,\n\t  getKeys:    $Object.keys,\n\t  getNames:   $Object.getOwnPropertyNames,\n\t  getSymbols: $Object.getOwnPropertySymbols,\n\t  each:       [].forEach\n\t};\n\n/***/ },\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=page-content-wrapper><top></top><div class=page-content-outer><div class=page-content-inner><div class=page-content><breadcrumb :current-menu=currentMenu></breadcrumb><div class=page-main id=manApp><router-view class=view transition=test transition-mode=out-in keep-alive></router-view></div></div></div></div></div>\";\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=page-sidebar><a href=index.html class=logo></a><ul class=nav id=nav><li v-link=\\\"{path:nav.path,activeClass: 'open' ,exact: true }\\\" v-for=\\\"(inde2x,nav) in navList\\\" @click=changeBreadCrumb(nav.path)><a href={{nav.path}}><i class=\\\"gm-icon gm-peer-plan\\\"></i> <span>{{inde2x}}{{nav.navName}}</span> <span class=\\\"label label-info pull-right\\\" data-toggle=tooltip data-placement=right data-original-title=中文中文那种爱上空间等哈说肯定会阿卡还是啊>3</span></a></li></ul></div>\";\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=sub-title><h2 v-if=currentMenu>{{currentChildMenu ?currentChildMenu : currentMenu}}</h2><h2 v-else>供应商中心</h2><ol class=breadcrumb><li><a href=\\\"{{WEB_WWW }}\\\">首页</a></li><li><a href=\\\"{{WEB_SUPPLIER }}\\\">供应商中心</a></li><template v-if=\\\"currentMenu && currentChildMenu\\\"><li>{{currentMenu }}</li><li class=active>{{currentChildMenu }}</li></template><template v-else><li class=active>{{currentMenu }}</li></template></ol><div class=page-tool><button class=\\\"btn btn-default\\\" type=button onclick=history.go(-1)><i class=\\\"gm-icon gm-back\\\"></i>返回</button> <button class=\\\"btn btn-default\\\" type=button onclick=location.reload()><i class=\\\"gm-icon gm-refresh\\\"></i> 刷新</button></div></div>\";\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"page-title clearfix\\\" id=page-title-viewport><div class=pull-left><button type=button class=\\\"btn btn-default\\\" id=nav-button><i class=\\\"gm-icon gm-menu\\\"></i></button><h2>供应商管理中心 - {{breadcrumbInfo.supplierName}} {{ b | capitalize }} <small><template v-if=\\\"breadcrumbInfo.distributorInfo && breadcrumbInfo.distributorInfo!=''\\\"><i class=\\\"fa fa-retweet\\\"></i><a href=\\\"{{WEB_DISTRIBUTOR }}\\\">分销商管理中心</a></template><template v-if=\\\"breadcrumbInfo.supplierStaff && breadcrumbInfo.supplierStaff!='' && !breadcrumbInfo.supplierStaff.admin\\\"><i class=\\\"gm-icon gm-switch\\\"></i><a title=您已经是供应商员工，不能成为分销商>分销商管理中心</a></template><template v-else><i class=\\\"gm-icon gm-switch\\\"></i><a href={{WEB_WWW}}/register-detail>分销商管理中心</a></template></small></h2></div><ul class=\\\"pull-right login-state\\\"><li class=dropdown data-toggle=mouseenter><div href=# class=dropdown-toggle><i class=\\\"gm-icon gm-user\\\"></i> {{breadcrumbInfo.userInfo && breadcrumbInfo.userInfo.phone}} <i class=\\\"fa fa-angle-down\\\"></i></div><ul class=dropdown-menu><li><a href=\\\"{{WEB_SUPPLIER }}\\\"><i class=\\\"gm-icon gm-supplier\\\"></i>供应商中心</a></li><template v-if=\\\"breadcrumbInfo.distributorInfo && breadcrumbInfo.distributorInfo != ''\\\"><li><a href=\\\"{{WEB_DISTRIBUTOR }}\\\"><i class=\\\"gm-icon gm-distributor\\\"></i>分销商中心</a></li></template><template v-if=\\\"breadcrumbInfo.supplierStaff && breadcrumbInfo.supplierStaff!='' && !breadcrumbInfo.supplierStaff.admin\\\"><li><a style=\\\"color:#e6e6e6 !important\\\" title=您已经是供应商员工，不能成为分销商><i class=\\\"gm-icon gm-distributor\\\"></i>分销商中心</a></li></template><template><li><a href=\\\"{{WEB_WWW }}/register-detail\\\"><i class=\\\"gm-icon gm-distributor\\\"></i>申请分销商</a></li></template><li><a href=\\\"{{WEB_WWW }}/user/password\\\"><i class=\\\"gm-icon gm-modify-pwd\\\"></i>修改密码</a></li><li role=separator class=divider></li><li><a href=/logout><i class=\\\"gm-icon gm-logout\\\"></i>退出登录</a></li></ul></li></ul></div>\";\n\n/***/ },\n/* 31 */,\n/* 32 */,\n/* 33 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=page-wrapper><silder></silder><main></main></div>\";\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(9)\n\t__vue_template__ = __webpack_require__(27)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"E:\\\\wk11\\\\static\\\\oldVersion\\\\mvvm\\\\supplier\\\\src\\\\components\\\\container\\\\Main.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(10)\n\t__vue_template__ = __webpack_require__(28)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"E:\\\\wk11\\\\static\\\\oldVersion\\\\mvvm\\\\supplier\\\\src\\\\components\\\\navs\\\\Silder.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(11)\n\t__vue_template__ = __webpack_require__(29)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"E:\\\\wk11\\\\static\\\\oldVersion\\\\mvvm\\\\supplier\\\\src\\\\components\\\\navs\\\\breadcrumb.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(12)\n\t__vue_template__ = __webpack_require__(30)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"E:\\\\wk11\\\\static\\\\oldVersion\\\\mvvm\\\\supplier\\\\src\\\\components\\\\navs\\\\top.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 38 */,\n/* 39 */,\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(15)\n\t__vue_template__ = __webpack_require__(33)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"E:\\\\wk11\\\\static\\\\oldVersion\\\\mvvm\\\\supplier\\\\src\\\\index.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Before Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (_.isFunction(request.beforeSend)) {\n\t            request.beforeSend.call(this, request);\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Base client.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\tvar xhrClient = __webpack_require__(45);\n\t\n\tmodule.exports = function (request) {\n\t\n\t    var response = (request.client || xhrClient)(request);\n\t\n\t    return Promise.resolve(response).then(function (response) {\n\t\n\t        if (response.headers) {\n\t\n\t            var headers = parseHeaders(response.headers);\n\t\n\t            response.headers = function (name) {\n\t\n\t                if (name) {\n\t                    return headers[_.toLower(name)];\n\t                }\n\t\n\t                return headers;\n\t            };\n\t\n\t        }\n\t\n\t        response.ok = response.status >= 200 && response.status < 300;\n\t\n\t        return response;\n\t    });\n\t\n\t};\n\t\n\tfunction parseHeaders(str) {\n\t\n\t    var headers = {}, value, name, i;\n\t\n\t    if (_.isString(str)) {\n\t        _.each(str.split('\\n'), function (row) {\n\t\n\t            i = row.indexOf(':');\n\t            name = _.trim(_.toLower(row.slice(0, i)));\n\t            value = _.trim(row.slice(i + 1));\n\t\n\t            if (headers[name]) {\n\t\n\t                if (_.isArray(headers[name])) {\n\t                    headers[name].push(value);\n\t                } else {\n\t                    headers[name] = [headers[name], value];\n\t                }\n\t\n\t            } else {\n\t\n\t                headers[name] = value;\n\t            }\n\t\n\t        });\n\t    }\n\t\n\t    return headers;\n\t}\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * JSONP client.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\t\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\t\n\t        var callback = '_jsonp' + Math.random().toString(36).substr(2), response = {request: request, data: null}, handler, script;\n\t\n\t        request.params[request.jsonp] = callback;\n\t        request.cancel = function () {\n\t            handler({type: 'cancel'});\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = _.url(request);\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t\n\t        window[callback] = function (data) {\n\t            response.data = data;\n\t        };\n\t\n\t        handler = function (event) {\n\t\n\t            if (event.type === 'load' && response.data !== null) {\n\t                response.status = 200;\n\t            } else if (event.type === 'error') {\n\t                response.status = 404;\n\t            } else {\n\t                response.status = 0;\n\t            }\n\t\n\t            resolve(response);\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t};\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * XDomain client (Internet Explorer).\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\t\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(), response = {request: request}, handler;\n\t\n\t        request.cancel = function () {\n\t            xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, _.url(request), true);\n\t\n\t        handler = function (event) {\n\t\n\t            response.data = xdr.responseText;\n\t            response.status = xdr.status;\n\t            response.statusText = xdr.statusText;\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onabort = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\t\n\t        xdr.send(request.data);\n\t    });\n\t};\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * XMLHttp client.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\t\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(), response = {request: request}, handler;\n\t\n\t        request.cancel = function () {\n\t            xhr.abort();\n\t        };\n\t\n\t        xhr.open(request.method, _.url(request), true);\n\t\n\t        handler = function (event) {\n\t\n\t            response.data = xhr.responseText;\n\t            response.status = xhr.status;\n\t            response.statusText = xhr.statusText;\n\t            response.headers = xhr.getAllResponseHeaders();\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onabort = handler;\n\t        xhr.onerror = handler;\n\t        xhr.ontimeout = function () {};\n\t        xhr.onprogress = function () {};\n\t\n\t        if (_.isPlainObject(request.xhr)) {\n\t            _.extend(xhr, request.xhr);\n\t        }\n\t\n\t        if (_.isPlainObject(request.upload)) {\n\t            _.extend(xhr.upload, request.upload);\n\t        }\n\t\n\t        _.each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\t\n\t        xhr.send(request.data);\n\t    });\n\t};\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * CORS Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar xdrClient = __webpack_require__(44);\n\tvar xhrCors = 'withCredentials' in new XMLHttpRequest();\n\tvar originUrl = _.url.parse(location.href);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.crossOrigin === null) {\n\t            request.crossOrigin = crossOrigin(request);\n\t        }\n\t\n\t        if (request.crossOrigin) {\n\t\n\t            if (!xhrCors) {\n\t                request.client = xdrClient;\n\t            }\n\t\n\t            request.emulateHTTP = false;\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = _.url.parse(_.url(request));\n\t\n\t    return (requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host);\n\t}\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Header Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        request.method = request.method.toUpperCase();\n\t        request.headers = _.extend({}, _.http.headers.common,\n\t            !request.crossOrigin ? _.http.headers.custom : {},\n\t            _.http.headers[request.method.toLowerCase()],\n\t            request.headers\n\t        );\n\t\n\t        if (_.isPlainObject(request.data) && /^(GET|JSONP)$/i.test(request.method)) {\n\t            _.extend(request.params, request.data);\n\t            delete request.data;\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Client = __webpack_require__(42);\n\tvar Promise = __webpack_require__(2);\n\tvar interceptor = __webpack_require__(49);\n\tvar jsonType = {'Content-Type': 'application/json'};\n\t\n\tfunction Http(url, options) {\n\t\n\t    var client = Client, request, promise;\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client = interceptor(handler, this.$vm)(client);\n\t    }, this);\n\t\n\t    options = _.isObject(url) ? url : _.extend({url: url}, options);\n\t    request = _.merge({}, Http.options, this.$options, options);\n\t    promise = client(request).bind(this.$vm).then(function (response) {\n\t\n\t        return response.ok ? response : Promise.reject(response);\n\t\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            _.error(response);\n\t        }\n\t\n\t        return Promise.reject(response);\n\t    });\n\t\n\t    if (request.success) {\n\t        promise.success(request.success);\n\t    }\n\t\n\t    if (request.error) {\n\t        promise.error(request.error);\n\t    }\n\t\n\t    return promise;\n\t}\n\t\n\tHttp.options = {\n\t    method: 'get',\n\t    data: '',\n\t    params: {},\n\t    headers: {},\n\t    xhr: null,\n\t    upload: null,\n\t    jsonp: 'callback',\n\t    beforeSend: null,\n\t    crossOrigin: null,\n\t    emulateHTTP: false,\n\t    emulateJSON: false,\n\t    timeout: 0\n\t};\n\t\n\tHttp.interceptors = [\n\t    __webpack_require__(41),\n\t    __webpack_require__(53),\n\t    __webpack_require__(50),\n\t    __webpack_require__(51),\n\t    __webpack_require__(52),\n\t    __webpack_require__(47),\n\t    __webpack_require__(46)\n\t];\n\t\n\tHttp.headers = {\n\t    put: jsonType,\n\t    post: jsonType,\n\t    patch: jsonType,\n\t    delete: jsonType,\n\t    common: {'Accept': 'application/json, text/plain, */*'},\n\t    custom: {'X-Requested-With': 'XMLHttpRequest'}\n\t};\n\t\n\t['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, data, success, options) {\n\t\n\t        if (_.isFunction(data)) {\n\t            options = success;\n\t            success = data;\n\t            data = undefined;\n\t        }\n\t\n\t        if (_.isObject(success)) {\n\t            options = success;\n\t            success = undefined;\n\t        }\n\t\n\t        return this(url, _.extend({method: method, data: data, success: success}, options));\n\t    };\n\t});\n\t\n\tmodule.exports = _.http = Http;\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Interceptor factory.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\t\n\tmodule.exports = function (handler, vm) {\n\t\n\t    return function (client) {\n\t\n\t        if (_.isFunction(handler)) {\n\t            handler = handler.call(vm, Promise);\n\t        }\n\t\n\t        return function (request) {\n\t\n\t            if (_.isFunction(handler.request)) {\n\t                request = handler.request.call(vm, request);\n\t            }\n\t\n\t            return when(request, function (request) {\n\t                return when(client(request), function (response) {\n\t\n\t                    if (_.isFunction(handler.response)) {\n\t                        response = handler.response.call(vm, response);\n\t                    }\n\t\n\t                    return response;\n\t                });\n\t            });\n\t        };\n\t    };\n\t};\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = Promise.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * JSONP Interceptor.\n\t */\n\t\n\tvar jsonpClient = __webpack_require__(43);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.method == 'JSONP') {\n\t            request.client = jsonpClient;\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n\t            request.headers['X-HTTP-Method-Override'] = request.method;\n\t            request.method = 'POST';\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Mime Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.emulateJSON && _.isPlainObject(request.data)) {\n\t            request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t            request.data = _.url.params(request.data);\n\t        }\n\t\n\t        if (_.isObject(request.data) && /FormData/i.test(request.data.toString())) {\n\t            delete request.headers['Content-Type'];\n\t        }\n\t\n\t        if (_.isPlainObject(request.data)) {\n\t            request.data = JSON.stringify(request.data);\n\t        }\n\t\n\t        return request;\n\t    },\n\t\n\t    response: function (response) {\n\t\n\t        try {\n\t            response.data = JSON.parse(response.data);\n\t        } catch (e) {}\n\t\n\t        return response;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tmodule.exports = function () {\n\t\n\t    var timeout;\n\t\n\t    return {\n\t\n\t        request: function (request) {\n\t\n\t            if (request.timeout) {\n\t                timeout = setTimeout(function () {\n\t                    request.cancel();\n\t                }, request.timeout);\n\t            }\n\t\n\t            return request;\n\t        },\n\t\n\t        response: function (response) {\n\t\n\t            clearTimeout(timeout);\n\t\n\t            return response;\n\t        }\n\t\n\t    };\n\t};\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Install plugin.\n\t */\n\t\n\tfunction install(Vue) {\n\t\n\t    var _ = __webpack_require__(1);\n\t\n\t    _.config = Vue.config;\n\t    _.warning = Vue.util.warn;\n\t    _.nextTick = Vue.util.nextTick;\n\t\n\t    Vue.url = __webpack_require__(58);\n\t    Vue.http = __webpack_require__(48);\n\t    Vue.resource = __webpack_require__(57);\n\t    Vue.Promise = __webpack_require__(2);\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function () {\n\t                return _.options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function () {\n\t                return _.options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function () {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function () {\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, this);\n\t                }.bind(this);\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (window.Vue) {\n\t    Vue.use(install);\n\t}\n\t\n\tmodule.exports = install;\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING  = 2;\n\t\n\tfunction Promise(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise.reject = function (r) {\n\t    return new Promise(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise.resolve = function (x) {\n\t    return new Promise(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise.all = function all(iterable) {\n\t    return new Promise(function (resolve, reject) {\n\t        var count = 0, result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise.race = function race(iterable) {\n\t    return new Promise(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p = Promise.prototype;\n\t\n\tp.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp.notify = function notify() {\n\t    var promise = this;\n\t\n\t    _.nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\tmodule.exports = Promise;\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\texports.expand = function (url, params, variables) {\n\t\n\t    var tmpl = this.parse(url), expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t};\n\t\n\texports.parse = function (template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function (context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null, values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t\n\t                } else {\n\t                    return exports.encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t};\n\t\n\texports.getValues = function (context, operator, key, modifier) {\n\t\n\t    var value = context[key], result = [];\n\t\n\t    if (this.isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(this.isDefined).forEach(function (value) {\n\t                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t                    }, this);\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (this.isDefined(value[k])) {\n\t                            result.push(this.encodeValue(operator, value[k], k));\n\t                        }\n\t                    }, this);\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(this.isDefined).forEach(function (value) {\n\t                        tmp.push(this.encodeValue(operator, value));\n\t                    }, this);\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (this.isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(this.encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    }, this);\n\t                }\n\t\n\t                if (this.isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t};\n\t\n\texports.isDefined = function (value) {\n\t    return value !== undefined && value !== null;\n\t};\n\t\n\texports.isKeyOperator = function (operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t};\n\t\n\texports.encodeValue = function (operator, value, key) {\n\t\n\t    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t};\n\t\n\texports.encodeReserved = function (str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t};\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for interacting with RESTful services.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this, resource = {};\n\t\n\t    actions = _.extend({},\n\t        Resource.actions,\n\t        actions\n\t    );\n\t\n\t    _.each(actions, function (action, name) {\n\t\n\t        action = _.merge({url: url, params: params || {}}, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || _.http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = _.extend({}, action), params = {}, data, success, error;\n\t\n\t    switch (args.length) {\n\t\n\t        case 4:\n\t\n\t            error = args[3];\n\t            success = args[2];\n\t\n\t        case 3:\n\t        case 2:\n\t\n\t            if (_.isFunction(args[1])) {\n\t\n\t                if (_.isFunction(args[0])) {\n\t\n\t                    success = args[0];\n\t                    error = args[1];\n\t\n\t                    break;\n\t                }\n\t\n\t                success = args[1];\n\t                error = args[2];\n\t\n\t            } else {\n\t\n\t                params = args[0];\n\t                data = args[1];\n\t                success = args[2];\n\t\n\t                break;\n\t            }\n\t\n\t        case 1:\n\t\n\t            if (_.isFunction(args[0])) {\n\t                success = args[0];\n\t            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                data = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.data = data;\n\t    options.params = _.extend({}, options.params, params);\n\t\n\t    if (success) {\n\t        options.success = success;\n\t    }\n\t\n\t    if (error) {\n\t        options.error = error;\n\t    }\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: {method: 'GET'},\n\t    save: {method: 'POST'},\n\t    query: {method: 'GET'},\n\t    update: {method: 'PUT'},\n\t    remove: {method: 'DELETE'},\n\t    delete: {method: 'DELETE'}\n\t\n\t};\n\t\n\tmodule.exports = _.resource = Resource;\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var options = url, transform;\n\t\n\t    if (_.isString(url)) {\n\t        options = {url: url, params: params};\n\t    }\n\t\n\t    options = _.merge({}, Url.options, this.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, this.$vm);\n\t    }, this);\n\t\n\t    return transform(options);\n\t};\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [\n\t    __webpack_require__(62),\n\t    __webpack_require__(59),\n\t    __webpack_require__(60),\n\t    __webpack_require__(61)\n\t];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [], escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (_.isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = _.isArray(obj), plain = _.isPlainObject(obj), hash;\n\t\n\t    _.each(obj, function (value, key) {\n\t\n\t        hash = _.isObject(value) || _.isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\tmodule.exports = _.url = Url;\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Legacy Transform.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = function (options, next) {\n\t\n\t    var variables = [], url = next(options);\n\t\n\t    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\t\n\t        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\t\n\t        if (options.params[name]) {\n\t            variables.push(name);\n\t            return slash + encodeUriSegment(options.params[name]);\n\t        }\n\t\n\t        return '';\n\t    });\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t};\n\t\n\tfunction encodeUriSegment(value) {\n\t\n\t    return encodeUriQuery(value, true).\n\t        replace(/%26/gi, '&').\n\t        replace(/%3D/gi, '=').\n\t        replace(/%2B/gi, '+');\n\t}\n\t\n\tfunction encodeUriQuery(value, spaces) {\n\t\n\t    return encodeURIComponent(value).\n\t        replace(/%40/gi, '@').\n\t        replace(/%3A/gi, ':').\n\t        replace(/%24/g, '$').\n\t        replace(/%2C/gi, ',').\n\t        replace(/%20/g, (spaces ? '%20' : '+'));\n\t}\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Query Parameter Transform.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = function (options, next) {\n\t\n\t    var urlParams = Object.keys(_.url.options.params), query = {}, url = next(options);\n\t\n\t   _.each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = _.url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t};\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Root Prefix Transform.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = function (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t};\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * URL Template (RFC 6570) Transform.\n\t */\n\t\n\tvar UrlTemplate = __webpack_require__(56);\n\t\n\tmodule.exports = function (options) {\n\t\n\t    var variables = [], url = UrlTemplate.expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t};\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.11\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return decodeURIComponent(part);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path) {\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        queryParams = this.parseQueryString(queryString);\n\t      }\n\t\n\t      path = decodeURI(path);\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  RouteRecognizer.VERSION = '0.1.9';\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn(msg) {\n\t    /* istanbul ignore next */\n\t    if (window.console) {\n\t      console.warn('[vue-router] ' + msg);\n\t      if (!exports$1.Vue || exports$1.Vue.config.debug) {\n\t        console.warn(new Error('warning stack trace:').stack);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root) {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = decodeURI(location.pathname + location.search);\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    this.router = router;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 1001,\n\t      bind: function bind() {\n\t        this.el.__v_link_active = true;\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: 1000,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check if active classes should be applied to a different element\n\t        this.activeEl = this.el;\n\t        var parent = this.el.parentNode;\n\t        while (parent) {\n\t          if (parent.__v_link_active) {\n\t            this.activeEl = parent;\n\t            break;\n\t          }\n\t          parent = parent.parentNode;\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            this.router.go({\n\t              path: el.pathname,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router._stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router._stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        this.updateClasses(route.path);\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path) {\n\t        var el = this.activeEl;\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass !== activeClass) {\n\t          removeClass(el, this.prevActiveClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            addClass(el, activeClass);\n\t          } else {\n\t            removeClass(el, activeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            addClass(el, activeClass);\n\t          } else {\n\t            removeClass(el, activeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this._stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype._stringifyPath = function _stringifyPath(path) {\n\t      var fullPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          if (path.query) {\n\t            params.queryParams = path.query;\n\t          }\n\t          fullPath = this._recognizer.generate(path.name, params);\n\t        } else if (path.path) {\n\t          fullPath = path.path;\n\t          if (path.query) {\n\t            var query = this._recognizer.generateQueryString(path.query);\n\t            if (fullPath.indexOf('?') > -1) {\n\t              fullPath += '&' + query.slice(1);\n\t            } else {\n\t              fullPath += query;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        fullPath = path ? path + '' : '';\n\t      }\n\t      return encodeURI(fullPath);\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.dd0312d19792b14263de.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t0:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + {\"1\":\"9a98a1685fc16511baee\",\"2\":\"ccee3cfa81e29669e328\"}[chunkId] + \".js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"http://static.gmmtour.com/mvvm/dist/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c8c66f9daef3ae0ac1b5\n **/","import Vue from 'vue';\nimport Vuex from 'vuex';\n\nimport VueRouter from 'vue-router';\nimport VueResource from 'vue-resource'\n// import App from './App'\nimport mainPage from './index';\nimport configRouter from \"./router\"\n//import List from './components/tables/list'\n/* eslint-disable no-new */\n// new Vue({\n//  el: 'body',\n//  components: { App }\n// })\n// Vue.config.debug=process.env.NODE_ENV !== 'production'\nVue.use(Vuex);\nVue.use(VueRouter);\nVue.use(VueResource);\nVue.http.interceptors.push({\n    request: function (request) {\n        return request\n    },\n    response: function (response) {\n        if (response.status===301) {\n            alert('您需要重新登录或没有权限操作');\n            location.href = '/login'\n\n        }\n        return response\n    }\n})\nconst router = new VueRouter({history: true});\nconfigRouter(router)\n\n\n\n// sync(store,router)\nconst App = Vue.extend(mainPage);\nrouter.start(App, 'app');\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** E:/wk11/static/oldVersion/mvvm/supplier/src/main.js\n **/","/**\n * Utility functions.\n */\n\nvar _ = exports, array = [], console = window.console;\n\n_.warn = function (msg) {\n    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n};\n\n_.error = function (msg) {\n    if (console) {\n        console.error(msg);\n    }\n};\n\n_.trim = function (str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n};\n\n_.toLower = function (str) {\n    return str ? str.toLowerCase() : '';\n};\n\n_.isArray = Array.isArray;\n\n_.isString = function (val) {\n    return typeof val === 'string';\n};\n\n_.isFunction = function (val) {\n    return typeof val === 'function';\n};\n\n_.isObject = function (obj) {\n    return obj !== null && typeof obj === 'object';\n};\n\n_.isPlainObject = function (obj) {\n    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n};\n\n_.options = function (fn, obj, options) {\n\n    options = options || {};\n\n    if (_.isFunction(options)) {\n        options = options.call(obj);\n    }\n\n    return _.merge(fn.bind({$vm: obj, $options: options}), fn, {$options: options});\n};\n\n_.each = function (obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (_.isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n};\n\n_.defaults = function (target, source) {\n\n    for (var key in source) {\n        if (target[key] === undefined) {\n            target[key] = source[key];\n        }\n    }\n\n    return target;\n};\n\n_.extend = function (target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        merge(target, arg);\n    });\n\n    return target;\n};\n\n_.merge = function (target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        merge(target, arg, true);\n    });\n\n    return target;\n};\n\nfunction merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n                target[key] = [];\n            }\n            merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/util.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Promise adapter.\n */\n\nvar _ = require('./util');\nvar PromiseObj = window.Promise || require('./lib/promise');\n\nfunction Promise(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise.all = function (iterable, context) {\n    return new Promise(PromiseObj.all(iterable), context);\n};\n\nPromise.resolve = function (value, context) {\n    return new Promise(PromiseObj.resolve(value), context);\n};\n\nPromise.reject = function (reason, context) {\n    return new Promise(PromiseObj.reject(reason), context);\n};\n\nPromise.race = function (iterable, context) {\n    return new Promise(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.then(fulfilled, rejected);\n\n    return this;\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.catch(rejected);\n\n    return this;\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n            callback.call(this);\n            return value;\n        }, function (reason) {\n            callback.call(this);\n            return PromiseObj.reject(reason);\n        }\n    );\n};\n\np.success = function (callback) {\n\n    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\n    return this.then(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.error = function (callback) {\n\n    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\n    return this.catch(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.always = function (callback) {\n\n    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\n    var cb = function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    };\n\n    return this.then(cb, cb);\n};\n\nmodule.exports = Promise;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/promise.js\n ** module id = 2\n ** module chunks = 0\n **/","import * as types from './mutation-types'\nexport const loadNavList = function ({ dispatch}) {\n    this.$http.get('/api/mvvm/a.json').then(function (res) {\n        if (res.ok && res.data) {\n            dispatch(types.LOAD_NAV_LIST,res.data.navList)\n        }\n    }, function (res) {\n//                alert(res)\n    })\n\n}\nexport const loadBreadCrumb= function ({dispatch},url='') {\n    this.$http.get('/api/mvvm/breadcrumb.json?url='+url).then(function (res) {\n        if (res.ok && res.data) {\n          dispatch(types.LOAD_BREADCRUMB,res.data.breadcrumb)\n        }\n    }, function (res) {\n        alert('请求错误')\n    })\n}\n\n\n/** WEBPACK FOOTER **\n ** E:/wk11/static/oldVersion/mvvm/supplier/src/vuex/actions.js\n **/","export const LOAD_BREADCRUMB='LOAD_BREADCRUMB'\nexport const LOAD_NAV_LIST='LOAD_NAV_LIST'\nexport const GET_TBLIST='GET_TBLIST'\n\n\n/** WEBPACK FOOTER **\n ** E:/wk11/static/oldVersion/mvvm/supplier/src/vuex/mutation-types.js\n **/","/*!\n * Vue.js v1.0.14\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.Vue = factory();\n}(this, function () { 'use strict';\n\n  function set(obj, key, val) {\n    if (hasOwn(obj, key)) {\n      obj[key] = val;\n      return;\n    }\n    if (obj._isVue) {\n      set(obj._data, key, val);\n      return;\n    }\n    var ob = obj.__ob__;\n    if (!ob) {\n      obj[key] = val;\n      return;\n    }\n    ob.convert(key, val);\n    ob.dep.notify();\n    if (ob.vms) {\n      var i = ob.vms.length;\n      while (i--) {\n        var vm = ob.vms[i];\n        vm._proxy(key);\n        vm._digest();\n      }\n    }\n    return val;\n  }\n\n  /**\n   * Delete a property and trigger change if necessary.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   */\n\n  function del(obj, key) {\n    if (!hasOwn(obj, key)) {\n      return;\n    }\n    delete obj[key];\n    var ob = obj.__ob__;\n    if (!ob) {\n      return;\n    }\n    ob.dep.notify();\n    if (ob.vms) {\n      var i = ob.vms.length;\n      while (i--) {\n        var vm = ob.vms[i];\n        vm._unproxy(key);\n        vm._digest();\n      }\n    }\n  }\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check whether the object has the property.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @return {Boolean}\n   */\n\n  function hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  }\n\n  /**\n   * Check if an expression is a literal value.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */\n\n  var literalValueRE = /^\\s?(true|false|[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\n  function isLiteral(exp) {\n    return literalValueRE.test(exp);\n  }\n\n  /**\n   * Check if a string starts with $ or _\n   *\n   * @param {String} str\n   * @return {Boolean}\n   */\n\n  function isReserved(str) {\n    var c = (str + '').charCodeAt(0);\n    return c === 0x24 || c === 0x5F;\n  }\n\n  /**\n   * Guard text output, make sure undefined outputs\n   * empty string\n   *\n   * @param {*} value\n   * @return {String}\n   */\n\n  function _toString(value) {\n    return value == null ? '' : value.toString();\n  }\n\n  /**\n   * Check and convert possible numeric strings to numbers\n   * before setting back to data\n   *\n   * @param {*} value\n   * @return {*|Number}\n   */\n\n  function toNumber(value) {\n    if (typeof value !== 'string') {\n      return value;\n    } else {\n      var parsed = Number(value);\n      return isNaN(parsed) ? value : parsed;\n    }\n  }\n\n  /**\n   * Convert string boolean literals into real booleans.\n   *\n   * @param {*} value\n   * @return {*|Boolean}\n   */\n\n  function toBoolean(value) {\n    return value === 'true' ? true : value === 'false' ? false : value;\n  }\n\n  /**\n   * Strip quotes from a string\n   *\n   * @param {String} str\n   * @return {String | false}\n   */\n\n  function stripQuotes(str) {\n    var a = str.charCodeAt(0);\n    var b = str.charCodeAt(str.length - 1);\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n  }\n\n  /**\n   * Camelize a hyphen-delmited string.\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var camelizeRE = /-(\\w)/g;\n\n  function camelize(str) {\n    return str.replace(camelizeRE, toUpper);\n  }\n\n  function toUpper(_, c) {\n    return c ? c.toUpperCase() : '';\n  }\n\n  /**\n   * Hyphenate a camelCase string.\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var hyphenateRE = /([a-z\\d])([A-Z])/g;\n\n  function hyphenate(str) {\n    return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n  }\n\n  /**\n   * Converts hyphen/underscore/slash delimitered names into\n   * camelized classNames.\n   *\n   * e.g. my-component => MyComponent\n   *      some_else    => SomeElse\n   *      some/comp    => SomeComp\n   *\n   * @param {String} str\n   * @return {String}\n   */\n\n  var classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\n  function classify(str) {\n    return str.replace(classifyRE, toUpper);\n  }\n\n  /**\n   * Simple bind, faster than native\n   *\n   * @param {Function} fn\n   * @param {Object} ctx\n   * @return {Function}\n   */\n\n  function bind$1(fn, ctx) {\n    return function (a) {\n      var l = arguments.length;\n      return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n    };\n  }\n\n  /**\n   * Convert an Array-like object to a real Array.\n   *\n   * @param {Array-like} list\n   * @param {Number} [start] - start index\n   * @return {Array}\n   */\n\n  function toArray(list, start) {\n    start = start || 0;\n    var i = list.length - start;\n    var ret = new Array(i);\n    while (i--) {\n      ret[i] = list[i + start];\n    }\n    return ret;\n  }\n\n  /**\n   * Mix properties into target object.\n   *\n   * @param {Object} to\n   * @param {Object} from\n   */\n\n  function extend(to, from) {\n    var keys = Object.keys(from);\n    var i = keys.length;\n    while (i--) {\n      to[keys[i]] = from[keys[i]];\n    }\n    return to;\n  }\n\n  /**\n   * Quick object check - this is primarily used to tell\n   * Objects from primitive values when we know the value\n   * is a JSON-compliant type.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  function isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n  }\n\n  /**\n   * Strict object type check. Only returns true\n   * for plain JavaScript objects.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  var toString = Object.prototype.toString;\n  var OBJECT_STRING = '[object Object]';\n\n  function isPlainObject(obj) {\n    return toString.call(obj) === OBJECT_STRING;\n  }\n\n  /**\n   * Array type check.\n   *\n   * @param {*} obj\n   * @return {Boolean}\n   */\n\n  var isArray = Array.isArray;\n\n  /**\n   * Define a non-enumerable property\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   * @param {Boolean} [enumerable]\n   */\n\n  function def(obj, key, val, enumerable) {\n    Object.defineProperty(obj, key, {\n      value: val,\n      enumerable: !!enumerable,\n      writable: true,\n      configurable: true\n    });\n  }\n\n  /**\n   * Debounce a function so it only gets called after the\n   * input stops arriving after the given wait period.\n   *\n   * @param {Function} func\n   * @param {Number} wait\n   * @return {Function} - the debounced function\n   */\n\n  function _debounce(func, wait) {\n    var timeout, args, context, timestamp, result;\n    var later = function later() {\n      var last = Date.now() - timestamp;\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      }\n    };\n    return function () {\n      context = this;\n      args = arguments;\n      timestamp = Date.now();\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Manual indexOf because it's slightly faster than\n   * native.\n   *\n   * @param {Array} arr\n   * @param {*} obj\n   */\n\n  function indexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * Make a cancellable version of an async callback.\n   *\n   * @param {Function} fn\n   * @return {Function}\n   */\n\n  function cancellable(fn) {\n    var cb = function cb() {\n      if (!cb.cancelled) {\n        return fn.apply(this, arguments);\n      }\n    };\n    cb.cancel = function () {\n      cb.cancelled = true;\n    };\n    return cb;\n  }\n\n  /**\n   * Check if two values are loosely equal - that is,\n   * if they are plain objects, do they have the same shape?\n   *\n   * @param {*} a\n   * @param {*} b\n   * @return {Boolean}\n   */\n\n  function looseEqual(a, b) {\n    /* eslint-disable eqeqeq */\n    return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n    /* eslint-enable eqeqeq */\n  }\n\n  var hasProto = ('__proto__' in {});\n\n  // Browser environment sniffing\n  var inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n  var isIE9 = inBrowser && navigator.userAgent.toLowerCase().indexOf('msie 9.0') > 0;\n\n  var isAndroid = inBrowser && navigator.userAgent.toLowerCase().indexOf('android') > 0;\n\n  var transitionProp = undefined;\n  var transitionEndEvent = undefined;\n  var animationProp = undefined;\n  var animationEndEvent = undefined;\n\n  // Transition property/event sniffing\n  if (inBrowser && !isIE9) {\n    var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n    var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n    transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n    transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n    animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n    animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n  }\n\n  /**\n   * Defer a task to execute it asynchronously. Ideally this\n   * should be executed as a microtask, so we leverage\n   * MutationObserver if it's available, and fallback to\n   * setTimeout(0).\n   *\n   * @param {Function} cb\n   * @param {Object} ctx\n   */\n\n  var nextTick = (function () {\n    var callbacks = [];\n    var pending = false;\n    var timerFunc;\n    function nextTickHandler() {\n      pending = false;\n      var copies = callbacks.slice(0);\n      callbacks = [];\n      for (var i = 0; i < copies.length; i++) {\n        copies[i]();\n      }\n    }\n    /* istanbul ignore if */\n    if (typeof MutationObserver !== 'undefined') {\n      var counter = 1;\n      var observer = new MutationObserver(nextTickHandler);\n      var textNode = document.createTextNode(counter);\n      observer.observe(textNode, {\n        characterData: true\n      });\n      timerFunc = function () {\n        counter = (counter + 1) % 2;\n        textNode.data = counter;\n      };\n    } else {\n      timerFunc = setTimeout;\n    }\n    return function (cb, ctx) {\n      var func = ctx ? function () {\n        cb.call(ctx);\n      } : cb;\n      callbacks.push(func);\n      if (pending) return;\n      pending = true;\n      timerFunc(nextTickHandler, 0);\n    };\n  })();\n\n  function Cache(limit) {\n    this.size = 0;\n    this.limit = limit;\n    this.head = this.tail = undefined;\n    this._keymap = Object.create(null);\n  }\n\n  var p = Cache.prototype;\n\n  /**\n   * Put <value> into the cache associated with <key>.\n   * Returns the entry which was removed to make room for\n   * the new entry. Otherwise undefined is returned.\n   * (i.e. if there was enough room already).\n   *\n   * @param {String} key\n   * @param {*} value\n   * @return {Entry|undefined}\n   */\n\n  p.put = function (key, value) {\n    var entry = {\n      key: key,\n      value: value\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    if (this.size === this.limit) {\n      return this.shift();\n    } else {\n      this.size++;\n    }\n  };\n\n  /**\n   * Purge the least recently used (oldest) entry from the\n   * cache. Returns the removed entry or undefined if the\n   * cache was empty.\n   */\n\n  p.shift = function () {\n    var entry = this.head;\n    if (entry) {\n      this.head = this.head.newer;\n      this.head.older = undefined;\n      entry.newer = entry.older = undefined;\n      this._keymap[entry.key] = undefined;\n    }\n    return entry;\n  };\n\n  /**\n   * Get and register recent use of <key>. Returns the value\n   * associated with <key> or undefined if not in cache.\n   *\n   * @param {String} key\n   * @param {Boolean} returnEntry\n   * @return {Entry|*}\n   */\n\n  p.get = function (key, returnEntry) {\n    var entry = this._keymap[key];\n    if (entry === undefined) return;\n    if (entry === this.tail) {\n      return returnEntry ? entry : entry.value;\n    }\n    // HEAD--------------TAIL\n    //   <.older   .newer>\n    //  <--- add direction --\n    //   A  B  C  <D>  E\n    if (entry.newer) {\n      if (entry === this.head) {\n        this.head = entry.newer;\n      }\n      entry.newer.older = entry.older; // C <-- E.\n    }\n    if (entry.older) {\n      entry.older.newer = entry.newer; // C. --> E\n    }\n    entry.newer = undefined; // D --x\n    entry.older = this.tail; // D. --> E\n    if (this.tail) {\n      this.tail.newer = entry; // E. <-- D\n    }\n    this.tail = entry;\n    return returnEntry ? entry : entry.value;\n  };\n\n  var cache$1 = new Cache(1000);\n  var filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n  var reservedArgRE = /^in$|^-?\\d+/;\n\n  /**\n   * Parser state\n   */\n\n  var str;\n  var dir;\n  var c;\n  var prev;\n  var i;\n  var l;\n  var lastFilterIndex;\n  var inSingle;\n  var inDouble;\n  var curly;\n  var square;\n  var paren;\n  /**\n   * Push a filter to the current directive object\n   */\n\n  function pushFilter() {\n    var exp = str.slice(lastFilterIndex, i).trim();\n    var filter;\n    if (exp) {\n      filter = {};\n      var tokens = exp.match(filterTokenRE);\n      filter.name = tokens[0];\n      if (tokens.length > 1) {\n        filter.args = tokens.slice(1).map(processFilterArg);\n      }\n    }\n    if (filter) {\n      (dir.filters = dir.filters || []).push(filter);\n    }\n    lastFilterIndex = i + 1;\n  }\n\n  /**\n   * Check if an argument is dynamic and strip quotes.\n   *\n   * @param {String} arg\n   * @return {Object}\n   */\n\n  function processFilterArg(arg) {\n    if (reservedArgRE.test(arg)) {\n      return {\n        value: toNumber(arg),\n        dynamic: false\n      };\n    } else {\n      var stripped = stripQuotes(arg);\n      var dynamic = stripped === arg;\n      return {\n        value: dynamic ? arg : stripped,\n        dynamic: dynamic\n      };\n    }\n  }\n\n  /**\n   * Parse a directive value and extract the expression\n   * and its filters into a descriptor.\n   *\n   * Example:\n   *\n   * \"a + 1 | uppercase\" will yield:\n   * {\n   *   expression: 'a + 1',\n   *   filters: [\n   *     { name: 'uppercase', args: null }\n   *   ]\n   * }\n   *\n   * @param {String} str\n   * @return {Object}\n   */\n\n  function parseDirective(s) {\n\n    var hit = cache$1.get(s);\n    if (hit) {\n      return hit;\n    }\n\n    // reset parser state\n    str = s;\n    inSingle = inDouble = false;\n    curly = square = paren = 0;\n    lastFilterIndex = 0;\n    dir = {};\n\n    for (i = 0, l = str.length; i < l; i++) {\n      prev = c;\n      c = str.charCodeAt(i);\n      if (inSingle) {\n        // check single quote\n        if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n      } else if (inDouble) {\n        // check double quote\n        if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n      } else if (c === 0x7C && // pipe\n      str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n        if (dir.expression == null) {\n          // first filter, end of expression\n          lastFilterIndex = i + 1;\n          dir.expression = str.slice(0, i).trim();\n        } else {\n          // already has filter\n          pushFilter();\n        }\n      } else {\n        switch (c) {\n          case 0x22:\n            inDouble = true;break; // \"\n          case 0x27:\n            inSingle = true;break; // '\n          case 0x28:\n            paren++;break; // (\n          case 0x29:\n            paren--;break; // )\n          case 0x5B:\n            square++;break; // [\n          case 0x5D:\n            square--;break; // ]\n          case 0x7B:\n            curly++;break; // {\n          case 0x7D:\n            curly--;break; // }\n        }\n      }\n    }\n\n    if (dir.expression == null) {\n      dir.expression = str.slice(0, i).trim();\n    } else if (lastFilterIndex !== 0) {\n      pushFilter();\n    }\n\n    cache$1.put(s, dir);\n    return dir;\n  }\n\n  var directive = Object.freeze({\n    parseDirective: parseDirective\n  });\n\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var cache = undefined;\n  var tagRE = undefined;\n  var htmlRE = undefined;\n  /**\n   * Escape a string so it can be used in a RegExp\n   * constructor.\n   *\n   * @param {String} str\n   */\n\n  function escapeRegex(str) {\n    return str.replace(regexEscapeRE, '\\\\$&');\n  }\n\n  function compileRegex() {\n    var open = escapeRegex(config.delimiters[0]);\n    var close = escapeRegex(config.delimiters[1]);\n    var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n    var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n    tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n    htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n    // reset cache\n    cache = new Cache(1000);\n  }\n\n  /**\n   * Parse a template text string into an array of tokens.\n   *\n   * @param {String} text\n   * @return {Array<Object> | null}\n   *               - {String} type\n   *               - {String} value\n   *               - {Boolean} [html]\n   *               - {Boolean} [oneTime]\n   */\n\n  function parseText(text) {\n    if (!cache) {\n      compileRegex();\n    }\n    var hit = cache.get(text);\n    if (hit) {\n      return hit;\n    }\n    text = text.replace(/\\n/g, '');\n    if (!tagRE.test(text)) {\n      return null;\n    }\n    var tokens = [];\n    var lastIndex = tagRE.lastIndex = 0;\n    var match, index, html, value, first, oneTime;\n    /* eslint-disable no-cond-assign */\n    while (match = tagRE.exec(text)) {\n      /* eslint-enable no-cond-assign */\n      index = match.index;\n      // push text token\n      if (index > lastIndex) {\n        tokens.push({\n          value: text.slice(lastIndex, index)\n        });\n      }\n      // tag token\n      html = htmlRE.test(match[0]);\n      value = html ? match[1] : match[2];\n      first = value.charCodeAt(0);\n      oneTime = first === 42; // *\n      value = oneTime ? value.slice(1) : value;\n      tokens.push({\n        tag: true,\n        value: value.trim(),\n        html: html,\n        oneTime: oneTime\n      });\n      lastIndex = index + match[0].length;\n    }\n    if (lastIndex < text.length) {\n      tokens.push({\n        value: text.slice(lastIndex)\n      });\n    }\n    cache.put(text, tokens);\n    return tokens;\n  }\n\n  /**\n   * Format a list of tokens into an expression.\n   * e.g. tokens parsed from 'a {{b}} c' can be serialized\n   * into one single expression as '\"a \" + b + \" c\"'.\n   *\n   * @param {Array} tokens\n   * @param {Vue} [vm]\n   * @return {String}\n   */\n\n  function tokensToExp(tokens, vm) {\n    if (tokens.length > 1) {\n      return tokens.map(function (token) {\n        return formatToken(token, vm);\n      }).join('+');\n    } else {\n      return formatToken(tokens[0], vm, true);\n    }\n  }\n\n  /**\n   * Format a single token.\n   *\n   * @param {Object} token\n   * @param {Vue} [vm]\n   * @param {Boolean} [single]\n   * @return {String}\n   */\n\n  function formatToken(token, vm, single) {\n    return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n  }\n\n  /**\n   * For an attribute with multiple interpolation tags,\n   * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n   * the whole thing into a single watchable expression, we\n   * have to inline those filters. This function does exactly\n   * that. This is a bit hacky but it avoids heavy changes\n   * to directive parser and watcher mechanism.\n   *\n   * @param {String} exp\n   * @param {Boolean} single\n   * @return {String}\n   */\n\n  var filterRE$1 = /[^|]\\|[^|]/;\n  function inlineFilters(exp, single) {\n    if (!filterRE$1.test(exp)) {\n      return single ? exp : '(' + exp + ')';\n    } else {\n      var dir = parseDirective(exp);\n      if (!dir.filters) {\n        return '(' + exp + ')';\n      } else {\n        return 'this._applyFilters(' + dir.expression + // value\n        ',null,' + // oldValue (null for read)\n        JSON.stringify(dir.filters) + // filter descriptors\n        ',false)'; // write?\n      }\n    }\n  }\n\n  var text$1 = Object.freeze({\n    compileRegex: compileRegex,\n    parseText: parseText,\n    tokensToExp: tokensToExp\n  });\n\n  var delimiters = ['{{', '}}'];\n  var unsafeDelimiters = ['{{{', '}}}'];\n\n  var config = Object.defineProperties({\n\n    /**\n     * Whether to print debug messages.\n     * Also enables stack trace for warnings.\n     *\n     * @type {Boolean}\n     */\n\n    debug: false,\n\n    /**\n     * Whether to suppress warnings.\n     *\n     * @type {Boolean}\n     */\n\n    silent: false,\n\n    /**\n     * Whether to use async rendering.\n     */\n\n    async: true,\n\n    /**\n     * Whether to warn against errors caught when evaluating\n     * expressions.\n     */\n\n    warnExpressionErrors: true,\n\n    /**\n     * Whether or not to handle fully object properties which\n     * are already backed by getters and seters. Depending on\n     * use case and environment, this might introduce non-neglible\n     * performance penalties.\n     */\n    convertAllProperties: false,\n\n    /**\n     * Internal flag to indicate the delimiters have been\n     * changed.\n     *\n     * @type {Boolean}\n     */\n\n    _delimitersChanged: true,\n\n    /**\n     * List of asset types that a component can own.\n     *\n     * @type {Array}\n     */\n\n    _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n    /**\n     * prop binding modes\n     */\n\n    _propBindingModes: {\n      ONE_WAY: 0,\n      TWO_WAY: 1,\n      ONE_TIME: 2\n    },\n\n    /**\n     * Max circular updates allowed in a batcher flush cycle.\n     */\n\n    _maxUpdateCount: 100\n\n  }, {\n    delimiters: { /**\n                   * Interpolation delimiters. Changing these would trigger\n                   * the text parser to re-compile the regular expressions.\n                   *\n                   * @type {Array<String>}\n                   */\n\n      get: function get() {\n        return delimiters;\n      },\n      set: function set(val) {\n        delimiters = val;\n        compileRegex();\n      },\n      configurable: true,\n      enumerable: true\n    },\n    unsafeDelimiters: {\n      get: function get() {\n        return unsafeDelimiters;\n      },\n      set: function set(val) {\n        unsafeDelimiters = val;\n        compileRegex();\n      },\n      configurable: true,\n      enumerable: true\n    }\n  });\n\n  var warn = undefined;\n\n  if ('development' !== 'production') {\n    (function () {\n      var hasConsole = typeof console !== 'undefined';\n      warn = function (msg, e) {\n        if (hasConsole && (!config.silent || config.debug)) {\n          console.warn('[Vue warn]: ' + msg);\n          /* istanbul ignore if */\n          if (config.debug) {\n            if (e) {\n              throw e;\n            } else {\n              console.warn(new Error('Warning Stack Trace').stack);\n            }\n          }\n        }\n      };\n    })();\n  }\n\n  /**\n   * Append with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function appendWithTransition(el, target, vm, cb) {\n    applyTransition(el, 1, function () {\n      target.appendChild(el);\n    }, vm, cb);\n  }\n\n  /**\n   * InsertBefore with transition.\n   *\n   * @param {Element} el\n   * @param {Element} target\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function beforeWithTransition(el, target, vm, cb) {\n    applyTransition(el, 1, function () {\n      before(el, target);\n    }, vm, cb);\n  }\n\n  /**\n   * Remove with transition.\n   *\n   * @param {Element} el\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function removeWithTransition(el, vm, cb) {\n    applyTransition(el, -1, function () {\n      remove(el);\n    }, vm, cb);\n  }\n\n  /**\n   * Apply transitions with an operation callback.\n   *\n   * @param {Element} el\n   * @param {Number} direction\n   *                  1: enter\n   *                 -1: leave\n   * @param {Function} op - the actual DOM operation\n   * @param {Vue} vm\n   * @param {Function} [cb]\n   */\n\n  function applyTransition(el, direction, op, vm, cb) {\n    var transition = el.__v_trans;\n    if (!transition ||\n    // skip if there are no js hooks and CSS transition is\n    // not supported\n    !transition.hooks && !transitionEndEvent ||\n    // skip transitions for initial compile\n    !vm._isCompiled ||\n    // if the vm is being manipulated by a parent directive\n    // during the parent's compilation phase, skip the\n    // animation.\n    vm.$parent && !vm.$parent._isCompiled) {\n      op();\n      if (cb) cb();\n      return;\n    }\n    var action = direction > 0 ? 'enter' : 'leave';\n    transition[action](op, cb);\n  }\n\n  /**\n   * Query an element selector if it's not an element already.\n   *\n   * @param {String|Element} el\n   * @return {Element}\n   */\n\n  function query(el) {\n    if (typeof el === 'string') {\n      var selector = el;\n      el = document.querySelector(el);\n      if (!el) {\n        'development' !== 'production' && warn('Cannot find element: ' + selector);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Check if a node is in the document.\n   * Note: document.documentElement.contains should work here\n   * but always returns false for comment nodes in phantomjs,\n   * making unit tests difficult. This is fixed by doing the\n   * contains() check on the node's parentNode instead of\n   * the node itself.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function inDoc(node) {\n    var doc = document.documentElement;\n    var parent = node && node.parentNode;\n    return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n  }\n\n  /**\n   * Get and remove an attribute from a node.\n   *\n   * @param {Node} node\n   * @param {String} _attr\n   */\n\n  function getAttr(node, _attr) {\n    var val = node.getAttribute(_attr);\n    if (val !== null) {\n      node.removeAttribute(_attr);\n    }\n    return val;\n  }\n\n  /**\n   * Get an attribute with colon or v-bind: prefix.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {String|null}\n   */\n\n  function getBindAttr(node, name) {\n    var val = getAttr(node, ':' + name);\n    if (val === null) {\n      val = getAttr(node, 'v-bind:' + name);\n    }\n    return val;\n  }\n\n  /**\n   * Check the presence of a bind attribute.\n   *\n   * @param {Node} node\n   * @param {String} name\n   * @return {Boolean}\n   */\n\n  function hasBindAttr(node, name) {\n    return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n  }\n\n  /**\n   * Insert el before target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function before(el, target) {\n    target.parentNode.insertBefore(el, target);\n  }\n\n  /**\n   * Insert el after target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function after(el, target) {\n    if (target.nextSibling) {\n      before(el, target.nextSibling);\n    } else {\n      target.parentNode.appendChild(el);\n    }\n  }\n\n  /**\n   * Remove el from DOM\n   *\n   * @param {Element} el\n   */\n\n  function remove(el) {\n    el.parentNode.removeChild(el);\n  }\n\n  /**\n   * Prepend el to target\n   *\n   * @param {Element} el\n   * @param {Element} target\n   */\n\n  function prepend(el, target) {\n    if (target.firstChild) {\n      before(el, target.firstChild);\n    } else {\n      target.appendChild(el);\n    }\n  }\n\n  /**\n   * Replace target with el\n   *\n   * @param {Element} target\n   * @param {Element} el\n   */\n\n  function replace(target, el) {\n    var parent = target.parentNode;\n    if (parent) {\n      parent.replaceChild(el, target);\n    }\n  }\n\n  /**\n   * Add event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  function on$1(el, event, cb) {\n    el.addEventListener(event, cb);\n  }\n\n  /**\n   * Remove event listener shorthand.\n   *\n   * @param {Element} el\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  function off(el, event, cb) {\n    el.removeEventListener(event, cb);\n  }\n\n  /**\n   * In IE9, setAttribute('class') will result in empty class\n   * if the element also has the :class attribute; However in\n   * PhantomJS, setting `className` does not work on SVG elements...\n   * So we have to do a conditional check here.\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function setClass(el, cls) {\n    /* istanbul ignore if */\n    if (isIE9 && !(el instanceof SVGElement)) {\n      el.className = cls;\n    } else {\n      el.setAttribute('class', cls);\n    }\n  }\n\n  /**\n   * Add class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function addClass(el, cls) {\n    if (el.classList) {\n      el.classList.add(cls);\n    } else {\n      var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n      if (cur.indexOf(' ' + cls + ' ') < 0) {\n        setClass(el, (cur + cls).trim());\n      }\n    }\n  }\n\n  /**\n   * Remove class with compatibility for IE & SVG\n   *\n   * @param {Element} el\n   * @param {String} cls\n   */\n\n  function removeClass(el, cls) {\n    if (el.classList) {\n      el.classList.remove(cls);\n    } else {\n      var cur = ' ' + (el.getAttribute('class') || '') + ' ';\n      var tar = ' ' + cls + ' ';\n      while (cur.indexOf(tar) >= 0) {\n        cur = cur.replace(tar, ' ');\n      }\n      setClass(el, cur.trim());\n    }\n    if (!el.className) {\n      el.removeAttribute('class');\n    }\n  }\n\n  /**\n   * Extract raw content inside an element into a temporary\n   * container div\n   *\n   * @param {Element} el\n   * @param {Boolean} asFragment\n   * @return {Element}\n   */\n\n  function extractContent(el, asFragment) {\n    var child;\n    var rawContent;\n    /* istanbul ignore if */\n    if (isTemplate(el) && el.content instanceof DocumentFragment) {\n      el = el.content;\n    }\n    if (el.hasChildNodes()) {\n      trimNode(el);\n      rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n      /* eslint-disable no-cond-assign */\n      while (child = el.firstChild) {\n        /* eslint-enable no-cond-assign */\n        rawContent.appendChild(child);\n      }\n    }\n    return rawContent;\n  }\n\n  /**\n   * Trim possible empty head/tail textNodes inside a parent.\n   *\n   * @param {Node} node\n   */\n\n  function trimNode(node) {\n    trim(node, node.firstChild);\n    trim(node, node.lastChild);\n  }\n\n  function trim(parent, node) {\n    if (node && node.nodeType === 3 && !node.data.trim()) {\n      parent.removeChild(node);\n    }\n  }\n\n  /**\n   * Check if an element is a template tag.\n   * Note if the template appears inside an SVG its tagName\n   * will be in lowercase.\n   *\n   * @param {Element} el\n   */\n\n  function isTemplate(el) {\n    return el.tagName && el.tagName.toLowerCase() === 'template';\n  }\n\n  /**\n   * Create an \"anchor\" for performing dom insertion/removals.\n   * This is used in a number of scenarios:\n   * - fragment instance\n   * - v-html\n   * - v-if\n   * - v-for\n   * - component\n   *\n   * @param {String} content\n   * @param {Boolean} persist - IE trashes empty textNodes on\n   *                            cloneNode(true), so in certain\n   *                            cases the anchor needs to be\n   *                            non-empty to be persisted in\n   *                            templates.\n   * @return {Comment|Text}\n   */\n\n  function createAnchor(content, persist) {\n    var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n    anchor.__vue_anchor = true;\n    return anchor;\n  }\n\n  /**\n   * Find a component ref attribute that starts with $.\n   *\n   * @param {Element} node\n   * @return {String|undefined}\n   */\n\n  var refRE = /^v-ref:/;\n\n  function findRef(node) {\n    if (node.hasAttributes()) {\n      var attrs = node.attributes;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        var name = attrs[i].name;\n        if (refRE.test(name)) {\n          return camelize(name.replace(refRE, ''));\n        }\n      }\n    }\n  }\n\n  /**\n   * Map a function to a range of nodes .\n   *\n   * @param {Node} node\n   * @param {Node} end\n   * @param {Function} op\n   */\n\n  function mapNodeRange(node, end, op) {\n    var next;\n    while (node !== end) {\n      next = node.nextSibling;\n      op(node);\n      node = next;\n    }\n    op(end);\n  }\n\n  /**\n   * Remove a range of nodes with transition, store\n   * the nodes in a fragment with correct ordering,\n   * and call callback when done.\n   *\n   * @param {Node} start\n   * @param {Node} end\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Function} cb\n   */\n\n  function removeNodeRange(start, end, vm, frag, cb) {\n    var done = false;\n    var removed = 0;\n    var nodes = [];\n    mapNodeRange(start, end, function (node) {\n      if (node === end) done = true;\n      nodes.push(node);\n      removeWithTransition(node, vm, onRemoved);\n    });\n    function onRemoved() {\n      removed++;\n      if (done && removed >= nodes.length) {\n        for (var i = 0; i < nodes.length; i++) {\n          frag.appendChild(nodes[i]);\n        }\n        cb && cb();\n      }\n    }\n  }\n\n  var commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/;\n  var reservedTagRE = /^(slot|partial|component)$/;\n\n  /**\n   * Check if an element is a component, if yes return its\n   * component id.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Object|undefined}\n   */\n\n  function checkComponentAttr(el, options) {\n    var tag = el.tagName.toLowerCase();\n    var hasAttrs = el.hasAttributes();\n    if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n      if (resolveAsset(options, 'components', tag)) {\n        return { id: tag };\n      } else {\n        var is = hasAttrs && getIsBinding(el);\n        if (is) {\n          return is;\n        } else if ('development' !== 'production') {\n          if (tag.indexOf('-') > -1 || /HTMLUnknownElement/.test(el.toString()) &&\n          // Chrome returns unknown for several HTML5 elements.\n          // https://code.google.com/p/chromium/issues/detail?id=540526\n          !/^(data|time|rtc|rb)$/.test(tag)) {\n            warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly?');\n          }\n        }\n      }\n    } else if (hasAttrs) {\n      return getIsBinding(el);\n    }\n  }\n\n  /**\n   * Get \"is\" binding from an element.\n   *\n   * @param {Element} el\n   * @return {Object|undefined}\n   */\n\n  function getIsBinding(el) {\n    // dynamic syntax\n    var exp = getAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp };\n    } else {\n      exp = getBindAttr(el, 'is');\n      if (exp != null) {\n        return { id: exp, dynamic: true };\n      }\n    }\n  }\n\n  /**\n   * Set a prop's initial value on a vm and its data object.\n   *\n   * @param {Vue} vm\n   * @param {Object} prop\n   * @param {*} value\n   */\n\n  function initProp(vm, prop, value) {\n    var key = prop.path;\n    value = coerceProp(prop, value);\n    vm[key] = vm._data[key] = assertProp(prop, value) ? value : undefined;\n  }\n\n  /**\n   * Assert whether a prop is valid.\n   *\n   * @param {Object} prop\n   * @param {*} value\n   */\n\n  function assertProp(prop, value) {\n    // if a prop is not provided and is not required,\n    // skip the check.\n    if (prop.raw === null && !prop.required) {\n      return true;\n    }\n    var options = prop.options;\n    var type = options.type;\n    var valid = true;\n    var expectedType;\n    if (type) {\n      if (type === String) {\n        expectedType = 'string';\n        valid = typeof value === expectedType;\n      } else if (type === Number) {\n        expectedType = 'number';\n        valid = typeof value === 'number';\n      } else if (type === Boolean) {\n        expectedType = 'boolean';\n        valid = typeof value === 'boolean';\n      } else if (type === Function) {\n        expectedType = 'function';\n        valid = typeof value === 'function';\n      } else if (type === Object) {\n        expectedType = 'object';\n        valid = isPlainObject(value);\n      } else if (type === Array) {\n        expectedType = 'array';\n        valid = isArray(value);\n      } else {\n        valid = value instanceof type;\n      }\n    }\n    if (!valid) {\n      'development' !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n      return false;\n    }\n    var validator = options.validator;\n    if (validator) {\n      if (!validator.call(null, value)) {\n        'development' !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Force parsing value with coerce option.\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @return {*}\n   */\n\n  function coerceProp(prop, value) {\n    var coerce = prop.options.coerce;\n    if (!coerce) {\n      return value;\n    }\n    // coerce is a function\n    return coerce(value);\n  }\n\n  function formatType(val) {\n    return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n  }\n\n  function formatValue(val) {\n    return Object.prototype.toString.call(val).slice(8, -1);\n  }\n\n  /**\n   * Option overwriting strategies are functions that handle\n   * how to merge a parent option value and a child option\n   * value into the final value.\n   *\n   * All strategy functions follow the same signature:\n   *\n   * @param {*} parentVal\n   * @param {*} childVal\n   * @param {Vue} [vm]\n   */\n\n  var strats = config.optionMergeStrategies = Object.create(null);\n\n  /**\n   * Helper that recursively merges two data objects together.\n   */\n\n  function mergeData(to, from) {\n    var key, toVal, fromVal;\n    for (key in from) {\n      toVal = to[key];\n      fromVal = from[key];\n      if (!hasOwn(to, key)) {\n        set(to, key, fromVal);\n      } else if (isObject(toVal) && isObject(fromVal)) {\n        mergeData(toVal, fromVal);\n      }\n    }\n    return to;\n  }\n\n  /**\n   * Data\n   */\n\n  strats.data = function (parentVal, childVal, vm) {\n    if (!vm) {\n      // in a Vue.extend merge, both should be functions\n      if (!childVal) {\n        return parentVal;\n      }\n      if (typeof childVal !== 'function') {\n        'development' !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n        return parentVal;\n      }\n      if (!parentVal) {\n        return childVal;\n      }\n      // when parentVal & childVal are both present,\n      // we need to return a function that returns the\n      // merged result of both functions... no need to\n      // check if parentVal is a function here because\n      // it has to be a function to pass previous merges.\n      return function mergedDataFn() {\n        return mergeData(childVal.call(this), parentVal.call(this));\n      };\n    } else if (parentVal || childVal) {\n      return function mergedInstanceDataFn() {\n        // instance merge\n        var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n        var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n        if (instanceData) {\n          return mergeData(instanceData, defaultData);\n        } else {\n          return defaultData;\n        }\n      };\n    }\n  };\n\n  /**\n   * El\n   */\n\n  strats.el = function (parentVal, childVal, vm) {\n    if (!vm && childVal && typeof childVal !== 'function') {\n      'development' !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return;\n    }\n    var ret = childVal || parentVal;\n    // invoke the element factory if this is instance merge\n    return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n  };\n\n  /**\n   * Hooks and param attributes are merged as arrays.\n   */\n\n  strats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = function (parentVal, childVal) {\n    return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n  };\n\n  /**\n   * 0.11 deprecation warning\n   */\n\n  strats.paramAttributes = function () {\n    /* istanbul ignore next */\n    'development' !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n  };\n\n  /**\n   * Assets\n   *\n   * When a vm is present (instance creation), we need to do\n   * a three-way merge between constructor options, instance\n   * options and parent options.\n   */\n\n  function mergeAssets(parentVal, childVal) {\n    var res = Object.create(parentVal);\n    return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n  }\n\n  config._assetTypes.forEach(function (type) {\n    strats[type + 's'] = mergeAssets;\n  });\n\n  /**\n   * Events & Watchers.\n   *\n   * Events & watchers hashes should not overwrite one\n   * another, so we merge them as arrays.\n   */\n\n  strats.watch = strats.events = function (parentVal, childVal) {\n    if (!childVal) return parentVal;\n    if (!parentVal) return childVal;\n    var ret = {};\n    extend(ret, parentVal);\n    for (var key in childVal) {\n      var parent = ret[key];\n      var child = childVal[key];\n      if (parent && !isArray(parent)) {\n        parent = [parent];\n      }\n      ret[key] = parent ? parent.concat(child) : [child];\n    }\n    return ret;\n  };\n\n  /**\n   * Other object hashes.\n   */\n\n  strats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n    if (!childVal) return parentVal;\n    if (!parentVal) return childVal;\n    var ret = Object.create(null);\n    extend(ret, parentVal);\n    extend(ret, childVal);\n    return ret;\n  };\n\n  /**\n   * Default strategy.\n   */\n\n  var defaultStrat = function defaultStrat(parentVal, childVal) {\n    return childVal === undefined ? parentVal : childVal;\n  };\n\n  /**\n   * Make sure component options get converted to actual\n   * constructors.\n   *\n   * @param {Object} options\n   */\n\n  function guardComponents(options) {\n    if (options.components) {\n      var components = options.components = guardArrayAssets(options.components);\n      var def;\n      var ids = Object.keys(components);\n      for (var i = 0, l = ids.length; i < l; i++) {\n        var key = ids[i];\n        if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n          'development' !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n          continue;\n        }\n        def = components[key];\n        if (isPlainObject(def)) {\n          components[key] = Vue.extend(def);\n        }\n      }\n    }\n  }\n\n  /**\n   * Ensure all props option syntax are normalized into the\n   * Object-based format.\n   *\n   * @param {Object} options\n   */\n\n  function guardProps(options) {\n    var props = options.props;\n    var i, val;\n    if (isArray(props)) {\n      options.props = {};\n      i = props.length;\n      while (i--) {\n        val = props[i];\n        if (typeof val === 'string') {\n          options.props[val] = null;\n        } else if (val.name) {\n          options.props[val.name] = val;\n        }\n      }\n    } else if (isPlainObject(props)) {\n      var keys = Object.keys(props);\n      i = keys.length;\n      while (i--) {\n        val = props[keys[i]];\n        if (typeof val === 'function') {\n          props[keys[i]] = { type: val };\n        }\n      }\n    }\n  }\n\n  /**\n   * Guard an Array-format assets option and converted it\n   * into the key-value Object format.\n   *\n   * @param {Object|Array} assets\n   * @return {Object}\n   */\n\n  function guardArrayAssets(assets) {\n    if (isArray(assets)) {\n      var res = {};\n      var i = assets.length;\n      var asset;\n      while (i--) {\n        asset = assets[i];\n        var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n        if (!id) {\n          'development' !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n        } else {\n          res[id] = asset;\n        }\n      }\n      return res;\n    }\n    return assets;\n  }\n\n  /**\n   * Merge two option objects into a new one.\n   * Core utility used in both instantiation and inheritance.\n   *\n   * @param {Object} parent\n   * @param {Object} child\n   * @param {Vue} [vm] - if vm is present, indicates this is\n   *                     an instantiation merge.\n   */\n\n  function mergeOptions(parent, child, vm) {\n    guardComponents(child);\n    guardProps(child);\n    var options = {};\n    var key;\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n    for (key in parent) {\n      mergeField(key);\n    }\n    for (key in child) {\n      if (!hasOwn(parent, key)) {\n        mergeField(key);\n      }\n    }\n    function mergeField(key) {\n      var strat = strats[key] || defaultStrat;\n      options[key] = strat(parent[key], child[key], vm, key);\n    }\n    return options;\n  }\n\n  /**\n   * Resolve an asset.\n   * This function is used because child instances need access\n   * to assets defined in its ancestor chain.\n   *\n   * @param {Object} options\n   * @param {String} type\n   * @param {String} id\n   * @return {Object|Function}\n   */\n\n  function resolveAsset(options, type, id) {\n    var assets = options[type];\n    var camelizedId;\n    return assets[id] ||\n    // camelCase ID\n    assets[camelizedId = camelize(id)] ||\n    // Pascal Case ID\n    assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  }\n\n  /**\n   * Assert asset exists\n   */\n\n  function assertAsset(val, type, id) {\n    if (!val) {\n      'development' !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n    }\n  }\n\n  var arrayProto = Array.prototype;\n  var arrayMethods = Object.create(arrayProto)\n\n  /**\n   * Intercept mutating methods and emit events\n   */\n\n  ;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n    // cache original method\n    var original = arrayProto[method];\n    def(arrayMethods, method, function mutator() {\n      // avoid leaking arguments:\n      // http://jsperf.com/closure-with-arguments\n      var i = arguments.length;\n      var args = new Array(i);\n      while (i--) {\n        args[i] = arguments[i];\n      }\n      var result = original.apply(this, args);\n      var ob = this.__ob__;\n      var inserted;\n      switch (method) {\n        case 'push':\n          inserted = args;\n          break;\n        case 'unshift':\n          inserted = args;\n          break;\n        case 'splice':\n          inserted = args.slice(2);\n          break;\n      }\n      if (inserted) ob.observeArray(inserted);\n      // notify change\n      ob.dep.notify();\n      return result;\n    });\n  });\n\n  /**\n   * Swap the element at the given index with a new value\n   * and emits corresponding event.\n   *\n   * @param {Number} index\n   * @param {*} val\n   * @return {*} - replaced element\n   */\n\n  def(arrayProto, '$set', function $set(index, val) {\n    if (index >= this.length) {\n      this.length = Number(index) + 1;\n    }\n    return this.splice(index, 1, val)[0];\n  });\n\n  /**\n   * Convenience method to remove the element at given index.\n   *\n   * @param {Number} index\n   * @param {*} val\n   */\n\n  def(arrayProto, '$remove', function $remove(item) {\n    /* istanbul ignore if */\n    if (!this.length) return;\n    var index = indexOf(this, item);\n    if (index > -1) {\n      return this.splice(index, 1);\n    }\n  });\n\n  var uid$3 = 0;\n\n  /**\n   * A dep is an observable that can have multiple\n   * directives subscribing to it.\n   *\n   * @constructor\n   */\n  function Dep() {\n    this.id = uid$3++;\n    this.subs = [];\n  }\n\n  // the current target watcher being evaluated.\n  // this is globally unique because there could be only one\n  // watcher being evaluated at any time.\n  Dep.target = null;\n\n  /**\n   * Add a directive subscriber.\n   *\n   * @param {Directive} sub\n   */\n\n  Dep.prototype.addSub = function (sub) {\n    this.subs.push(sub);\n  };\n\n  /**\n   * Remove a directive subscriber.\n   *\n   * @param {Directive} sub\n   */\n\n  Dep.prototype.removeSub = function (sub) {\n    this.subs.$remove(sub);\n  };\n\n  /**\n   * Add self as a dependency to the target watcher.\n   */\n\n  Dep.prototype.depend = function () {\n    Dep.target.addDep(this);\n  };\n\n  /**\n   * Notify all subscribers of a new value.\n   */\n\n  Dep.prototype.notify = function () {\n    // stablize the subscriber list first\n    var subs = toArray(this.subs);\n    for (var i = 0, l = subs.length; i < l; i++) {\n      subs[i].update();\n    }\n  };\n\n  var arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n  /**\n   * Observer class that are attached to each observed\n   * object. Once attached, the observer converts target\n   * object's property keys into getter/setters that\n   * collect dependencies and dispatches updates.\n   *\n   * @param {Array|Object} value\n   * @constructor\n   */\n\n  function Observer(value) {\n    this.value = value;\n    this.dep = new Dep();\n    def(value, '__ob__', this);\n    if (isArray(value)) {\n      var augment = hasProto ? protoAugment : copyAugment;\n      augment(value, arrayMethods, arrayKeys);\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n\n  // Instance methods\n\n  /**\n   * Walk through each property and convert them into\n   * getter/setters. This method should only be called when\n   * value type is Object.\n   *\n   * @param {Object} obj\n   */\n\n  Observer.prototype.walk = function (obj) {\n    var keys = Object.keys(obj);\n    for (var i = 0, l = keys.length; i < l; i++) {\n      this.convert(keys[i], obj[keys[i]]);\n    }\n  };\n\n  /**\n   * Observe a list of Array items.\n   *\n   * @param {Array} items\n   */\n\n  Observer.prototype.observeArray = function (items) {\n    for (var i = 0, l = items.length; i < l; i++) {\n      observe(items[i]);\n    }\n  };\n\n  /**\n   * Convert a property into getter/setter so we can emit\n   * the events when the property is accessed/changed.\n   *\n   * @param {String} key\n   * @param {*} val\n   */\n\n  Observer.prototype.convert = function (key, val) {\n    defineReactive(this.value, key, val);\n  };\n\n  /**\n   * Add an owner vm, so that when $set/$delete mutations\n   * happen we can notify owner vms to proxy the keys and\n   * digest the watchers. This is only called when the object\n   * is observed as an instance's root $data.\n   *\n   * @param {Vue} vm\n   */\n\n  Observer.prototype.addVm = function (vm) {\n    (this.vms || (this.vms = [])).push(vm);\n  };\n\n  /**\n   * Remove an owner vm. This is called when the object is\n   * swapped out as an instance's $data object.\n   *\n   * @param {Vue} vm\n   */\n\n  Observer.prototype.removeVm = function (vm) {\n    this.vms.$remove(vm);\n  };\n\n  // helpers\n\n  /**\n   * Augment an target Object or Array by intercepting\n   * the prototype chain using __proto__\n   *\n   * @param {Object|Array} target\n   * @param {Object} proto\n   */\n\n  function protoAugment(target, src) {\n    target.__proto__ = src;\n  }\n\n  /**\n   * Augment an target Object or Array by defining\n   * hidden properties.\n   *\n   * @param {Object|Array} target\n   * @param {Object} proto\n   */\n\n  function copyAugment(target, src, keys) {\n    for (var i = 0, l = keys.length; i < l; i++) {\n      var key = keys[i];\n      def(target, key, src[key]);\n    }\n  }\n\n  /**\n   * Attempt to create an observer instance for a value,\n   * returns the new observer if successfully observed,\n   * or the existing observer if the value already has one.\n   *\n   * @param {*} value\n   * @param {Vue} [vm]\n   * @return {Observer|undefined}\n   * @static\n   */\n\n  function observe(value, vm) {\n    if (!value || typeof value !== 'object') {\n      return;\n    }\n    var ob;\n    if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n      ob = value.__ob__;\n    } else if ((isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n      ob = new Observer(value);\n    }\n    if (ob && vm) {\n      ob.addVm(vm);\n    }\n    return ob;\n  }\n\n  /**\n   * Define a reactive property on an Object.\n   *\n   * @param {Object} obj\n   * @param {String} key\n   * @param {*} val\n   */\n\n  function defineReactive(obj, key, val) {\n    var dep = new Dep();\n\n    // cater for pre-defined getter/setters\n    var getter, setter;\n    if (config.convertAllProperties) {\n      var property = Object.getOwnPropertyDescriptor(obj, key);\n      if (property && property.configurable === false) {\n        return;\n      }\n      getter = property && property.get;\n      setter = property && property.set;\n    }\n\n    var childOb = observe(val);\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      configurable: true,\n      get: function reactiveGetter() {\n        var value = getter ? getter.call(obj) : val;\n        if (Dep.target) {\n          dep.depend();\n          if (childOb) {\n            childOb.dep.depend();\n          }\n          if (isArray(value)) {\n            for (var e, i = 0, l = value.length; i < l; i++) {\n              e = value[i];\n              e && e.__ob__ && e.__ob__.dep.depend();\n            }\n          }\n        }\n        return value;\n      },\n      set: function reactiveSetter(newVal) {\n        var value = getter ? getter.call(obj) : val;\n        if (newVal === value) {\n          return;\n        }\n        if (setter) {\n          setter.call(obj, newVal);\n        } else {\n          val = newVal;\n        }\n        childOb = observe(newVal);\n        dep.notify();\n      }\n    });\n  }\n\n  var util = Object.freeze({\n  \tdefineReactive: defineReactive,\n  \tset: set,\n  \tdel: del,\n  \thasOwn: hasOwn,\n  \tisLiteral: isLiteral,\n  \tisReserved: isReserved,\n  \t_toString: _toString,\n  \ttoNumber: toNumber,\n  \ttoBoolean: toBoolean,\n  \tstripQuotes: stripQuotes,\n  \tcamelize: camelize,\n  \thyphenate: hyphenate,\n  \tclassify: classify,\n  \tbind: bind$1,\n  \ttoArray: toArray,\n  \textend: extend,\n  \tisObject: isObject,\n  \tisPlainObject: isPlainObject,\n  \tdef: def,\n  \tdebounce: _debounce,\n  \tindexOf: indexOf,\n  \tcancellable: cancellable,\n  \tlooseEqual: looseEqual,\n  \tisArray: isArray,\n  \thasProto: hasProto,\n  \tinBrowser: inBrowser,\n  \tisIE9: isIE9,\n  \tisAndroid: isAndroid,\n  \tget transitionProp () { return transitionProp; },\n  \tget transitionEndEvent () { return transitionEndEvent; },\n  \tget animationProp () { return animationProp; },\n  \tget animationEndEvent () { return animationEndEvent; },\n  \tnextTick: nextTick,\n  \tquery: query,\n  \tinDoc: inDoc,\n  \tgetAttr: getAttr,\n  \tgetBindAttr: getBindAttr,\n  \thasBindAttr: hasBindAttr,\n  \tbefore: before,\n  \tafter: after,\n  \tremove: remove,\n  \tprepend: prepend,\n  \treplace: replace,\n  \ton: on$1,\n  \toff: off,\n  \tsetClass: setClass,\n  \taddClass: addClass,\n  \tremoveClass: removeClass,\n  \textractContent: extractContent,\n  \ttrimNode: trimNode,\n  \tisTemplate: isTemplate,\n  \tcreateAnchor: createAnchor,\n  \tfindRef: findRef,\n  \tmapNodeRange: mapNodeRange,\n  \tremoveNodeRange: removeNodeRange,\n  \tmergeOptions: mergeOptions,\n  \tresolveAsset: resolveAsset,\n  \tassertAsset: assertAsset,\n  \tcheckComponentAttr: checkComponentAttr,\n  \tinitProp: initProp,\n  \tassertProp: assertProp,\n  \tcoerceProp: coerceProp,\n  \tcommonTagRE: commonTagRE,\n  \treservedTagRE: reservedTagRE,\n  \tget warn () { return warn; }\n  });\n\n  var uid = 0;\n\n  function initMixin (Vue) {\n\n    /**\n     * The main init sequence. This is called for every\n     * instance, including ones that are created from extended\n     * constructors.\n     *\n     * @param {Object} options - this options object should be\n     *                           the result of merging class\n     *                           options and the options passed\n     *                           in to the constructor.\n     */\n\n    Vue.prototype._init = function (options) {\n\n      options = options || {};\n\n      this.$el = null;\n      this.$parent = options.parent;\n      this.$root = this.$parent ? this.$parent.$root : this;\n      this.$children = [];\n      this.$refs = {}; // child vm references\n      this.$els = {}; // element references\n      this._watchers = []; // all watchers as an array\n      this._directives = []; // all directives\n\n      // a uid\n      this._uid = uid++;\n\n      // a flag to avoid this being observed\n      this._isVue = true;\n\n      // events bookkeeping\n      this._events = {}; // registered callbacks\n      this._eventsCount = {}; // for $broadcast optimization\n\n      // fragment instance properties\n      this._isFragment = false;\n      this._fragment = // @type {DocumentFragment}\n      this._fragmentStart = // @type {Text|Comment}\n      this._fragmentEnd = null; // @type {Text|Comment}\n\n      // lifecycle state\n      this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = false;\n      this._unlinkFn = null;\n\n      // context:\n      // if this is a transcluded component, context\n      // will be the common parent vm of this instance\n      // and its host.\n      this._context = options._context || this.$parent;\n\n      // scope:\n      // if this is inside an inline v-for, the scope\n      // will be the intermediate scope created for this\n      // repeat fragment. this is used for linking props\n      // and container directives.\n      this._scope = options._scope;\n\n      // fragment:\n      // if this instance is compiled inside a Fragment, it\n      // needs to reigster itself as a child of that fragment\n      // for attach/detach to work properly.\n      this._frag = options._frag;\n      if (this._frag) {\n        this._frag.children.push(this);\n      }\n\n      // push self into parent / transclusion host\n      if (this.$parent) {\n        this.$parent.$children.push(this);\n      }\n\n      // merge options.\n      options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n      // set ref\n      this._updateRef();\n\n      // initialize data as empty object.\n      // it will be filled up in _initScope().\n      this._data = {};\n\n      // call init hook\n      this._callHook('init');\n\n      // initialize data observation and scope inheritance.\n      this._initState();\n\n      // setup event system and option events.\n      this._initEvents();\n\n      // call created hook\n      this._callHook('created');\n\n      // if `el` option is passed, start compilation.\n      if (options.el) {\n        this.$mount(options.el);\n      }\n    };\n  }\n\n  var pathCache = new Cache(1000);\n\n  // actions\n  var APPEND = 0;\n  var PUSH = 1;\n  var INC_SUB_PATH_DEPTH = 2;\n  var PUSH_SUB_PATH = 3;\n\n  // states\n  var BEFORE_PATH = 0;\n  var IN_PATH = 1;\n  var BEFORE_IDENT = 2;\n  var IN_IDENT = 3;\n  var IN_SUB_PATH = 4;\n  var IN_SINGLE_QUOTE = 5;\n  var IN_DOUBLE_QUOTE = 6;\n  var AFTER_PATH = 7;\n  var ERROR = 8;\n\n  var pathStateMachine = [];\n\n  pathStateMachine[BEFORE_PATH] = {\n    'ws': [BEFORE_PATH],\n    'ident': [IN_IDENT, APPEND],\n    '[': [IN_SUB_PATH],\n    'eof': [AFTER_PATH]\n  };\n\n  pathStateMachine[IN_PATH] = {\n    'ws': [IN_PATH],\n    '.': [BEFORE_IDENT],\n    '[': [IN_SUB_PATH],\n    'eof': [AFTER_PATH]\n  };\n\n  pathStateMachine[BEFORE_IDENT] = {\n    'ws': [BEFORE_IDENT],\n    'ident': [IN_IDENT, APPEND]\n  };\n\n  pathStateMachine[IN_IDENT] = {\n    'ident': [IN_IDENT, APPEND],\n    '0': [IN_IDENT, APPEND],\n    'number': [IN_IDENT, APPEND],\n    'ws': [IN_PATH, PUSH],\n    '.': [BEFORE_IDENT, PUSH],\n    '[': [IN_SUB_PATH, PUSH],\n    'eof': [AFTER_PATH, PUSH]\n  };\n\n  pathStateMachine[IN_SUB_PATH] = {\n    \"'\": [IN_SINGLE_QUOTE, APPEND],\n    '\"': [IN_DOUBLE_QUOTE, APPEND],\n    '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n    ']': [IN_PATH, PUSH_SUB_PATH],\n    'eof': ERROR,\n    'else': [IN_SUB_PATH, APPEND]\n  };\n\n  pathStateMachine[IN_SINGLE_QUOTE] = {\n    \"'\": [IN_SUB_PATH, APPEND],\n    'eof': ERROR,\n    'else': [IN_SINGLE_QUOTE, APPEND]\n  };\n\n  pathStateMachine[IN_DOUBLE_QUOTE] = {\n    '\"': [IN_SUB_PATH, APPEND],\n    'eof': ERROR,\n    'else': [IN_DOUBLE_QUOTE, APPEND]\n  };\n\n  /**\n   * Determine the type of a character in a keypath.\n   *\n   * @param {Char} ch\n   * @return {String} type\n   */\n\n  function getPathCharType(ch) {\n    if (ch === undefined) {\n      return 'eof';\n    }\n\n    var code = ch.charCodeAt(0);\n\n    switch (code) {\n      case 0x5B: // [\n      case 0x5D: // ]\n      case 0x2E: // .\n      case 0x22: // \"\n      case 0x27: // '\n      case 0x30:\n        // 0\n        return ch;\n\n      case 0x5F: // _\n      case 0x24:\n        // $\n        return 'ident';\n\n      case 0x20: // Space\n      case 0x09: // Tab\n      case 0x0A: // Newline\n      case 0x0D: // Return\n      case 0xA0: // No-break space\n      case 0xFEFF: // Byte Order Mark\n      case 0x2028: // Line Separator\n      case 0x2029:\n        // Paragraph Separator\n        return 'ws';\n    }\n\n    // a-z, A-Z\n    if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n      return 'ident';\n    }\n\n    // 1-9\n    if (code >= 0x31 && code <= 0x39) {\n      return 'number';\n    }\n\n    return 'else';\n  }\n\n  /**\n   * Format a subPath, return its plain form if it is\n   * a literal string or number. Otherwise prepend the\n   * dynamic indicator (*).\n   *\n   * @param {String} path\n   * @return {String}\n   */\n\n  function formatSubPath(path) {\n    var trimmed = path.trim();\n    // invalid leading 0\n    if (path.charAt(0) === '0' && isNaN(path)) {\n      return false;\n    }\n    return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n  }\n\n  /**\n   * Parse a string path into an array of segments\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */\n\n  function parse(path) {\n    var keys = [];\n    var index = -1;\n    var mode = BEFORE_PATH;\n    var subPathDepth = 0;\n    var c, newChar, key, type, transition, action, typeMap;\n\n    var actions = [];\n\n    actions[PUSH] = function () {\n      if (key !== undefined) {\n        keys.push(key);\n        key = undefined;\n      }\n    };\n\n    actions[APPEND] = function () {\n      if (key === undefined) {\n        key = newChar;\n      } else {\n        key += newChar;\n      }\n    };\n\n    actions[INC_SUB_PATH_DEPTH] = function () {\n      actions[APPEND]();\n      subPathDepth++;\n    };\n\n    actions[PUSH_SUB_PATH] = function () {\n      if (subPathDepth > 0) {\n        subPathDepth--;\n        mode = IN_SUB_PATH;\n        actions[APPEND]();\n      } else {\n        subPathDepth = 0;\n        key = formatSubPath(key);\n        if (key === false) {\n          return false;\n        } else {\n          actions[PUSH]();\n        }\n      }\n    };\n\n    function maybeUnescapeQuote() {\n      var nextChar = path[index + 1];\n      if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n        index++;\n        newChar = '\\\\' + nextChar;\n        actions[APPEND]();\n        return true;\n      }\n    }\n\n    while (mode != null) {\n      index++;\n      c = path[index];\n\n      if (c === '\\\\' && maybeUnescapeQuote()) {\n        continue;\n      }\n\n      type = getPathCharType(c);\n      typeMap = pathStateMachine[mode];\n      transition = typeMap[type] || typeMap['else'] || ERROR;\n\n      if (transition === ERROR) {\n        return; // parse error\n      }\n\n      mode = transition[0];\n      action = actions[transition[1]];\n      if (action) {\n        newChar = transition[2];\n        newChar = newChar === undefined ? c : newChar;\n        if (action() === false) {\n          return;\n        }\n      }\n\n      if (mode === AFTER_PATH) {\n        keys.raw = path;\n        return keys;\n      }\n    }\n  }\n\n  /**\n   * External parse that check for a cache hit first\n   *\n   * @param {String} path\n   * @return {Array|undefined}\n   */\n\n  function parsePath(path) {\n    var hit = pathCache.get(path);\n    if (!hit) {\n      hit = parse(path);\n      if (hit) {\n        pathCache.put(path, hit);\n      }\n    }\n    return hit;\n  }\n\n  /**\n   * Get from an object from a path string\n   *\n   * @param {Object} obj\n   * @param {String} path\n   */\n\n  function getPath(obj, path) {\n    return parseExpression(path).get(obj);\n  }\n\n  /**\n   * Warn against setting non-existent root path on a vm.\n   */\n\n  var warnNonExistent;\n  if ('development' !== 'production') {\n    warnNonExistent = function (path) {\n      warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n    };\n  }\n\n  /**\n   * Set on an object from a path\n   *\n   * @param {Object} obj\n   * @param {String | Array} path\n   * @param {*} val\n   */\n\n  function setPath(obj, path, val) {\n    var original = obj;\n    if (typeof path === 'string') {\n      path = parse(path);\n    }\n    if (!path || !isObject(obj)) {\n      return false;\n    }\n    var last, key;\n    for (var i = 0, l = path.length; i < l; i++) {\n      last = obj;\n      key = path[i];\n      if (key.charAt(0) === '*') {\n        key = parseExpression(key.slice(1)).get.call(original, original);\n      }\n      if (i < l - 1) {\n        obj = obj[key];\n        if (!isObject(obj)) {\n          obj = {};\n          if ('development' !== 'production' && last._isVue) {\n            warnNonExistent(path);\n          }\n          set(last, key, obj);\n        }\n      } else {\n        if (isArray(obj)) {\n          obj.$set(key, val);\n        } else if (key in obj) {\n          obj[key] = val;\n        } else {\n          if ('development' !== 'production' && obj._isVue) {\n            warnNonExistent(path);\n          }\n          set(obj, key, val);\n        }\n      }\n    }\n    return true;\n  }\n\n  var path = Object.freeze({\n    parsePath: parsePath,\n    getPath: getPath,\n    setPath: setPath\n  });\n\n  var expressionCache = new Cache(1000);\n\n  var allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n  var allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n  // keywords that don't make sense inside expressions\n  var improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'proctected,static,interface,private,public';\n  var improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n  var wsRE = /\\s/g;\n  var newlineRE = /\\n/g;\n  var saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\")|new |typeof |void /g;\n  var restoreRE = /\"(\\d+)\"/g;\n  var pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n  var identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n  var booleanLiteralRE = /^(?:true|false)$/;\n\n  /**\n   * Save / Rewrite / Restore\n   *\n   * When rewriting paths found in an expression, it is\n   * possible for the same letter sequences to be found in\n   * strings and Object literal property keys. Therefore we\n   * remove and store these parts in a temporary array, and\n   * restore them after the path rewrite.\n   */\n\n  var saved = [];\n\n  /**\n   * Save replacer\n   *\n   * The save regex can match two possible cases:\n   * 1. An opening object literal\n   * 2. A string\n   * If matched as a plain string, we need to escape its\n   * newlines, since the string needs to be preserved when\n   * generating the function body.\n   *\n   * @param {String} str\n   * @param {String} isString - str if matched as a string\n   * @return {String} - placeholder with index\n   */\n\n  function save(str, isString) {\n    var i = saved.length;\n    saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n    return '\"' + i + '\"';\n  }\n\n  /**\n   * Path rewrite replacer\n   *\n   * @param {String} raw\n   * @return {String}\n   */\n\n  function rewrite(raw) {\n    var c = raw.charAt(0);\n    var path = raw.slice(1);\n    if (allowedKeywordsRE.test(path)) {\n      return raw;\n    } else {\n      path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n      return c + 'scope.' + path;\n    }\n  }\n\n  /**\n   * Restore replacer\n   *\n   * @param {String} str\n   * @param {String} i - matched save index\n   * @return {String}\n   */\n\n  function restore(str, i) {\n    return saved[i];\n  }\n\n  /**\n   * Rewrite an expression, prefixing all path accessors with\n   * `scope.` and generate getter/setter functions.\n   *\n   * @param {String} exp\n   * @return {Function}\n   */\n\n  function compileGetter(exp) {\n    if (improperKeywordsRE.test(exp)) {\n      'development' !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n    }\n    // reset state\n    saved.length = 0;\n    // save strings and object literal keys\n    var body = exp.replace(saveRE, save).replace(wsRE, '');\n    // rewrite all paths\n    // pad 1 space here becaue the regex matches 1 extra char\n    body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n    return makeGetterFn(body);\n  }\n\n  /**\n   * Build a getter function. Requires eval.\n   *\n   * We isolate the try/catch so it doesn't affect the\n   * optimization of the parse function when it is not called.\n   *\n   * @param {String} body\n   * @return {Function|undefined}\n   */\n\n  function makeGetterFn(body) {\n    try {\n      return new Function('scope', 'return ' + body + ';');\n    } catch (e) {\n      'development' !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n    }\n  }\n\n  /**\n   * Compile a setter function for the expression.\n   *\n   * @param {String} exp\n   * @return {Function|undefined}\n   */\n\n  function compileSetter(exp) {\n    var path = parsePath(exp);\n    if (path) {\n      return function (scope, val) {\n        setPath(scope, path, val);\n      };\n    } else {\n      'development' !== 'production' && warn('Invalid setter expression: ' + exp);\n    }\n  }\n\n  /**\n   * Parse an expression into re-written getter/setters.\n   *\n   * @param {String} exp\n   * @param {Boolean} needSet\n   * @return {Function}\n   */\n\n  function parseExpression(exp, needSet) {\n    exp = exp.trim();\n    // try cache\n    var hit = expressionCache.get(exp);\n    if (hit) {\n      if (needSet && !hit.set) {\n        hit.set = compileSetter(hit.exp);\n      }\n      return hit;\n    }\n    var res = { exp: exp };\n    res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n    // optimized super simple getter\n    ? makeGetterFn('scope.' + exp)\n    // dynamic getter\n    : compileGetter(exp);\n    if (needSet) {\n      res.set = compileSetter(exp);\n    }\n    expressionCache.put(exp, res);\n    return res;\n  }\n\n  /**\n   * Check if an expression is a simple path.\n   *\n   * @param {String} exp\n   * @return {Boolean}\n   */\n\n  function isSimplePath(exp) {\n    return pathTestRE.test(exp) &&\n    // don't treat true/false as paths\n    !booleanLiteralRE.test(exp) &&\n    // Math constants e.g. Math.PI, Math.E etc.\n    exp.slice(0, 5) !== 'Math.';\n  }\n\n  var expression = Object.freeze({\n    parseExpression: parseExpression,\n    isSimplePath: isSimplePath\n  });\n\n  // we have two separate queues: one for directive updates\n  // and one for user watcher registered via $watch().\n  // we want to guarantee directive updates to be called\n  // before user watchers so that when user watchers are\n  // triggered, the DOM would have already been in updated\n  // state.\n  var queue = [];\n  var userQueue = [];\n  var has = {};\n  var circular = {};\n  var waiting = false;\n  var internalQueueDepleted = false;\n\n  /**\n   * Reset the batcher's state.\n   */\n\n  function resetBatcherState() {\n    queue = [];\n    userQueue = [];\n    has = {};\n    circular = {};\n    waiting = internalQueueDepleted = false;\n  }\n\n  /**\n   * Flush both queues and run the watchers.\n   */\n\n  function flushBatcherQueue() {\n    runBatcherQueue(queue);\n    internalQueueDepleted = true;\n    runBatcherQueue(userQueue);\n    // dev tool hook\n    /* istanbul ignore if */\n    if ('development' !== 'production') {\n      if (inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n        window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('flush');\n      }\n    }\n    resetBatcherState();\n  }\n\n  /**\n   * Run the watchers in a single queue.\n   *\n   * @param {Array} queue\n   */\n\n  function runBatcherQueue(queue) {\n    // do not cache length because more watchers might be pushed\n    // as we run existing watchers\n    for (var i = 0; i < queue.length; i++) {\n      var watcher = queue[i];\n      var id = watcher.id;\n      has[id] = null;\n      watcher.run();\n      // in dev build, check and stop circular updates.\n      if ('development' !== 'production' && has[id] != null) {\n        circular[id] = (circular[id] || 0) + 1;\n        if (circular[id] > config._maxUpdateCount) {\n          queue.splice(has[id], 1);\n          warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n        }\n      }\n    }\n  }\n\n  /**\n   * Push a watcher into the watcher queue.\n   * Jobs with duplicate IDs will be skipped unless it's\n   * pushed when the queue is being flushed.\n   *\n   * @param {Watcher} watcher\n   *   properties:\n   *   - {Number} id\n   *   - {Function} run\n   */\n\n  function pushWatcher(watcher) {\n    var id = watcher.id;\n    if (has[id] == null) {\n      // if an internal watcher is pushed, but the internal\n      // queue is already depleted, we run it immediately.\n      if (internalQueueDepleted && !watcher.user) {\n        watcher.run();\n        return;\n      }\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n\n  var uid$2 = 0;\n\n  /**\n   * A watcher parses an expression, collects dependencies,\n   * and fires callback when the expression value changes.\n   * This is used for both the $watch() api and directives.\n   *\n   * @param {Vue} vm\n   * @param {String} expression\n   * @param {Function} cb\n   * @param {Object} options\n   *                 - {Array} filters\n   *                 - {Boolean} twoWay\n   *                 - {Boolean} deep\n   *                 - {Boolean} user\n   *                 - {Boolean} sync\n   *                 - {Boolean} lazy\n   *                 - {Function} [preProcess]\n   *                 - {Function} [postProcess]\n   * @constructor\n   */\n  function Watcher(vm, expOrFn, cb, options) {\n    // mix in options\n    if (options) {\n      extend(this, options);\n    }\n    var isFn = typeof expOrFn === 'function';\n    this.vm = vm;\n    vm._watchers.push(this);\n    this.expression = isFn ? expOrFn.toString() : expOrFn;\n    this.cb = cb;\n    this.id = ++uid$2; // uid for batching\n    this.active = true;\n    this.dirty = this.lazy; // for lazy watchers\n    this.deps = Object.create(null);\n    this.newDeps = null;\n    this.prevError = null; // for async error stacks\n    // parse expression for getter/setter\n    if (isFn) {\n      this.getter = expOrFn;\n      this.setter = undefined;\n    } else {\n      var res = parseExpression(expOrFn, this.twoWay);\n      this.getter = res.get;\n      this.setter = res.set;\n    }\n    this.value = this.lazy ? undefined : this.get();\n    // state for avoiding false triggers for deep and Array\n    // watchers during vm._digest()\n    this.queued = this.shallow = false;\n  }\n\n  /**\n   * Add a dependency to this directive.\n   *\n   * @param {Dep} dep\n   */\n\n  Watcher.prototype.addDep = function (dep) {\n    var id = dep.id;\n    if (!this.newDeps[id]) {\n      this.newDeps[id] = dep;\n      if (!this.deps[id]) {\n        this.deps[id] = dep;\n        dep.addSub(this);\n      }\n    }\n  };\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n\n  Watcher.prototype.get = function () {\n    this.beforeGet();\n    var scope = this.scope || this.vm;\n    var value;\n    try {\n      value = this.getter.call(scope, scope);\n    } catch (e) {\n      if ('development' !== 'production' && config.warnExpressionErrors) {\n        warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n      }\n    }\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    if (this.preProcess) {\n      value = this.preProcess(value);\n    }\n    if (this.filters) {\n      value = scope._applyFilters(value, null, this.filters, false);\n    }\n    if (this.postProcess) {\n      value = this.postProcess(value);\n    }\n    this.afterGet();\n    return value;\n  };\n\n  /**\n   * Set the corresponding value with the setter.\n   *\n   * @param {*} value\n   */\n\n  Watcher.prototype.set = function (value) {\n    var scope = this.scope || this.vm;\n    if (this.filters) {\n      value = scope._applyFilters(value, this.value, this.filters, true);\n    }\n    try {\n      this.setter.call(scope, scope, value);\n    } catch (e) {\n      if ('development' !== 'production' && config.warnExpressionErrors) {\n        warn('Error when evaluating setter \"' + this.expression + '\"', e);\n      }\n    }\n    // two-way sync for v-for alias\n    var forContext = scope.$forContext;\n    if (forContext && forContext.alias === this.expression) {\n      if (forContext.filters) {\n        'development' !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n        return;\n      }\n      forContext._withLock(function () {\n        if (scope.$key) {\n          // original is an object\n          forContext.rawValue[scope.$key] = value;\n        } else {\n          forContext.rawValue.$set(scope.$index, value);\n        }\n      });\n    }\n  };\n\n  /**\n   * Prepare for dependency collection.\n   */\n\n  Watcher.prototype.beforeGet = function () {\n    Dep.target = this;\n    this.newDeps = Object.create(null);\n  };\n\n  /**\n   * Clean up for dependency collection.\n   */\n\n  Watcher.prototype.afterGet = function () {\n    Dep.target = null;\n    var ids = Object.keys(this.deps);\n    var i = ids.length;\n    while (i--) {\n      var id = ids[i];\n      if (!this.newDeps[id]) {\n        this.deps[id].removeSub(this);\n      }\n    }\n    this.deps = this.newDeps;\n  };\n\n  /**\n   * Subscriber interface.\n   * Will be called when a dependency changes.\n   *\n   * @param {Boolean} shallow\n   */\n\n  Watcher.prototype.update = function (shallow) {\n    if (this.lazy) {\n      this.dirty = true;\n    } else if (this.sync || !config.async) {\n      this.run();\n    } else {\n      // if queued, only overwrite shallow with non-shallow,\n      // but not the other way around.\n      this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n      this.queued = true;\n      // record before-push error stack in debug mode\n      /* istanbul ignore if */\n      if ('development' !== 'production' && config.debug) {\n        this.prevError = new Error('[vue] async stack trace');\n      }\n      pushWatcher(this);\n    }\n  };\n\n  /**\n   * Batcher job interface.\n   * Will be called by the batcher.\n   */\n\n  Watcher.prototype.run = function () {\n    if (this.active) {\n      var value = this.get();\n      if (value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated; but only do so if this is a\n      // non-shallow update (caused by a vm digest).\n      (isObject(value) || this.deep) && !this.shallow) {\n        // set new value\n        var oldValue = this.value;\n        this.value = value;\n        // in debug + async mode, when a watcher callbacks\n        // throws, we also throw the saved before-push error\n        // so the full cross-tick stack trace is available.\n        var prevError = this.prevError;\n        /* istanbul ignore if */\n        if ('development' !== 'production' && config.debug && prevError) {\n          this.prevError = null;\n          try {\n            this.cb.call(this.vm, value, oldValue);\n          } catch (e) {\n            nextTick(function () {\n              throw prevError;\n            }, 0);\n            throw e;\n          }\n        } else {\n          this.cb.call(this.vm, value, oldValue);\n        }\n      }\n      this.queued = this.shallow = false;\n    }\n  };\n\n  /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */\n\n  Watcher.prototype.evaluate = function () {\n    // avoid overwriting another watcher that is being\n    // collected.\n    var current = Dep.target;\n    this.value = this.get();\n    this.dirty = false;\n    Dep.target = current;\n  };\n\n  /**\n   * Depend on all deps collected by this watcher.\n   */\n\n  Watcher.prototype.depend = function () {\n    var depIds = Object.keys(this.deps);\n    var i = depIds.length;\n    while (i--) {\n      this.deps[depIds[i]].depend();\n    }\n  };\n\n  /**\n   * Remove self from all dependencies' subcriber list.\n   */\n\n  Watcher.prototype.teardown = function () {\n    if (this.active) {\n      // remove self from vm's watcher list\n      // we can skip this if the vm if being destroyed\n      // which can improve teardown performance.\n      if (!this.vm._isBeingDestroyed) {\n        this.vm._watchers.$remove(this);\n      }\n      var depIds = Object.keys(this.deps);\n      var i = depIds.length;\n      while (i--) {\n        this.deps[depIds[i]].removeSub(this);\n      }\n      this.active = false;\n      this.vm = this.cb = this.value = null;\n    }\n  };\n\n  /**\n   * Recrusively traverse an object to evoke all converted\n   * getters, so that every nested property inside the object\n   * is collected as a \"deep\" dependency.\n   *\n   * @param {*} val\n   */\n\n  function traverse(val) {\n    var i, keys;\n    if (isArray(val)) {\n      i = val.length;\n      while (i--) traverse(val[i]);\n    } else if (isObject(val)) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]]);\n    }\n  }\n\n  var cloak = {\n    bind: function bind() {\n      var el = this.el;\n      this.vm.$once('pre-hook:compiled', function () {\n        el.removeAttribute('v-cloak');\n      });\n    }\n  };\n\n  var ref = {\n    bind: function bind() {\n      'development' !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n    }\n  };\n\n  var ON = 700;\n  var MODEL = 800;\n  var BIND = 850;\n  var TRANSITION = 1100;\n  var EL = 1500;\n  var COMPONENT = 1500;\n  var PARTIAL = 1750;\n  var SLOT = 1750;\n  var FOR = 2000;\n  var IF = 2000;\n\n  var el = {\n\n    priority: EL,\n\n    bind: function bind() {\n      /* istanbul ignore if */\n      if (!this.arg) {\n        return;\n      }\n      var id = this.id = camelize(this.arg);\n      var refs = (this._scope || this.vm).$els;\n      if (hasOwn(refs, id)) {\n        refs[id] = this.el;\n      } else {\n        defineReactive(refs, id, this.el);\n      }\n    },\n\n    unbind: function unbind() {\n      var refs = (this._scope || this.vm).$els;\n      if (refs[this.id] === this.el) {\n        refs[this.id] = null;\n      }\n    }\n  };\n\n  var prefixes = ['-webkit-', '-moz-', '-ms-'];\n  var camelPrefixes = ['Webkit', 'Moz', 'ms'];\n  var importantRE = /!important;?$/;\n  var propCache = Object.create(null);\n\n  var testEl = null;\n\n  var style = {\n\n    deep: true,\n\n    update: function update(value) {\n      if (typeof value === 'string') {\n        this.el.style.cssText = value;\n      } else if (isArray(value)) {\n        this.handleObject(value.reduce(extend, {}));\n      } else {\n        this.handleObject(value || {});\n      }\n    },\n\n    handleObject: function handleObject(value) {\n      // cache object styles so that only changed props\n      // are actually updated.\n      var cache = this.cache || (this.cache = {});\n      var name, val;\n      for (name in cache) {\n        if (!(name in value)) {\n          this.handleSingle(name, null);\n          delete cache[name];\n        }\n      }\n      for (name in value) {\n        val = value[name];\n        if (val !== cache[name]) {\n          cache[name] = val;\n          this.handleSingle(name, val);\n        }\n      }\n    },\n\n    handleSingle: function handleSingle(prop, value) {\n      prop = normalize(prop);\n      if (!prop) return; // unsupported prop\n      // cast possible numbers/booleans into strings\n      if (value != null) value += '';\n      if (value) {\n        var isImportant = importantRE.test(value) ? 'important' : '';\n        if (isImportant) {\n          value = value.replace(importantRE, '').trim();\n        }\n        this.el.style.setProperty(prop, value, isImportant);\n      } else {\n        this.el.style.removeProperty(prop);\n      }\n    }\n\n  };\n\n  /**\n   * Normalize a CSS property name.\n   * - cache result\n   * - auto prefix\n   * - camelCase -> dash-case\n   *\n   * @param {String} prop\n   * @return {String}\n   */\n\n  function normalize(prop) {\n    if (propCache[prop]) {\n      return propCache[prop];\n    }\n    var res = prefix(prop);\n    propCache[prop] = propCache[res] = res;\n    return res;\n  }\n\n  /**\n   * Auto detect the appropriate prefix for a CSS property.\n   * https://gist.github.com/paulirish/523692\n   *\n   * @param {String} prop\n   * @return {String}\n   */\n\n  function prefix(prop) {\n    prop = hyphenate(prop);\n    var camel = camelize(prop);\n    var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n    if (!testEl) {\n      testEl = document.createElement('div');\n    }\n    if (camel in testEl.style) {\n      return prop;\n    }\n    var i = prefixes.length;\n    var prefixed;\n    while (i--) {\n      prefixed = camelPrefixes[i] + upper;\n      if (prefixed in testEl.style) {\n        return prefixes[i] + prop;\n      }\n    }\n  }\n\n  // xlink\n  var xlinkNS = 'http://www.w3.org/1999/xlink';\n  var xlinkRE = /^xlink:/;\n\n  // check for attributes that prohibit interpolations\n  var disallowedInterpAttrRE = /^v-|^:|^@|^(is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\n  // these attributes should also set their corresponding properties\n  // because they only affect the initial state of the element\n  var attrWithPropsRE = /^(value|checked|selected|muted)$/;\n\n  // these attributes should set a hidden property for\n  // binding v-model to object values\n  var modelProps = {\n    value: '_value',\n    'true-value': '_trueValue',\n    'false-value': '_falseValue'\n  };\n\n  var bind = {\n\n    priority: BIND,\n\n    bind: function bind() {\n      var attr = this.arg;\n      var tag = this.el.tagName;\n      // should be deep watch on object mode\n      if (!attr) {\n        this.deep = true;\n      }\n      // handle interpolation bindings\n      var descriptor = this.descriptor;\n      var tokens = descriptor.interp;\n      if (tokens) {\n        // handle interpolations with one-time tokens\n        if (descriptor.hasOneTime) {\n          this.expression = tokensToExp(tokens, this._scope || this.vm);\n        }\n\n        // only allow binding on native attributes\n        if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n          'development' !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n          this.el.removeAttribute(attr);\n          this.invalid = true;\n        }\n\n        /* istanbul ignore if */\n        if ('development' !== 'production') {\n          var raw = attr + '=\"' + descriptor.raw + '\": ';\n          // warn src\n          if (attr === 'src') {\n            warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n          }\n\n          // warn style\n          if (attr === 'style') {\n            warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n          }\n        }\n      }\n    },\n\n    update: function update(value) {\n      if (this.invalid) {\n        return;\n      }\n      var attr = this.arg;\n      if (this.arg) {\n        this.handleSingle(attr, value);\n      } else {\n        this.handleObject(value || {});\n      }\n    },\n\n    // share object handler with v-bind:class\n    handleObject: style.handleObject,\n\n    handleSingle: function handleSingle(attr, value) {\n      var el = this.el;\n      var interp = this.descriptor.interp;\n      if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n        el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n        ? '' : value : value;\n      }\n      // set model props\n      var modelProp = modelProps[attr];\n      if (!interp && modelProp) {\n        el[modelProp] = value;\n        // update v-model if present\n        var model = el.__v_model;\n        if (model) {\n          model.listener();\n        }\n      }\n      // do not set value attribute for textarea\n      if (attr === 'value' && el.tagName === 'TEXTAREA') {\n        el.removeAttribute(attr);\n        return;\n      }\n      // update attribute\n      if (value != null && value !== false) {\n        if (attr === 'class') {\n          // handle edge case #1960:\n          // class interpolation should not overwrite Vue transition class\n          if (el.__v_trans) {\n            value += ' ' + el.__v_trans.id + '-transition';\n          }\n          setClass(el, value);\n        } else if (xlinkRE.test(attr)) {\n          el.setAttributeNS(xlinkNS, attr, value);\n        } else {\n          el.setAttribute(attr, value);\n        }\n      } else {\n        el.removeAttribute(attr);\n      }\n    }\n  };\n\n  // keyCode aliases\n  var keyCodes = {\n    esc: 27,\n    tab: 9,\n    enter: 13,\n    space: 32,\n    'delete': 46,\n    up: 38,\n    left: 37,\n    right: 39,\n    down: 40\n  };\n\n  function keyFilter(handler, keys) {\n    var codes = keys.map(function (key) {\n      var charCode = key.charCodeAt(0);\n      if (charCode > 47 && charCode < 58) {\n        return parseInt(key, 10);\n      }\n      if (key.length === 1) {\n        charCode = key.toUpperCase().charCodeAt(0);\n        if (charCode > 64 && charCode < 91) {\n          return charCode;\n        }\n      }\n      return keyCodes[key];\n    });\n    return function keyHandler(e) {\n      if (codes.indexOf(e.keyCode) > -1) {\n        return handler.call(this, e);\n      }\n    };\n  }\n\n  function stopFilter(handler) {\n    return function stopHandler(e) {\n      e.stopPropagation();\n      return handler.call(this, e);\n    };\n  }\n\n  function preventFilter(handler) {\n    return function preventHandler(e) {\n      e.preventDefault();\n      return handler.call(this, e);\n    };\n  }\n\n  var on = {\n\n    acceptStatement: true,\n    priority: ON,\n\n    bind: function bind() {\n      // deal with iframes\n      if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n        var self = this;\n        this.iframeBind = function () {\n          on$1(self.el.contentWindow, self.arg, self.handler);\n        };\n        this.on('load', this.iframeBind);\n      }\n    },\n\n    update: function update(handler) {\n      // stub a noop for v-on with no value,\n      // e.g. @mousedown.prevent\n      if (!this.descriptor.raw) {\n        handler = function () {};\n      }\n\n      if (typeof handler !== 'function') {\n        'development' !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n        return;\n      }\n\n      // apply modifiers\n      if (this.modifiers.stop) {\n        handler = stopFilter(handler);\n      }\n      if (this.modifiers.prevent) {\n        handler = preventFilter(handler);\n      }\n      // key filter\n      var keys = Object.keys(this.modifiers).filter(function (key) {\n        return key !== 'stop' && key !== 'prevent';\n      });\n      if (keys.length) {\n        handler = keyFilter(handler, keys);\n      }\n\n      this.reset();\n      this.handler = handler;\n\n      if (this.iframeBind) {\n        this.iframeBind();\n      } else {\n        on$1(this.el, this.arg, this.handler);\n      }\n    },\n\n    reset: function reset() {\n      var el = this.iframeBind ? this.el.contentWindow : this.el;\n      if (this.handler) {\n        off(el, this.arg, this.handler);\n      }\n    },\n\n    unbind: function unbind() {\n      this.reset();\n    }\n  };\n\n  var checkbox = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      this.getValue = function () {\n        return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n      };\n\n      function getBooleanValue() {\n        var val = el.checked;\n        if (val && el.hasOwnProperty('_trueValue')) {\n          return el._trueValue;\n        }\n        if (!val && el.hasOwnProperty('_falseValue')) {\n          return el._falseValue;\n        }\n        return val;\n      }\n\n      this.listener = function () {\n        var model = self._watcher.value;\n        if (isArray(model)) {\n          var val = self.getValue();\n          if (el.checked) {\n            if (indexOf(model, val) < 0) {\n              model.push(val);\n            }\n          } else {\n            model.$remove(val);\n          }\n        } else {\n          self.set(getBooleanValue());\n        }\n      };\n\n      this.on('change', this.listener);\n      if (el.hasAttribute('checked')) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      var el = this.el;\n      if (isArray(value)) {\n        el.checked = indexOf(value, this.getValue()) > -1;\n      } else {\n        if (el.hasOwnProperty('_trueValue')) {\n          el.checked = looseEqual(value, el._trueValue);\n        } else {\n          el.checked = !!value;\n        }\n      }\n    }\n  };\n\n  var select = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      // method to force update DOM using latest value.\n      this.forceUpdate = function () {\n        if (self._watcher) {\n          self.update(self._watcher.get());\n        }\n      };\n\n      // check if this is a multiple select\n      var multiple = this.multiple = el.hasAttribute('multiple');\n\n      // attach listener\n      this.listener = function () {\n        var value = getValue(el, multiple);\n        value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n        self.set(value);\n      };\n      this.on('change', this.listener);\n\n      // if has initial value, set afterBind\n      var initValue = getValue(el, multiple, true);\n      if (multiple && initValue.length || !multiple && initValue !== null) {\n        this.afterBind = this.listener;\n      }\n\n      // All major browsers except Firefox resets\n      // selectedIndex with value -1 to 0 when the element\n      // is appended to a new parent, therefore we have to\n      // force a DOM update whenever that happens...\n      this.vm.$on('hook:attached', this.forceUpdate);\n    },\n\n    update: function update(value) {\n      var el = this.el;\n      el.selectedIndex = -1;\n      var multi = this.multiple && isArray(value);\n      var options = el.options;\n      var i = options.length;\n      var op, val;\n      while (i--) {\n        op = options[i];\n        val = op.hasOwnProperty('_value') ? op._value : op.value;\n        /* eslint-disable eqeqeq */\n        op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n        /* eslint-enable eqeqeq */\n      }\n    },\n\n    unbind: function unbind() {\n      /* istanbul ignore next */\n      this.vm.$off('hook:attached', this.forceUpdate);\n    }\n  };\n\n  /**\n   * Get select value\n   *\n   * @param {SelectElement} el\n   * @param {Boolean} multi\n   * @param {Boolean} init\n   * @return {Array|*}\n   */\n\n  function getValue(el, multi, init) {\n    var res = multi ? [] : null;\n    var op, val, selected;\n    for (var i = 0, l = el.options.length; i < l; i++) {\n      op = el.options[i];\n      selected = init ? op.hasAttribute('selected') : op.selected;\n      if (selected) {\n        val = op.hasOwnProperty('_value') ? op._value : op.value;\n        if (multi) {\n          res.push(val);\n        } else {\n          return val;\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Native Array.indexOf uses strict equal, but in this\n   * case we need to match string/numbers with custom equal.\n   *\n   * @param {Array} arr\n   * @param {*} val\n   */\n\n  function indexOf$1(arr, val) {\n    var i = arr.length;\n    while (i--) {\n      if (looseEqual(arr[i], val)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  var radio = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n\n      this.getValue = function () {\n        // value overwrite via v-bind:value\n        if (el.hasOwnProperty('_value')) {\n          return el._value;\n        }\n        var val = el.value;\n        if (self.params.number) {\n          val = toNumber(val);\n        }\n        return val;\n      };\n\n      this.listener = function () {\n        self.set(self.getValue());\n      };\n      this.on('change', this.listener);\n\n      if (el.hasAttribute('checked')) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      this.el.checked = looseEqual(value, this.getValue());\n    }\n  };\n\n  var text$2 = {\n\n    bind: function bind() {\n      var self = this;\n      var el = this.el;\n      var isRange = el.type === 'range';\n      var lazy = this.params.lazy;\n      var number = this.params.number;\n      var debounce = this.params.debounce;\n\n      // handle composition events.\n      //   http://blog.evanyou.me/2014/01/03/composition-event/\n      // skip this for Android because it handles composition\n      // events quite differently. Android doesn't trigger\n      // composition events for language input methods e.g.\n      // Chinese, but instead triggers them for spelling\n      // suggestions... (see Discussion/#162)\n      var composing = false;\n      if (!isAndroid && !isRange) {\n        this.on('compositionstart', function () {\n          composing = true;\n        });\n        this.on('compositionend', function () {\n          composing = false;\n          // in IE11 the \"compositionend\" event fires AFTER\n          // the \"input\" event, so the input handler is blocked\n          // at the end... have to call it here.\n          //\n          // #1327: in lazy mode this is unecessary.\n          if (!lazy) {\n            self.listener();\n          }\n        });\n      }\n\n      // prevent messing with the input when user is typing,\n      // and force update on blur.\n      this.focused = false;\n      if (!isRange && !lazy) {\n        this.on('focus', function () {\n          self.focused = true;\n        });\n        this.on('blur', function () {\n          self.focused = false;\n          // do not sync value after fragment removal (#2017)\n          if (!self._frag || self._frag.inserted) {\n            self.rawListener();\n          }\n        });\n      }\n\n      // Now attach the main listener\n      this.listener = this.rawListener = function () {\n        if (composing || !self._bound) {\n          return;\n        }\n        var val = number || isRange ? toNumber(el.value) : el.value;\n        self.set(val);\n        // force update on next tick to avoid lock & same value\n        // also only update when user is not typing\n        nextTick(function () {\n          if (self._bound && !self.focused) {\n            self.update(self._watcher.value);\n          }\n        });\n      };\n\n      // apply debounce\n      if (debounce) {\n        this.listener = _debounce(this.listener, debounce);\n      }\n\n      // Support jQuery events, since jQuery.trigger() doesn't\n      // trigger native events in some cases and some plugins\n      // rely on $.trigger()\n      //\n      // We want to make sure if a listener is attached using\n      // jQuery, it is also removed with jQuery, that's why\n      // we do the check for each directive instance and\n      // store that check result on itself. This also allows\n      // easier test coverage control by unsetting the global\n      // jQuery variable in tests.\n      this.hasjQuery = typeof jQuery === 'function';\n      if (this.hasjQuery) {\n        jQuery(el).on('change', this.listener);\n        if (!lazy) {\n          jQuery(el).on('input', this.listener);\n        }\n      } else {\n        this.on('change', this.listener);\n        if (!lazy) {\n          this.on('input', this.listener);\n        }\n      }\n\n      // IE9 doesn't fire input event on backspace/del/cut\n      if (!lazy && isIE9) {\n        this.on('cut', function () {\n          nextTick(self.listener);\n        });\n        this.on('keyup', function (e) {\n          if (e.keyCode === 46 || e.keyCode === 8) {\n            self.listener();\n          }\n        });\n      }\n\n      // set initial value if present\n      if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n        this.afterBind = this.listener;\n      }\n    },\n\n    update: function update(value) {\n      this.el.value = _toString(value);\n    },\n\n    unbind: function unbind() {\n      var el = this.el;\n      if (this.hasjQuery) {\n        jQuery(el).off('change', this.listener);\n        jQuery(el).off('input', this.listener);\n      }\n    }\n  };\n\n  var handlers = {\n    text: text$2,\n    radio: radio,\n    select: select,\n    checkbox: checkbox\n  };\n\n  var model = {\n\n    priority: MODEL,\n    twoWay: true,\n    handlers: handlers,\n    params: ['lazy', 'number', 'debounce'],\n\n    /**\n     * Possible elements:\n     *   <select>\n     *   <textarea>\n     *   <input type=\"*\">\n     *     - text\n     *     - checkbox\n     *     - radio\n     *     - number\n     */\n\n    bind: function bind() {\n      // friendly warning...\n      this.checkFilters();\n      if (this.hasRead && !this.hasWrite) {\n        'development' !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n      }\n      var el = this.el;\n      var tag = el.tagName;\n      var handler;\n      if (tag === 'INPUT') {\n        handler = handlers[el.type] || handlers.text;\n      } else if (tag === 'SELECT') {\n        handler = handlers.select;\n      } else if (tag === 'TEXTAREA') {\n        handler = handlers.text;\n      } else {\n        'development' !== 'production' && warn('v-model does not support element type: ' + tag);\n        return;\n      }\n      el.__v_model = this;\n      handler.bind.call(this);\n      this.update = handler.update;\n      this._unbind = handler.unbind;\n    },\n\n    /**\n     * Check read/write filter stats.\n     */\n\n    checkFilters: function checkFilters() {\n      var filters = this.filters;\n      if (!filters) return;\n      var i = filters.length;\n      while (i--) {\n        var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n        if (typeof filter === 'function' || filter.read) {\n          this.hasRead = true;\n        }\n        if (filter.write) {\n          this.hasWrite = true;\n        }\n      }\n    },\n\n    unbind: function unbind() {\n      this.el.__v_model = null;\n      this._unbind && this._unbind();\n    }\n  };\n\n  var show = {\n\n    bind: function bind() {\n      // check else block\n      var next = this.el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        this.elseEl = next;\n      }\n    },\n\n    update: function update(value) {\n      this.apply(this.el, value);\n      if (this.elseEl) {\n        this.apply(this.elseEl, !value);\n      }\n    },\n\n    apply: function apply(el, value) {\n      if (inDoc(el)) {\n        applyTransition(el, value ? 1 : -1, toggle, this.vm);\n      } else {\n        toggle();\n      }\n      function toggle() {\n        el.style.display = value ? '' : 'none';\n      }\n    }\n  };\n\n  var templateCache = new Cache(1000);\n  var idSelectorCache = new Cache(1000);\n\n  var map = {\n    efault: [0, '', ''],\n    legend: [1, '<fieldset>', '</fieldset>'],\n    tr: [2, '<table><tbody>', '</tbody></table>'],\n    col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n  };\n\n  map.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\n  map.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\n  map.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\n  map.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n  /**\n   * Check if a node is a supported template node with a\n   * DocumentFragment content.\n   *\n   * @param {Node} node\n   * @return {Boolean}\n   */\n\n  function isRealTemplate(node) {\n    return isTemplate(node) && node.content instanceof DocumentFragment;\n  }\n\n  var tagRE$1 = /<([\\w:]+)/;\n  var entityRE = /&#?\\w+?;/;\n\n  /**\n   * Convert a string template to a DocumentFragment.\n   * Determines correct wrapping by tag types. Wrapping\n   * strategy found in jQuery & component/domify.\n   *\n   * @param {String} templateString\n   * @param {Boolean} raw\n   * @return {DocumentFragment}\n   */\n\n  function stringToFragment(templateString, raw) {\n    // try a cache hit first\n    var hit = templateCache.get(templateString);\n    if (hit) {\n      return hit;\n    }\n\n    var frag = document.createDocumentFragment();\n    var tagMatch = templateString.match(tagRE$1);\n    var entityMatch = entityRE.test(templateString);\n\n    if (!tagMatch && !entityMatch) {\n      // text only, return a single text node.\n      frag.appendChild(document.createTextNode(templateString));\n    } else {\n\n      var tag = tagMatch && tagMatch[1];\n      var wrap = map[tag] || map.efault;\n      var depth = wrap[0];\n      var prefix = wrap[1];\n      var suffix = wrap[2];\n      var node = document.createElement('div');\n\n      if (!raw) {\n        templateString = templateString.trim();\n      }\n      node.innerHTML = prefix + templateString + suffix;\n      while (depth--) {\n        node = node.lastChild;\n      }\n\n      var child;\n      /* eslint-disable no-cond-assign */\n      while (child = node.firstChild) {\n        /* eslint-enable no-cond-assign */\n        frag.appendChild(child);\n      }\n    }\n\n    templateCache.put(templateString, frag);\n    return frag;\n  }\n\n  /**\n   * Convert a template node to a DocumentFragment.\n   *\n   * @param {Node} node\n   * @return {DocumentFragment}\n   */\n\n  function nodeToFragment(node) {\n    // if its a template tag and the browser supports it,\n    // its content is already a document fragment.\n    if (isRealTemplate(node)) {\n      trimNode(node.content);\n      return node.content;\n    }\n    // script template\n    if (node.tagName === 'SCRIPT') {\n      return stringToFragment(node.textContent);\n    }\n    // normal node, clone it to avoid mutating the original\n    var clonedNode = cloneNode(node);\n    var frag = document.createDocumentFragment();\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = clonedNode.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n    trimNode(frag);\n    return frag;\n  }\n\n  // Test for the presence of the Safari template cloning bug\n  // https://bugs.webkit.org/showug.cgi?id=137755\n  var hasBrokenTemplate = (function () {\n    /* istanbul ignore else */\n    if (inBrowser) {\n      var a = document.createElement('div');\n      a.innerHTML = '<template>1</template>';\n      return !a.cloneNode(true).firstChild.innerHTML;\n    } else {\n      return false;\n    }\n  })();\n\n  // Test for IE10/11 textarea placeholder clone bug\n  var hasTextareaCloneBug = (function () {\n    /* istanbul ignore else */\n    if (inBrowser) {\n      var t = document.createElement('textarea');\n      t.placeholder = 't';\n      return t.cloneNode(true).value === 't';\n    } else {\n      return false;\n    }\n  })();\n\n  /**\n   * 1. Deal with Safari cloning nested <template> bug by\n   *    manually cloning all template instances.\n   * 2. Deal with IE10/11 textarea placeholder bug by setting\n   *    the correct value after cloning.\n   *\n   * @param {Element|DocumentFragment} node\n   * @return {Element|DocumentFragment}\n   */\n\n  function cloneNode(node) {\n    if (!node.querySelectorAll) {\n      return node.cloneNode();\n    }\n    var res = node.cloneNode(true);\n    var i, original, cloned;\n    /* istanbul ignore if */\n    if (hasBrokenTemplate) {\n      var tempClone = res;\n      if (isRealTemplate(node)) {\n        node = node.content;\n        tempClone = res.content;\n      }\n      original = node.querySelectorAll('template');\n      if (original.length) {\n        cloned = tempClone.querySelectorAll('template');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n        }\n      }\n    }\n    /* istanbul ignore if */\n    if (hasTextareaCloneBug) {\n      if (node.tagName === 'TEXTAREA') {\n        res.value = node.value;\n      } else {\n        original = node.querySelectorAll('textarea');\n        if (original.length) {\n          cloned = res.querySelectorAll('textarea');\n          i = cloned.length;\n          while (i--) {\n            cloned[i].value = original[i].value;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Process the template option and normalizes it into a\n   * a DocumentFragment that can be used as a partial or a\n   * instance template.\n   *\n   * @param {*} template\n   *        Possible values include:\n   *        - DocumentFragment object\n   *        - Node object of type Template\n   *        - id selector: '#some-template-id'\n   *        - template string: '<div><span>{{msg}}</span></div>'\n   * @param {Boolean} shouldClone\n   * @param {Boolean} raw\n   *        inline HTML interpolation. Do not check for id\n   *        selector and keep whitespace in the string.\n   * @return {DocumentFragment|undefined}\n   */\n\n  function parseTemplate(template, shouldClone, raw) {\n    var node, frag;\n\n    // if the template is already a document fragment,\n    // do nothing\n    if (template instanceof DocumentFragment) {\n      trimNode(template);\n      return shouldClone ? cloneNode(template) : template;\n    }\n\n    if (typeof template === 'string') {\n      // id selector\n      if (!raw && template.charAt(0) === '#') {\n        // id selector can be cached too\n        frag = idSelectorCache.get(template);\n        if (!frag) {\n          node = document.getElementById(template.slice(1));\n          if (node) {\n            frag = nodeToFragment(node);\n            // save selector to cache\n            idSelectorCache.put(template, frag);\n          }\n        }\n      } else {\n        // normal string template\n        frag = stringToFragment(template, raw);\n      }\n    } else if (template.nodeType) {\n      // a direct node\n      frag = nodeToFragment(template);\n    }\n\n    return frag && shouldClone ? cloneNode(frag) : frag;\n  }\n\n  var template = Object.freeze({\n    cloneNode: cloneNode,\n    parseTemplate: parseTemplate\n  });\n\n  /**\n   * Abstraction for a partially-compiled fragment.\n   * Can optionally compile content with a child scope.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   * @param {DocumentFragment} frag\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   */\n  function Fragment(linker, vm, frag, host, scope, parentFrag) {\n    this.children = [];\n    this.childFrags = [];\n    this.vm = vm;\n    this.scope = scope;\n    this.inserted = false;\n    this.parentFrag = parentFrag;\n    if (parentFrag) {\n      parentFrag.childFrags.push(this);\n    }\n    this.unlink = linker(vm, frag, host, scope, this);\n    var single = this.single = frag.childNodes.length === 1 &&\n    // do not go single mode if the only node is an anchor\n    !frag.childNodes[0].__vue_anchor;\n    if (single) {\n      this.node = frag.childNodes[0];\n      this.before = singleBefore;\n      this.remove = singleRemove;\n    } else {\n      this.node = createAnchor('fragment-start');\n      this.end = createAnchor('fragment-end');\n      this.frag = frag;\n      prepend(this.node, frag);\n      frag.appendChild(this.end);\n      this.before = multiBefore;\n      this.remove = multiRemove;\n    }\n    this.node.__vfrag__ = this;\n  }\n\n  /**\n   * Call attach/detach for all components contained within\n   * this fragment. Also do so recursively for all child\n   * fragments.\n   *\n   * @param {Function} hook\n   */\n\n  Fragment.prototype.callHook = function (hook) {\n    var i, l;\n    for (i = 0, l = this.childFrags.length; i < l; i++) {\n      this.childFrags[i].callHook(hook);\n    }\n    for (i = 0, l = this.children.length; i < l; i++) {\n      hook(this.children[i]);\n    }\n  };\n\n  /**\n   * Insert fragment before target, single node version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */\n\n  function singleBefore(target, withTransition) {\n    this.inserted = true;\n    var method = withTransition !== false ? beforeWithTransition : before;\n    method(this.node, target, this.vm);\n    if (inDoc(this.node)) {\n      this.callHook(attach);\n    }\n  }\n\n  /**\n   * Remove fragment, single node version\n   */\n\n  function singleRemove() {\n    this.inserted = false;\n    var shouldCallRemove = inDoc(this.node);\n    var self = this;\n    this.beforeRemove();\n    removeWithTransition(this.node, this.vm, function () {\n      if (shouldCallRemove) {\n        self.callHook(detach);\n      }\n      self.destroy();\n    });\n  }\n\n  /**\n   * Insert fragment before target, multi-nodes version\n   *\n   * @param {Node} target\n   * @param {Boolean} withTransition\n   */\n\n  function multiBefore(target, withTransition) {\n    this.inserted = true;\n    var vm = this.vm;\n    var method = withTransition !== false ? beforeWithTransition : before;\n    mapNodeRange(this.node, this.end, function (node) {\n      method(node, target, vm);\n    });\n    if (inDoc(this.node)) {\n      this.callHook(attach);\n    }\n  }\n\n  /**\n   * Remove fragment, multi-nodes version\n   */\n\n  function multiRemove() {\n    this.inserted = false;\n    var self = this;\n    var shouldCallRemove = inDoc(this.node);\n    this.beforeRemove();\n    removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n      if (shouldCallRemove) {\n        self.callHook(detach);\n      }\n      self.destroy();\n    });\n  }\n\n  /**\n   * Prepare the fragment for removal.\n   */\n\n  Fragment.prototype.beforeRemove = function () {\n    var i, l;\n    for (i = 0, l = this.childFrags.length; i < l; i++) {\n      // call the same method recursively on child\n      // fragments, depth-first\n      this.childFrags[i].beforeRemove(false);\n    }\n    for (i = 0, l = this.children.length; i < l; i++) {\n      // Call destroy for all contained instances,\n      // with remove:false and defer:true.\n      // Defer is necessary because we need to\n      // keep the children to call detach hooks\n      // on them.\n      this.children[i].$destroy(false, true);\n    }\n    var dirs = this.unlink.dirs;\n    for (i = 0, l = dirs.length; i < l; i++) {\n      // disable the watchers on all the directives\n      // so that the rendered content stays the same\n      // during removal.\n      dirs[i]._watcher && dirs[i]._watcher.teardown();\n    }\n  };\n\n  /**\n   * Destroy the fragment.\n   */\n\n  Fragment.prototype.destroy = function () {\n    if (this.parentFrag) {\n      this.parentFrag.childFrags.$remove(this);\n    }\n    this.unlink();\n  };\n\n  /**\n   * Call attach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */\n\n  function attach(child) {\n    if (!child._isAttached) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Call detach hook for a Vue instance.\n   *\n   * @param {Vue} child\n   */\n\n  function detach(child) {\n    if (child._isAttached) {\n      child._callHook('detached');\n    }\n  }\n\n  var linkerCache = new Cache(5000);\n\n  /**\n   * A factory that can be used to create instances of a\n   * fragment. Caches the compiled linker if possible.\n   *\n   * @param {Vue} vm\n   * @param {Element|String} el\n   */\n  function FragmentFactory(vm, el) {\n    this.vm = vm;\n    var template;\n    var isString = typeof el === 'string';\n    if (isString || isTemplate(el)) {\n      template = parseTemplate(el, true);\n    } else {\n      template = document.createDocumentFragment();\n      template.appendChild(el);\n    }\n    this.template = template;\n    // linker can be cached, but only for components\n    var linker;\n    var cid = vm.constructor.cid;\n    if (cid > 0) {\n      var cacheId = cid + (isString ? el : el.outerHTML);\n      linker = linkerCache.get(cacheId);\n      if (!linker) {\n        linker = compile(template, vm.$options, true);\n        linkerCache.put(cacheId, linker);\n      }\n    } else {\n      linker = compile(template, vm.$options, true);\n    }\n    this.linker = linker;\n  }\n\n  /**\n   * Create a fragment instance with given host and scope.\n   *\n   * @param {Vue} host\n   * @param {Object} scope\n   * @param {Fragment} parentFrag\n   */\n\n  FragmentFactory.prototype.create = function (host, scope, parentFrag) {\n    var frag = cloneNode(this.template);\n    return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n  };\n\n  var vIf = {\n\n    priority: IF,\n\n    bind: function bind() {\n      var el = this.el;\n      if (!el.__vue__) {\n        // check else block\n        var next = el.nextElementSibling;\n        if (next && getAttr(next, 'v-else') !== null) {\n          remove(next);\n          this.elseFactory = new FragmentFactory(this.vm, next);\n        }\n        // check main block\n        this.anchor = createAnchor('v-if');\n        replace(el, this.anchor);\n        this.factory = new FragmentFactory(this.vm, el);\n      } else {\n        'development' !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n        this.invalid = true;\n      }\n    },\n\n    update: function update(value) {\n      if (this.invalid) return;\n      if (value) {\n        if (!this.frag) {\n          this.insert();\n        }\n      } else {\n        this.remove();\n      }\n    },\n\n    insert: function insert() {\n      if (this.elseFrag) {\n        this.elseFrag.remove();\n        this.elseFrag = null;\n      }\n      this.frag = this.factory.create(this._host, this._scope, this._frag);\n      this.frag.before(this.anchor);\n    },\n\n    remove: function remove() {\n      if (this.frag) {\n        this.frag.remove();\n        this.frag = null;\n      }\n      if (this.elseFactory && !this.elseFrag) {\n        this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n        this.elseFrag.before(this.anchor);\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.frag) {\n        this.frag.destroy();\n      }\n    }\n  };\n\n  var uid$1 = 0;\n\n  var vFor = {\n\n    priority: FOR,\n\n    params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n    bind: function bind() {\n      // support \"item in items\" syntax\n      var inMatch = this.expression.match(/(.*) in (.*)/);\n      if (inMatch) {\n        var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n        if (itMatch) {\n          this.iterator = itMatch[1].trim();\n          this.alias = itMatch[2].trim();\n        } else {\n          this.alias = inMatch[1].trim();\n        }\n        this.expression = inMatch[2];\n      }\n\n      if (!this.alias) {\n        'development' !== 'production' && warn('Alias is required in v-for.');\n        return;\n      }\n\n      // uid as a cache identifier\n      this.id = '__v-for__' + ++uid$1;\n\n      // check if this is an option list,\n      // so that we know if we need to update the <select>'s\n      // v-model when the option list has changed.\n      // because v-model has a lower priority than v-for,\n      // the v-model is not bound here yet, so we have to\n      // retrive it in the actual updateModel() function.\n      var tag = this.el.tagName;\n      this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n      // setup anchor nodes\n      this.start = createAnchor('v-for-start');\n      this.end = createAnchor('v-for-end');\n      replace(this.el, this.end);\n      before(this.start, this.end);\n\n      // cache\n      this.cache = Object.create(null);\n\n      // fragment factory\n      this.factory = new FragmentFactory(this.vm, this.el);\n    },\n\n    update: function update(data) {\n      this.diff(data);\n      this.updateRef();\n      this.updateModel();\n    },\n\n    /**\n     * Diff, based on new data and old data, determine the\n     * minimum amount of DOM manipulations needed to make the\n     * DOM reflect the new data Array.\n     *\n     * The algorithm diffs the new data Array by storing a\n     * hidden reference to an owner vm instance on previously\n     * seen data. This allows us to achieve O(n) which is\n     * better than a levenshtein distance based algorithm,\n     * which is O(m * n).\n     *\n     * @param {Array} data\n     */\n\n    diff: function diff(data) {\n      // check if the Array was converted from an Object\n      var item = data[0];\n      var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n      var trackByKey = this.params.trackBy;\n      var oldFrags = this.frags;\n      var frags = this.frags = new Array(data.length);\n      var alias = this.alias;\n      var iterator = this.iterator;\n      var start = this.start;\n      var end = this.end;\n      var inDocument = inDoc(start);\n      var init = !oldFrags;\n      var i, l, frag, key, value, primitive;\n\n      // First pass, go through the new Array and fill up\n      // the new frags array. If a piece of data has a cached\n      // instance for it, we reuse it. Otherwise build a new\n      // instance.\n      for (i = 0, l = data.length; i < l; i++) {\n        item = data[i];\n        key = convertedFromObject ? item.$key : null;\n        value = convertedFromObject ? item.$value : item;\n        primitive = !isObject(value);\n        frag = !init && this.getCachedFrag(value, i, key);\n        if (frag) {\n          // reusable fragment\n          frag.reused = true;\n          // update $index\n          frag.scope.$index = i;\n          // update $key\n          if (key) {\n            frag.scope.$key = key;\n          }\n          // update iterator\n          if (iterator) {\n            frag.scope[iterator] = key !== null ? key : i;\n          }\n          // update data for track-by, object repeat &\n          // primitive values.\n          if (trackByKey || convertedFromObject || primitive) {\n            frag.scope[alias] = value;\n          }\n        } else {\n          // new isntance\n          frag = this.create(value, alias, i, key);\n          frag.fresh = !init;\n        }\n        frags[i] = frag;\n        if (init) {\n          frag.before(end);\n        }\n      }\n\n      // we're done for the initial render.\n      if (init) {\n        return;\n      }\n\n      // Second pass, go through the old fragments and\n      // destroy those who are not reused (and remove them\n      // from cache)\n      var removalIndex = 0;\n      var totalRemoved = oldFrags.length - frags.length;\n      for (i = 0, l = oldFrags.length; i < l; i++) {\n        frag = oldFrags[i];\n        if (!frag.reused) {\n          this.deleteCachedFrag(frag);\n          this.remove(frag, removalIndex++, totalRemoved, inDocument);\n        }\n      }\n\n      // Final pass, move/insert new fragments into the\n      // right place.\n      var targetPrev, prevEl, currentPrev;\n      var insertionIndex = 0;\n      for (i = 0, l = frags.length; i < l; i++) {\n        frag = frags[i];\n        // this is the frag that we should be after\n        targetPrev = frags[i - 1];\n        prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n        if (frag.reused && !frag.staggerCb) {\n          currentPrev = findPrevFrag(frag, start, this.id);\n          if (currentPrev !== targetPrev && (!currentPrev ||\n          // optimization for moving a single item.\n          // thanks to suggestions by @livoras in #1807\n          findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n            this.move(frag, prevEl);\n          }\n        } else {\n          // new instance, or still in stagger.\n          // insert with updated stagger index.\n          this.insert(frag, insertionIndex++, prevEl, inDocument);\n        }\n        frag.reused = frag.fresh = false;\n      }\n    },\n\n    /**\n     * Create a new fragment instance.\n     *\n     * @param {*} value\n     * @param {String} alias\n     * @param {Number} index\n     * @param {String} [key]\n     * @return {Fragment}\n     */\n\n    create: function create(value, alias, index, key) {\n      var host = this._host;\n      // create iteration scope\n      var parentScope = this._scope || this.vm;\n      var scope = Object.create(parentScope);\n      // ref holder for the scope\n      scope.$refs = Object.create(parentScope.$refs);\n      scope.$els = Object.create(parentScope.$els);\n      // make sure point $parent to parent scope\n      scope.$parent = parentScope;\n      // for two-way binding on alias\n      scope.$forContext = this;\n      // define scope properties\n      defineReactive(scope, alias, value);\n      defineReactive(scope, '$index', index);\n      if (key) {\n        defineReactive(scope, '$key', key);\n      } else if (scope.$key) {\n        // avoid accidental fallback\n        def(scope, '$key', null);\n      }\n      if (this.iterator) {\n        defineReactive(scope, this.iterator, key !== null ? key : index);\n      }\n      var frag = this.factory.create(host, scope, this._frag);\n      frag.forId = this.id;\n      this.cacheFrag(value, frag, index, key);\n      return frag;\n    },\n\n    /**\n     * Update the v-ref on owner vm.\n     */\n\n    updateRef: function updateRef() {\n      var ref = this.descriptor.ref;\n      if (!ref) return;\n      var hash = (this._scope || this.vm).$refs;\n      var refs;\n      if (!this.fromObject) {\n        refs = this.frags.map(findVmFromFrag);\n      } else {\n        refs = {};\n        this.frags.forEach(function (frag) {\n          refs[frag.scope.$key] = findVmFromFrag(frag);\n        });\n      }\n      hash[ref] = refs;\n    },\n\n    /**\n     * For option lists, update the containing v-model on\n     * parent <select>.\n     */\n\n    updateModel: function updateModel() {\n      if (this.isOption) {\n        var parent = this.start.parentNode;\n        var model = parent && parent.__v_model;\n        if (model) {\n          model.forceUpdate();\n        }\n      }\n    },\n\n    /**\n     * Insert a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Node} prevEl\n     * @param {Boolean} inDocument\n     */\n\n    insert: function insert(frag, index, prevEl, inDocument) {\n      if (frag.staggerCb) {\n        frag.staggerCb.cancel();\n        frag.staggerCb = null;\n      }\n      var staggerAmount = this.getStagger(frag, index, null, 'enter');\n      if (inDocument && staggerAmount) {\n        // create an anchor and insert it synchronously,\n        // so that we can resolve the correct order without\n        // worrying about some elements not inserted yet\n        var anchor = frag.staggerAnchor;\n        if (!anchor) {\n          anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n          anchor.__vfrag__ = frag;\n        }\n        after(anchor, prevEl);\n        var op = frag.staggerCb = cancellable(function () {\n          frag.staggerCb = null;\n          frag.before(anchor);\n          remove(anchor);\n        });\n        setTimeout(op, staggerAmount);\n      } else {\n        frag.before(prevEl.nextSibling);\n      }\n    },\n\n    /**\n     * Remove a fragment. Handles staggering.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {Boolean} inDocument\n     */\n\n    remove: function remove(frag, index, total, inDocument) {\n      if (frag.staggerCb) {\n        frag.staggerCb.cancel();\n        frag.staggerCb = null;\n        // it's not possible for the same frag to be removed\n        // twice, so if we have a pending stagger callback,\n        // it means this frag is queued for enter but removed\n        // before its transition started. Since it is already\n        // destroyed, we can just leave it in detached state.\n        return;\n      }\n      var staggerAmount = this.getStagger(frag, index, total, 'leave');\n      if (inDocument && staggerAmount) {\n        var op = frag.staggerCb = cancellable(function () {\n          frag.staggerCb = null;\n          frag.remove();\n        });\n        setTimeout(op, staggerAmount);\n      } else {\n        frag.remove();\n      }\n    },\n\n    /**\n     * Move a fragment to a new position.\n     * Force no transition.\n     *\n     * @param {Fragment} frag\n     * @param {Node} prevEl\n     */\n\n    move: function move(frag, prevEl) {\n      frag.before(prevEl.nextSibling, false);\n    },\n\n    /**\n     * Cache a fragment using track-by or the object key.\n     *\n     * @param {*} value\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {String} [key]\n     */\n\n    cacheFrag: function cacheFrag(value, frag, index, key) {\n      var trackByKey = this.params.trackBy;\n      var cache = this.cache;\n      var primitive = !isObject(value);\n      var id;\n      if (key || trackByKey || primitive) {\n        id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n        if (!cache[id]) {\n          cache[id] = frag;\n        } else if (trackByKey !== '$index') {\n          'development' !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        id = this.id;\n        if (hasOwn(value, id)) {\n          if (value[id] === null) {\n            value[id] = frag;\n          } else {\n            'development' !== 'production' && this.warnDuplicate(value);\n          }\n        } else {\n          def(value, id, frag);\n        }\n      }\n      frag.raw = value;\n    },\n\n    /**\n     * Get a cached fragment from the value/index/key\n     *\n     * @param {*} value\n     * @param {Number} index\n     * @param {String} key\n     * @return {Fragment}\n     */\n\n    getCachedFrag: function getCachedFrag(value, index, key) {\n      var trackByKey = this.params.trackBy;\n      var primitive = !isObject(value);\n      var frag;\n      if (key || trackByKey || primitive) {\n        var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n        frag = this.cache[id];\n      } else {\n        frag = value[this.id];\n      }\n      if (frag && (frag.reused || frag.fresh)) {\n        'development' !== 'production' && this.warnDuplicate(value);\n      }\n      return frag;\n    },\n\n    /**\n     * Delete a fragment from cache.\n     *\n     * @param {Fragment} frag\n     */\n\n    deleteCachedFrag: function deleteCachedFrag(frag) {\n      var value = frag.raw;\n      var trackByKey = this.params.trackBy;\n      var scope = frag.scope;\n      var index = scope.$index;\n      // fix #948: avoid accidentally fall through to\n      // a parent repeater which happens to have $key.\n      var key = hasOwn(scope, '$key') && scope.$key;\n      var primitive = !isObject(value);\n      if (trackByKey || key || primitive) {\n        var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n        this.cache[id] = null;\n      } else {\n        value[this.id] = null;\n        frag.raw = null;\n      }\n    },\n\n    /**\n     * Get the stagger amount for an insertion/removal.\n     *\n     * @param {Fragment} frag\n     * @param {Number} index\n     * @param {Number} total\n     * @param {String} type\n     */\n\n    getStagger: function getStagger(frag, index, total, type) {\n      type = type + 'Stagger';\n      var trans = frag.node.__v_trans;\n      var hooks = trans && trans.hooks;\n      var hook = hooks && (hooks[type] || hooks.stagger);\n      return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n    },\n\n    /**\n     * Pre-process the value before piping it through the\n     * filters. This is passed to and called by the watcher.\n     */\n\n    _preProcess: function _preProcess(value) {\n      // regardless of type, store the un-filtered raw value.\n      this.rawValue = value;\n      return value;\n    },\n\n    /**\n     * Post-process the value after it has been piped through\n     * the filters. This is passed to and called by the watcher.\n     *\n     * It is necessary for this to be called during the\n     * wathcer's dependency collection phase because we want\n     * the v-for to update when the source Object is mutated.\n     */\n\n    _postProcess: function _postProcess(value) {\n      if (isArray(value)) {\n        return value;\n      } else if (isPlainObject(value)) {\n        // convert plain object to array.\n        var keys = Object.keys(value);\n        var i = keys.length;\n        var res = new Array(i);\n        var key;\n        while (i--) {\n          key = keys[i];\n          res[i] = {\n            $key: key,\n            $value: value[key]\n          };\n        }\n        return res;\n      } else {\n        if (typeof value === 'number') {\n          value = range(value);\n        }\n        return value || [];\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.descriptor.ref) {\n        (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n      }\n      if (this.frags) {\n        var i = this.frags.length;\n        var frag;\n        while (i--) {\n          frag = this.frags[i];\n          this.deleteCachedFrag(frag);\n          frag.destroy();\n        }\n      }\n    }\n  };\n\n  /**\n   * Helper to find the previous element that is a fragment\n   * anchor. This is necessary because a destroyed frag's\n   * element could still be lingering in the DOM before its\n   * leaving transition finishes, but its inserted flag\n   * should have been set to false so we can skip them.\n   *\n   * If this is a block repeat, we want to make sure we only\n   * return frag that is bound to this v-for. (see #929)\n   *\n   * @param {Fragment} frag\n   * @param {Comment|Text} anchor\n   * @param {String} id\n   * @return {Fragment}\n   */\n\n  function findPrevFrag(frag, anchor, id) {\n    var el = frag.node.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__vfrag__;\n    while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n      el = el.previousSibling;\n      /* istanbul ignore if */\n      if (!el) return;\n      frag = el.__vfrag__;\n    }\n    return frag;\n  }\n\n  /**\n   * Find a vm from a fragment.\n   *\n   * @param {Fragment} frag\n   * @return {Vue|undefined}\n   */\n\n  function findVmFromFrag(frag) {\n    var node = frag.node;\n    // handle multi-node frag\n    if (frag.end) {\n      while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n        node = node.nextSibling;\n      }\n    }\n    return node.__vue__;\n  }\n\n  /**\n   * Create a range array from given number.\n   *\n   * @param {Number} n\n   * @return {Array}\n   */\n\n  function range(n) {\n    var i = -1;\n    var ret = new Array(n);\n    while (++i < n) {\n      ret[i] = i;\n    }\n    return ret;\n  }\n\n  if ('development' !== 'production') {\n    vFor.warnDuplicate = function (value) {\n      warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n    };\n  }\n\n  var html = {\n\n    bind: function bind() {\n      // a comment node means this is a binding for\n      // {{{ inline unescaped html }}}\n      if (this.el.nodeType === 8) {\n        // hold nodes\n        this.nodes = [];\n        // replace the placeholder with proper anchor\n        this.anchor = createAnchor('v-html');\n        replace(this.el, this.anchor);\n      }\n    },\n\n    update: function update(value) {\n      value = _toString(value);\n      if (this.nodes) {\n        this.swap(value);\n      } else {\n        this.el.innerHTML = value;\n      }\n    },\n\n    swap: function swap(value) {\n      // remove old nodes\n      var i = this.nodes.length;\n      while (i--) {\n        remove(this.nodes[i]);\n      }\n      // convert new value to a fragment\n      // do not attempt to retrieve from id selector\n      var frag = parseTemplate(value, true, true);\n      // save a reference to these nodes so we can remove later\n      this.nodes = toArray(frag.childNodes);\n      before(frag, this.anchor);\n    }\n  };\n\n  var text = {\n\n    bind: function bind() {\n      this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n    },\n\n    update: function update(value) {\n      this.el[this.attr] = _toString(value);\n    }\n  };\n\n  // must export plain object\n  var publicDirectives = {\n    text: text,\n    html: html,\n    'for': vFor,\n    'if': vIf,\n    show: show,\n    model: model,\n    on: on,\n    bind: bind,\n    el: el,\n    ref: ref,\n    cloak: cloak\n  };\n\n  var queue$1 = [];\n  var queued = false;\n\n  /**\n   * Push a job into the queue.\n   *\n   * @param {Function} job\n   */\n\n  function pushJob(job) {\n    queue$1.push(job);\n    if (!queued) {\n      queued = true;\n      nextTick(flush);\n    }\n  }\n\n  /**\n   * Flush the queue, and do one forced reflow before\n   * triggering transitions.\n   */\n\n  function flush() {\n    // Force layout\n    var f = document.documentElement.offsetHeight;\n    for (var i = 0; i < queue$1.length; i++) {\n      queue$1[i]();\n    }\n    queue$1 = [];\n    queued = false;\n    // dummy return, so js linters don't complain about\n    // unused variable f\n    return f;\n  }\n\n  var TYPE_TRANSITION = 'transition';\n  var TYPE_ANIMATION = 'animation';\n  var transDurationProp = transitionProp + 'Duration';\n  var animDurationProp = animationProp + 'Duration';\n\n  /**\n   * A Transition object that encapsulates the state and logic\n   * of the transition.\n   *\n   * @param {Element} el\n   * @param {String} id\n   * @param {Object} hooks\n   * @param {Vue} vm\n   */\n  function Transition(el, id, hooks, vm) {\n    this.id = id;\n    this.el = el;\n    this.enterClass = hooks && hooks.enterClass || id + '-enter';\n    this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n    this.hooks = hooks;\n    this.vm = vm;\n    // async state\n    this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n    this.justEntered = false;\n    this.entered = this.left = false;\n    this.typeCache = {};\n    // check css transition type\n    this.type = hooks && hooks.type;\n    /* istanbul ignore if */\n    if ('development' !== 'production') {\n      if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n        warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n      }\n    }\n    // bind\n    var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n      self[m] = bind$1(self[m], self);\n    });\n  }\n\n  var p$1 = Transition.prototype;\n\n  /**\n   * Start an entering transition.\n   *\n   * 1. enter transition triggered\n   * 2. call beforeEnter hook\n   * 3. add enter class\n   * 4. insert/show element\n   * 5. call enter hook (with possible explicit js callback)\n   * 6. reflow\n   * 7. based on transition type:\n   *    - transition:\n   *        remove class now, wait for transitionend,\n   *        then done if there's no explicit js callback.\n   *    - animation:\n   *        wait for animationend, remove class,\n   *        then done if there's no explicit js callback.\n   *    - no css transition:\n   *        done now if there's no explicit js callback.\n   * 8. wait for either done or js callback, then call\n   *    afterEnter hook.\n   *\n   * @param {Function} op - insert/show the element\n   * @param {Function} [cb]\n   */\n\n  p$1.enter = function (op, cb) {\n    this.cancelPending();\n    this.callHook('beforeEnter');\n    this.cb = cb;\n    addClass(this.el, this.enterClass);\n    op();\n    this.entered = false;\n    this.callHookWithCb('enter');\n    if (this.entered) {\n      return; // user called done synchronously.\n    }\n    this.cancel = this.hooks && this.hooks.enterCancelled;\n    pushJob(this.enterNextTick);\n  };\n\n  /**\n   * The \"nextTick\" phase of an entering transition, which is\n   * to be pushed into a queue and executed after a reflow so\n   * that removing the class can trigger a CSS transition.\n   */\n\n  p$1.enterNextTick = function () {\n\n    // Important hack:\n    // in Chrome, if a just-entered element is applied the\n    // leave class while its interpolated property still has\n    // a very small value (within one frame), Chrome will\n    // skip the leave transition entirely and not firing the\n    // transtionend event. Therefore we need to protected\n    // against such cases using a one-frame timeout.\n    this.justEntered = true;\n    var self = this;\n    setTimeout(function () {\n      self.justEntered = false;\n    }, 17);\n\n    var enterDone = this.enterDone;\n    var type = this.getCssTransitionType(this.enterClass);\n    if (!this.pendingJsCb) {\n      if (type === TYPE_TRANSITION) {\n        // trigger transition by removing enter class now\n        removeClass(this.el, this.enterClass);\n        this.setupCssCb(transitionEndEvent, enterDone);\n      } else if (type === TYPE_ANIMATION) {\n        this.setupCssCb(animationEndEvent, enterDone);\n      } else {\n        enterDone();\n      }\n    } else if (type === TYPE_TRANSITION) {\n      removeClass(this.el, this.enterClass);\n    }\n  };\n\n  /**\n   * The \"cleanup\" phase of an entering transition.\n   */\n\n  p$1.enterDone = function () {\n    this.entered = true;\n    this.cancel = this.pendingJsCb = null;\n    removeClass(this.el, this.enterClass);\n    this.callHook('afterEnter');\n    if (this.cb) this.cb();\n  };\n\n  /**\n   * Start a leaving transition.\n   *\n   * 1. leave transition triggered.\n   * 2. call beforeLeave hook\n   * 3. add leave class (trigger css transition)\n   * 4. call leave hook (with possible explicit js callback)\n   * 5. reflow if no explicit js callback is provided\n   * 6. based on transition type:\n   *    - transition or animation:\n   *        wait for end event, remove class, then done if\n   *        there's no explicit js callback.\n   *    - no css transition:\n   *        done if there's no explicit js callback.\n   * 7. wait for either done or js callback, then call\n   *    afterLeave hook.\n   *\n   * @param {Function} op - remove/hide the element\n   * @param {Function} [cb]\n   */\n\n  p$1.leave = function (op, cb) {\n    this.cancelPending();\n    this.callHook('beforeLeave');\n    this.op = op;\n    this.cb = cb;\n    addClass(this.el, this.leaveClass);\n    this.left = false;\n    this.callHookWithCb('leave');\n    if (this.left) {\n      return; // user called done synchronously.\n    }\n    this.cancel = this.hooks && this.hooks.leaveCancelled;\n    // only need to handle leaveDone if\n    // 1. the transition is already done (synchronously called\n    //    by the user, which causes this.op set to null)\n    // 2. there's no explicit js callback\n    if (this.op && !this.pendingJsCb) {\n      // if a CSS transition leaves immediately after enter,\n      // the transitionend event never fires. therefore we\n      // detect such cases and end the leave immediately.\n      if (this.justEntered) {\n        this.leaveDone();\n      } else {\n        pushJob(this.leaveNextTick);\n      }\n    }\n  };\n\n  /**\n   * The \"nextTick\" phase of a leaving transition.\n   */\n\n  p$1.leaveNextTick = function () {\n    var type = this.getCssTransitionType(this.leaveClass);\n    if (type) {\n      var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n      this.setupCssCb(event, this.leaveDone);\n    } else {\n      this.leaveDone();\n    }\n  };\n\n  /**\n   * The \"cleanup\" phase of a leaving transition.\n   */\n\n  p$1.leaveDone = function () {\n    this.left = true;\n    this.cancel = this.pendingJsCb = null;\n    this.op();\n    removeClass(this.el, this.leaveClass);\n    this.callHook('afterLeave');\n    if (this.cb) this.cb();\n    this.op = null;\n  };\n\n  /**\n   * Cancel any pending callbacks from a previously running\n   * but not finished transition.\n   */\n\n  p$1.cancelPending = function () {\n    this.op = this.cb = null;\n    var hasPending = false;\n    if (this.pendingCssCb) {\n      hasPending = true;\n      off(this.el, this.pendingCssEvent, this.pendingCssCb);\n      this.pendingCssEvent = this.pendingCssCb = null;\n    }\n    if (this.pendingJsCb) {\n      hasPending = true;\n      this.pendingJsCb.cancel();\n      this.pendingJsCb = null;\n    }\n    if (hasPending) {\n      removeClass(this.el, this.enterClass);\n      removeClass(this.el, this.leaveClass);\n    }\n    if (this.cancel) {\n      this.cancel.call(this.vm, this.el);\n      this.cancel = null;\n    }\n  };\n\n  /**\n   * Call a user-provided synchronous hook function.\n   *\n   * @param {String} type\n   */\n\n  p$1.callHook = function (type) {\n    if (this.hooks && this.hooks[type]) {\n      this.hooks[type].call(this.vm, this.el);\n    }\n  };\n\n  /**\n   * Call a user-provided, potentially-async hook function.\n   * We check for the length of arguments to see if the hook\n   * expects a `done` callback. If true, the transition's end\n   * will be determined by when the user calls that callback;\n   * otherwise, the end is determined by the CSS transition or\n   * animation.\n   *\n   * @param {String} type\n   */\n\n  p$1.callHookWithCb = function (type) {\n    var hook = this.hooks && this.hooks[type];\n    if (hook) {\n      if (hook.length > 1) {\n        this.pendingJsCb = cancellable(this[type + 'Done']);\n      }\n      hook.call(this.vm, this.el, this.pendingJsCb);\n    }\n  };\n\n  /**\n   * Get an element's transition type based on the\n   * calculated styles.\n   *\n   * @param {String} className\n   * @return {Number}\n   */\n\n  p$1.getCssTransitionType = function (className) {\n    /* istanbul ignore if */\n    if (!transitionEndEvent ||\n    // skip CSS transitions if page is not visible -\n    // this solves the issue of transitionend events not\n    // firing until the page is visible again.\n    // pageVisibility API is supported in IE10+, same as\n    // CSS transitions.\n    document.hidden ||\n    // explicit js-only transition\n    this.hooks && this.hooks.css === false ||\n    // element is hidden\n    isHidden(this.el)) {\n      return;\n    }\n    var type = this.type || this.typeCache[className];\n    if (type) return type;\n    var inlineStyles = this.el.style;\n    var computedStyles = window.getComputedStyle(this.el);\n    var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n    if (transDuration && transDuration !== '0s') {\n      type = TYPE_TRANSITION;\n    } else {\n      var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n      if (animDuration && animDuration !== '0s') {\n        type = TYPE_ANIMATION;\n      }\n    }\n    if (type) {\n      this.typeCache[className] = type;\n    }\n    return type;\n  };\n\n  /**\n   * Setup a CSS transitionend/animationend callback.\n   *\n   * @param {String} event\n   * @param {Function} cb\n   */\n\n  p$1.setupCssCb = function (event, cb) {\n    this.pendingCssEvent = event;\n    var self = this;\n    var el = this.el;\n    var onEnd = this.pendingCssCb = function (e) {\n      if (e.target === el) {\n        off(el, event, onEnd);\n        self.pendingCssEvent = self.pendingCssCb = null;\n        if (!self.pendingJsCb && cb) {\n          cb();\n        }\n      }\n    };\n    on$1(el, event, onEnd);\n  };\n\n  /**\n   * Check if an element is hidden - in that case we can just\n   * skip the transition alltogether.\n   *\n   * @param {Element} el\n   * @return {Boolean}\n   */\n\n  function isHidden(el) {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n\n  var transition = {\n\n    priority: TRANSITION,\n\n    update: function update(id, oldId) {\n      var el = this.el;\n      // resolve on owner vm\n      var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n      id = id || 'v';\n      // apply on closest vm\n      el.__v_trans = new Transition(el, id, hooks, this.el.__vue__ || this.vm);\n      if (oldId) {\n        removeClass(el, oldId + '-transition');\n      }\n      addClass(el, id + '-transition');\n    }\n  };\n\n  var bindingModes = config._propBindingModes;\n\n  var propDef = {\n\n    bind: function bind() {\n\n      var child = this.vm;\n      var parent = child._context;\n      // passed in from compiler directly\n      var prop = this.descriptor.prop;\n      var childKey = prop.path;\n      var parentKey = prop.parentPath;\n      var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n      var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n        val = coerceProp(prop, val);\n        if (assertProp(prop, val)) {\n          child[childKey] = val;\n        }\n      }, {\n        twoWay: twoWay,\n        filters: prop.filters,\n        // important: props need to be observed on the\n        // v-for scope if present\n        scope: this._scope\n      });\n\n      // set the child initial value.\n      initProp(child, prop, parentWatcher.value);\n\n      // setup two-way binding\n      if (twoWay) {\n        // important: defer the child watcher creation until\n        // the created hook (after data observation)\n        var self = this;\n        child.$once('pre-hook:created', function () {\n          self.childWatcher = new Watcher(child, childKey, function (val) {\n            parentWatcher.set(val);\n          }, {\n            // ensure sync upward before parent sync down.\n            // this is necessary in cases e.g. the child\n            // mutates a prop array, then replaces it. (#1683)\n            sync: true\n          });\n        });\n      }\n    },\n\n    unbind: function unbind() {\n      this.parentWatcher.teardown();\n      if (this.childWatcher) {\n        this.childWatcher.teardown();\n      }\n    }\n  };\n\n  var component = {\n\n    priority: COMPONENT,\n\n    params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n    /**\n     * Setup. Two possible usages:\n     *\n     * - static:\n     *   <comp> or <div v-component=\"comp\">\n     *\n     * - dynamic:\n     *   <component :is=\"view\">\n     */\n\n    bind: function bind() {\n      if (!this.el.__vue__) {\n        // keep-alive cache\n        this.keepAlive = this.params.keepAlive;\n        if (this.keepAlive) {\n          this.cache = {};\n        }\n        // check inline-template\n        if (this.params.inlineTemplate) {\n          // extract inline template as a DocumentFragment\n          this.inlineTemplate = extractContent(this.el, true);\n        }\n        // component resolution related state\n        this.pendingComponentCb = this.Component = null;\n        // transition related state\n        this.pendingRemovals = 0;\n        this.pendingRemovalCb = null;\n        // create a ref anchor\n        this.anchor = createAnchor('v-component');\n        replace(this.el, this.anchor);\n        // remove is attribute.\n        // this is removed during compilation, but because compilation is\n        // cached, when the component is used elsewhere this attribute\n        // will remain at link time.\n        this.el.removeAttribute('is');\n        // remove ref, same as above\n        if (this.descriptor.ref) {\n          this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n        }\n        // if static, build right now.\n        if (this.literal) {\n          this.setComponent(this.expression);\n        }\n      } else {\n        'development' !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n      }\n    },\n\n    /**\n     * Public update, called by the watcher in the dynamic\n     * literal scenario, e.g. <component :is=\"view\">\n     */\n\n    update: function update(value) {\n      if (!this.literal) {\n        this.setComponent(value);\n      }\n    },\n\n    /**\n     * Switch dynamic components. May resolve the component\n     * asynchronously, and perform transition based on\n     * specified transition mode. Accepts a few additional\n     * arguments specifically for vue-router.\n     *\n     * The callback is called when the full transition is\n     * finished.\n     *\n     * @param {String} value\n     * @param {Function} [cb]\n     */\n\n    setComponent: function setComponent(value, cb) {\n      this.invalidatePending();\n      if (!value) {\n        // just remove current\n        this.unbuild(true);\n        this.remove(this.childVM, cb);\n        this.childVM = null;\n      } else {\n        var self = this;\n        this.resolveComponent(value, function () {\n          self.mountComponent(cb);\n        });\n      }\n    },\n\n    /**\n     * Resolve the component constructor to use when creating\n     * the child vm.\n     */\n\n    resolveComponent: function resolveComponent(id, cb) {\n      var self = this;\n      this.pendingComponentCb = cancellable(function (Component) {\n        self.ComponentName = Component.options.name || id;\n        self.Component = Component;\n        cb();\n      });\n      this.vm._resolveComponent(id, this.pendingComponentCb);\n    },\n\n    /**\n     * Create a new instance using the current constructor and\n     * replace the existing instance. This method doesn't care\n     * whether the new component and the old one are actually\n     * the same.\n     *\n     * @param {Function} [cb]\n     */\n\n    mountComponent: function mountComponent(cb) {\n      // actual mount\n      this.unbuild(true);\n      var self = this;\n      var activateHook = this.Component.options.activate;\n      var cached = this.getCached();\n      var newComponent = this.build();\n      if (activateHook && !cached) {\n        this.waitingFor = newComponent;\n        activateHook.call(newComponent, function () {\n          if (self.waitingFor !== newComponent) {\n            return;\n          }\n          self.waitingFor = null;\n          self.transition(newComponent, cb);\n        });\n      } else {\n        // update ref for kept-alive component\n        if (cached) {\n          newComponent._updateRef();\n        }\n        this.transition(newComponent, cb);\n      }\n    },\n\n    /**\n     * When the component changes or unbinds before an async\n     * constructor is resolved, we need to invalidate its\n     * pending callback.\n     */\n\n    invalidatePending: function invalidatePending() {\n      if (this.pendingComponentCb) {\n        this.pendingComponentCb.cancel();\n        this.pendingComponentCb = null;\n      }\n    },\n\n    /**\n     * Instantiate/insert a new child vm.\n     * If keep alive and has cached instance, insert that\n     * instance; otherwise build a new one and cache it.\n     *\n     * @param {Object} [extraOptions]\n     * @return {Vue} - the created instance\n     */\n\n    build: function build(extraOptions) {\n      var cached = this.getCached();\n      if (cached) {\n        return cached;\n      }\n      if (this.Component) {\n        // default options\n        var options = {\n          name: this.ComponentName,\n          el: cloneNode(this.el),\n          template: this.inlineTemplate,\n          // make sure to add the child with correct parent\n          // if this is a transcluded component, its parent\n          // should be the transclusion host.\n          parent: this._host || this.vm,\n          // if no inline-template, then the compiled\n          // linker can be cached for better performance.\n          _linkerCachable: !this.inlineTemplate,\n          _ref: this.descriptor.ref,\n          _asComponent: true,\n          _isRouterView: this._isRouterView,\n          // if this is a transcluded component, context\n          // will be the common parent vm of this instance\n          // and its host.\n          _context: this.vm,\n          // if this is inside an inline v-for, the scope\n          // will be the intermediate scope created for this\n          // repeat fragment. this is used for linking props\n          // and container directives.\n          _scope: this._scope,\n          // pass in the owner fragment of this component.\n          // this is necessary so that the fragment can keep\n          // track of its contained components in order to\n          // call attach/detach hooks for them.\n          _frag: this._frag\n        };\n        // extra options\n        // in 1.0.0 this is used by vue-router only\n        /* istanbul ignore if */\n        if (extraOptions) {\n          extend(options, extraOptions);\n        }\n        var child = new this.Component(options);\n        if (this.keepAlive) {\n          this.cache[this.Component.cid] = child;\n        }\n        /* istanbul ignore if */\n        if ('development' !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n          warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n        }\n        return child;\n      }\n    },\n\n    /**\n     * Try to get a cached instance of the current component.\n     *\n     * @return {Vue|undefined}\n     */\n\n    getCached: function getCached() {\n      return this.keepAlive && this.cache[this.Component.cid];\n    },\n\n    /**\n     * Teardown the current child, but defers cleanup so\n     * that we can separate the destroy and removal steps.\n     *\n     * @param {Boolean} defer\n     */\n\n    unbuild: function unbuild(defer) {\n      if (this.waitingFor) {\n        this.waitingFor.$destroy();\n        this.waitingFor = null;\n      }\n      var child = this.childVM;\n      if (!child || this.keepAlive) {\n        if (child) {\n          // remove ref\n          child._updateRef(true);\n        }\n        return;\n      }\n      // the sole purpose of `deferCleanup` is so that we can\n      // \"deactivate\" the vm right now and perform DOM removal\n      // later.\n      child.$destroy(false, defer);\n    },\n\n    /**\n     * Remove current destroyed child and manually do\n     * the cleanup after removal.\n     *\n     * @param {Function} cb\n     */\n\n    remove: function remove(child, cb) {\n      var keepAlive = this.keepAlive;\n      if (child) {\n        // we may have a component switch when a previous\n        // component is still being transitioned out.\n        // we want to trigger only one lastest insertion cb\n        // when the existing transition finishes. (#1119)\n        this.pendingRemovals++;\n        this.pendingRemovalCb = cb;\n        var self = this;\n        child.$remove(function () {\n          self.pendingRemovals--;\n          if (!keepAlive) child._cleanup();\n          if (!self.pendingRemovals && self.pendingRemovalCb) {\n            self.pendingRemovalCb();\n            self.pendingRemovalCb = null;\n          }\n        });\n      } else if (cb) {\n        cb();\n      }\n    },\n\n    /**\n     * Actually swap the components, depending on the\n     * transition mode. Defaults to simultaneous.\n     *\n     * @param {Vue} target\n     * @param {Function} [cb]\n     */\n\n    transition: function transition(target, cb) {\n      var self = this;\n      var current = this.childVM;\n      // for devtool inspection\n      if ('development' !== 'production') {\n        if (current) current._inactive = true;\n        target._inactive = false;\n      }\n      this.childVM = target;\n      switch (self.params.transitionMode) {\n        case 'in-out':\n          target.$before(self.anchor, function () {\n            self.remove(current, cb);\n          });\n          break;\n        case 'out-in':\n          self.remove(current, function () {\n            target.$before(self.anchor, cb);\n          });\n          break;\n        default:\n          self.remove(current);\n          target.$before(self.anchor, cb);\n      }\n    },\n\n    /**\n     * Unbind.\n     */\n\n    unbind: function unbind() {\n      this.invalidatePending();\n      // Do not defer cleanup when unbinding\n      this.unbuild();\n      // destroy all keep-alive cached instances\n      if (this.cache) {\n        for (var key in this.cache) {\n          this.cache[key].$destroy();\n        }\n        this.cache = null;\n      }\n    }\n  };\n\n  var vClass = {\n\n    deep: true,\n\n    update: function update(value) {\n      if (value && typeof value === 'string') {\n        this.handleObject(stringToObject(value));\n      } else if (isPlainObject(value)) {\n        this.handleObject(value);\n      } else if (isArray(value)) {\n        this.handleArray(value);\n      } else {\n        this.cleanup();\n      }\n    },\n\n    handleObject: function handleObject(value) {\n      this.cleanup(value);\n      var keys = this.prevKeys = Object.keys(value);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i];\n        if (value[key]) {\n          addClass(this.el, key);\n        } else {\n          removeClass(this.el, key);\n        }\n      }\n    },\n\n    handleArray: function handleArray(value) {\n      this.cleanup(value);\n      for (var i = 0, l = value.length; i < l; i++) {\n        if (value[i]) {\n          addClass(this.el, value[i]);\n        }\n      }\n      this.prevKeys = value.slice();\n    },\n\n    cleanup: function cleanup(value) {\n      if (this.prevKeys) {\n        var i = this.prevKeys.length;\n        while (i--) {\n          var key = this.prevKeys[i];\n          if (key && (!value || !contains$1(value, key))) {\n            removeClass(this.el, key);\n          }\n        }\n      }\n    }\n  };\n\n  function stringToObject(value) {\n    var res = {};\n    var keys = value.trim().split(/\\s+/);\n    var i = keys.length;\n    while (i--) {\n      res[keys[i]] = true;\n    }\n    return res;\n  }\n\n  function contains$1(value, key) {\n    return isArray(value) ? value.indexOf(key) > -1 : hasOwn(value, key);\n  }\n\n  var internalDirectives = {\n    style: style,\n    'class': vClass,\n    component: component,\n    prop: propDef,\n    transition: transition\n  };\n\n  var propBindingModes = config._propBindingModes;\n  var empty = {};\n\n  // regexes\n  var identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n  var settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n  /**\n   * Compile props on a root element and return\n   * a props link function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Array} propOptions\n   * @return {Function} propsLinkFn\n   */\n\n  function compileProps(el, propOptions) {\n    var props = [];\n    var names = Object.keys(propOptions);\n    var i = names.length;\n    var options, name, attr, value, path, parsed, prop;\n    while (i--) {\n      name = names[i];\n      options = propOptions[name] || empty;\n\n      if ('development' !== 'production' && name === '$data') {\n        warn('Do not use $data as prop.');\n        continue;\n      }\n\n      // props could contain dashes, which will be\n      // interpreted as minus calculations by the parser\n      // so we need to camelize the path here\n      path = camelize(name);\n      if (!identRE$1.test(path)) {\n        'development' !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n        continue;\n      }\n\n      prop = {\n        name: name,\n        path: path,\n        options: options,\n        mode: propBindingModes.ONE_WAY,\n        raw: null\n      };\n\n      attr = hyphenate(name);\n      // first check dynamic version\n      if ((value = getBindAttr(el, attr)) === null) {\n        if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n          prop.mode = propBindingModes.TWO_WAY;\n        } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n          prop.mode = propBindingModes.ONE_TIME;\n        }\n      }\n      if (value !== null) {\n        // has dynamic binding!\n        prop.raw = value;\n        parsed = parseDirective(value);\n        value = parsed.expression;\n        prop.filters = parsed.filters;\n        // check binding type\n        if (isLiteral(value) && !parsed.filters) {\n          // for expressions containing literal numbers and\n          // booleans, there's no need to setup a prop binding,\n          // so we can optimize them as a one-time set.\n          prop.optimizedLiteral = true;\n        } else {\n          prop.dynamic = true;\n          // check non-settable path for two-way bindings\n          if ('development' !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n            prop.mode = propBindingModes.ONE_WAY;\n            warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n          }\n        }\n        prop.parentPath = value;\n\n        // warn required two-way\n        if ('development' !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n          warn('Prop \"' + name + '\" expects a two-way binding type.');\n        }\n      } else if ((value = getAttr(el, attr)) !== null) {\n        // has literal binding!\n        prop.raw = value;\n      } else if (options.required) {\n        // warn missing required\n        'development' !== 'production' && warn('Missing required prop: ' + name);\n      }\n      // push prop\n      props.push(prop);\n    }\n    return makePropsLinkFn(props);\n  }\n\n  /**\n   * Build a function that applies props to a vm.\n   *\n   * @param {Array} props\n   * @return {Function} propsLinkFn\n   */\n\n  function makePropsLinkFn(props) {\n    return function propsLinkFn(vm, scope) {\n      // store resolved props info\n      vm._props = {};\n      var i = props.length;\n      var prop, path, options, value, raw;\n      while (i--) {\n        prop = props[i];\n        raw = prop.raw;\n        path = prop.path;\n        options = prop.options;\n        vm._props[path] = prop;\n        if (raw === null) {\n          // initialize absent prop\n          initProp(vm, prop, getDefault(vm, options));\n        } else if (prop.dynamic) {\n          // dynamic prop\n          if (vm._context) {\n            if (prop.mode === propBindingModes.ONE_TIME) {\n              // one time binding\n              value = (scope || vm._context).$get(prop.parentPath);\n              initProp(vm, prop, value);\n            } else {\n              // dynamic binding\n              vm._bindDir({\n                name: 'prop',\n                def: propDef,\n                prop: prop\n              }, null, null, scope); // el, host, scope\n            }\n          } else {\n              'development' !== 'production' && warn('Cannot bind dynamic prop on a root instance' + ' with no parent: ' + prop.name + '=\"' + raw + '\"');\n            }\n        } else if (prop.optimizedLiteral) {\n          // optimized literal, cast it and just set once\n          var stripped = stripQuotes(raw);\n          value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n          initProp(vm, prop, value);\n        } else {\n          // string literal, but we need to cater for\n          // Boolean props with no value\n          value = options.type === Boolean && raw === '' ? true : raw;\n          initProp(vm, prop, value);\n        }\n      }\n    };\n  }\n\n  /**\n   * Get the default value of a prop.\n   *\n   * @param {Vue} vm\n   * @param {Object} options\n   * @return {*}\n   */\n\n  function getDefault(vm, options) {\n    // no default, return undefined\n    if (!hasOwn(options, 'default')) {\n      // absent boolean value defaults to false\n      return options.type === Boolean ? false : undefined;\n    }\n    var def = options['default'];\n    // warn against non-factory defaults for Object & Array\n    if (isObject(def)) {\n      'development' !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n    }\n    // call factory function for non-Function types\n    return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n  }\n\n  // special binding prefixes\n  var bindRE = /^v-bind:|^:/;\n  var onRE = /^v-on:|^@/;\n  var argRE = /:(.*)$/;\n  var modifierRE = /\\.[^\\.]+/g;\n  var transitionRE = /^(v-bind:|:)?transition$/;\n\n  // terminal directives\n  var terminalDirectives = ['for', 'if'];\n\n  // default directive priority\n  var DEFAULT_PRIORITY = 1000;\n\n  /**\n   * Compile a template and return a reusable composite link\n   * function, which recursively contains more link functions\n   * inside. This top level compile function would normally\n   * be called on instance root nodes, but can also be used\n   * for partial compilation if the partial argument is true.\n   *\n   * The returned composite link function, when called, will\n   * return an unlink function that tearsdown all directives\n   * created during the linking phase.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Object} options\n   * @param {Boolean} partial\n   * @return {Function}\n   */\n\n  function compile(el, options, partial) {\n    // link function for the node itself.\n    var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n    // link function for the childNodes\n    var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n    /**\n     * A composite linker function to be called on a already\n     * compiled piece of DOM, which instantiates all directive\n     * instances.\n     *\n     * @param {Vue} vm\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host] - host vm of transcluded content\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - link context fragment\n     * @return {Function|undefined}\n     */\n\n    return function compositeLinkFn(vm, el, host, scope, frag) {\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(el.childNodes);\n      // link\n      var dirs = linkAndCapture(function compositeLinkCapturer() {\n        if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n        if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n      }, vm);\n      return makeUnlinkFn(vm, dirs);\n    };\n  }\n\n  /**\n   * Apply a linker to a vm/element pair and capture the\n   * directives created during the process.\n   *\n   * @param {Function} linker\n   * @param {Vue} vm\n   */\n\n  function linkAndCapture(linker, vm) {\n    var originalDirCount = vm._directives.length;\n    linker();\n    var dirs = vm._directives.slice(originalDirCount);\n    dirs.sort(directiveComparator);\n    for (var i = 0, l = dirs.length; i < l; i++) {\n      dirs[i]._bind();\n    }\n    return dirs;\n  }\n\n  /**\n   * Directive priority sort comparator\n   *\n   * @param {Object} a\n   * @param {Object} b\n   */\n\n  function directiveComparator(a, b) {\n    a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n    b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n    return a > b ? -1 : a === b ? 0 : 1;\n  }\n\n  /**\n   * Linker functions return an unlink function that\n   * tearsdown all directives instances generated during\n   * the process.\n   *\n   * We create unlink functions with only the necessary\n   * information to avoid retaining additional closures.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Vue} [context]\n   * @param {Array} [contextDirs]\n   * @return {Function}\n   */\n\n  function makeUnlinkFn(vm, dirs, context, contextDirs) {\n    function unlink(destroying) {\n      teardownDirs(vm, dirs, destroying);\n      if (context && contextDirs) {\n        teardownDirs(context, contextDirs);\n      }\n    }\n    // expose linked directives\n    unlink.dirs = dirs;\n    return unlink;\n  }\n\n  /**\n   * Teardown partial linked directives.\n   *\n   * @param {Vue} vm\n   * @param {Array} dirs\n   * @param {Boolean} destroying\n   */\n\n  function teardownDirs(vm, dirs, destroying) {\n    var i = dirs.length;\n    while (i--) {\n      dirs[i]._teardown();\n      if (!destroying) {\n        vm._directives.$remove(dirs[i]);\n      }\n    }\n  }\n\n  /**\n   * Compile link props on an instance.\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   * @param {Object} props\n   * @param {Object} [scope]\n   * @return {Function}\n   */\n\n  function compileAndLinkProps(vm, el, props, scope) {\n    var propsLinkFn = compileProps(el, props);\n    var propDirs = linkAndCapture(function () {\n      propsLinkFn(vm, scope);\n    }, vm);\n    return makeUnlinkFn(vm, propDirs);\n  }\n\n  /**\n   * Compile the root element of an instance.\n   *\n   * 1. attrs on context container (context scope)\n   * 2. attrs on the component template root node, if\n   *    replace:true (child scope)\n   *\n   * If this is a fragment instance, we only need to compile 1.\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   * @param {Object} options\n   * @param {Object} contextOptions\n   * @return {Function}\n   */\n\n  function compileRoot(el, options, contextOptions) {\n    var containerAttrs = options._containerAttrs;\n    var replacerAttrs = options._replacerAttrs;\n    var contextLinkFn, replacerLinkFn;\n\n    // only need to compile other attributes for\n    // non-fragment instances\n    if (el.nodeType !== 11) {\n      // for components, container and replacer need to be\n      // compiled separately and linked in different scopes.\n      if (options._asComponent) {\n        // 2. container attributes\n        if (containerAttrs && contextOptions) {\n          contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n        }\n        if (replacerAttrs) {\n          // 3. replacer attributes\n          replacerLinkFn = compileDirectives(replacerAttrs, options);\n        }\n      } else {\n        // non-component, just compile as a normal element.\n        replacerLinkFn = compileDirectives(el.attributes, options);\n      }\n    } else if ('development' !== 'production' && containerAttrs) {\n      // warn container directives for fragment instances\n      var names = containerAttrs.filter(function (attr) {\n        // allow vue-loader/vueify scoped css attributes\n        return attr.name.indexOf('_v-') < 0 &&\n        // allow event listeners\n        !onRE.test(attr.name) &&\n        // allow slots\n        attr.name !== 'slot';\n      }).map(function (attr) {\n        return '\"' + attr.name + '\"';\n      });\n      if (names.length) {\n        var plural = names.length > 1;\n        warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n      }\n    }\n\n    options._containerAttrs = options._replacerAttrs = null;\n    return function rootLinkFn(vm, el, scope) {\n      // link context scope dirs\n      var context = vm._context;\n      var contextDirs;\n      if (context && contextLinkFn) {\n        contextDirs = linkAndCapture(function () {\n          contextLinkFn(context, el, null, scope);\n        }, context);\n      }\n\n      // link self\n      var selfDirs = linkAndCapture(function () {\n        if (replacerLinkFn) replacerLinkFn(vm, el);\n      }, vm);\n\n      // return the unlink function that tearsdown context\n      // container directives.\n      return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n    };\n  }\n\n  /**\n   * Compile a node and return a nodeLinkFn based on the\n   * node type.\n   *\n   * @param {Node} node\n   * @param {Object} options\n   * @return {Function|null}\n   */\n\n  function compileNode(node, options) {\n    var type = node.nodeType;\n    if (type === 1 && node.tagName !== 'SCRIPT') {\n      return compileElement(node, options);\n    } else if (type === 3 && node.data.trim()) {\n      return compileTextNode(node, options);\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Compile an element and return a nodeLinkFn.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|null}\n   */\n\n  function compileElement(el, options) {\n    // preprocess textareas.\n    // textarea treats its text content as the initial value.\n    // just bind it as an attr directive for value.\n    if (el.tagName === 'TEXTAREA') {\n      var tokens = parseText(el.value);\n      if (tokens) {\n        el.setAttribute(':value', tokensToExp(tokens));\n        el.value = '';\n      }\n    }\n    var linkFn;\n    var hasAttrs = el.hasAttributes();\n    // check terminal directives (for & if)\n    if (hasAttrs) {\n      linkFn = checkTerminalDirectives(el, options);\n    }\n    // check element directives\n    if (!linkFn) {\n      linkFn = checkElementDirectives(el, options);\n    }\n    // check component\n    if (!linkFn) {\n      linkFn = checkComponent(el, options);\n    }\n    // normal directives\n    if (!linkFn && hasAttrs) {\n      linkFn = compileDirectives(el.attributes, options);\n    }\n    return linkFn;\n  }\n\n  /**\n   * Compile a textNode and return a nodeLinkFn.\n   *\n   * @param {TextNode} node\n   * @param {Object} options\n   * @return {Function|null} textNodeLinkFn\n   */\n\n  function compileTextNode(node, options) {\n    // skip marked text nodes\n    if (node._skip) {\n      return removeText;\n    }\n\n    var tokens = parseText(node.wholeText);\n    if (!tokens) {\n      return null;\n    }\n\n    // mark adjacent text nodes as skipped,\n    // because we are using node.wholeText to compile\n    // all adjacent text nodes together. This fixes\n    // issues in IE where sometimes it splits up a single\n    // text node into multiple ones.\n    var next = node.nextSibling;\n    while (next && next.nodeType === 3) {\n      next._skip = true;\n      next = next.nextSibling;\n    }\n\n    var frag = document.createDocumentFragment();\n    var el, token;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n      frag.appendChild(el);\n    }\n    return makeTextNodeLinkFn(tokens, frag, options);\n  }\n\n  /**\n   * Linker for an skipped text node.\n   *\n   * @param {Vue} vm\n   * @param {Text} node\n   */\n\n  function removeText(vm, node) {\n    remove(node);\n  }\n\n  /**\n   * Process a single text token.\n   *\n   * @param {Object} token\n   * @param {Object} options\n   * @return {Node}\n   */\n\n  function processTextToken(token, options) {\n    var el;\n    if (token.oneTime) {\n      el = document.createTextNode(token.value);\n    } else {\n      if (token.html) {\n        el = document.createComment('v-html');\n        setTokenType('html');\n      } else {\n        // IE will clean up empty textNodes during\n        // frag.cloneNode(true), so we have to give it\n        // something here...\n        el = document.createTextNode(' ');\n        setTokenType('text');\n      }\n    }\n    function setTokenType(type) {\n      if (token.descriptor) return;\n      var parsed = parseDirective(token.value);\n      token.descriptor = {\n        name: type,\n        def: publicDirectives[type],\n        expression: parsed.expression,\n        filters: parsed.filters\n      };\n    }\n    return el;\n  }\n\n  /**\n   * Build a function that processes a textNode.\n   *\n   * @param {Array<Object>} tokens\n   * @param {DocumentFragment} frag\n   */\n\n  function makeTextNodeLinkFn(tokens, frag) {\n    return function textNodeLinkFn(vm, el, host, scope) {\n      var fragClone = frag.cloneNode(true);\n      var childNodes = toArray(fragClone.childNodes);\n      var token, value, node;\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        token = tokens[i];\n        value = token.value;\n        if (token.tag) {\n          node = childNodes[i];\n          if (token.oneTime) {\n            value = (scope || vm).$eval(value);\n            if (token.html) {\n              replace(node, parseTemplate(value, true));\n            } else {\n              node.data = value;\n            }\n          } else {\n            vm._bindDir(token.descriptor, node, host, scope);\n          }\n        }\n      }\n      replace(el, fragClone);\n    };\n  }\n\n  /**\n   * Compile a node list and return a childLinkFn.\n   *\n   * @param {NodeList} nodeList\n   * @param {Object} options\n   * @return {Function|undefined}\n   */\n\n  function compileNodeList(nodeList, options) {\n    var linkFns = [];\n    var nodeLinkFn, childLinkFn, node;\n    for (var i = 0, l = nodeList.length; i < l; i++) {\n      node = nodeList[i];\n      nodeLinkFn = compileNode(node, options);\n      childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n      linkFns.push(nodeLinkFn, childLinkFn);\n    }\n    return linkFns.length ? makeChildLinkFn(linkFns) : null;\n  }\n\n  /**\n   * Make a child link function for a node's childNodes.\n   *\n   * @param {Array<Function>} linkFns\n   * @return {Function} childLinkFn\n   */\n\n  function makeChildLinkFn(linkFns) {\n    return function childLinkFn(vm, nodes, host, scope, frag) {\n      var node, nodeLinkFn, childrenLinkFn;\n      for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n        node = nodes[n];\n        nodeLinkFn = linkFns[i++];\n        childrenLinkFn = linkFns[i++];\n        // cache childNodes before linking parent, fix #657\n        var childNodes = toArray(node.childNodes);\n        if (nodeLinkFn) {\n          nodeLinkFn(vm, node, host, scope, frag);\n        }\n        if (childrenLinkFn) {\n          childrenLinkFn(vm, childNodes, host, scope, frag);\n        }\n      }\n    };\n  }\n\n  /**\n   * Check for element directives (custom elements that should\n   * be resovled as terminal directives).\n   *\n   * @param {Element} el\n   * @param {Object} options\n   */\n\n  function checkElementDirectives(el, options) {\n    var tag = el.tagName.toLowerCase();\n    if (commonTagRE.test(tag)) return;\n    // special case: give named slot a higher priority\n    // than unnamed slots\n    if (tag === 'slot' && hasBindAttr(el, 'name')) {\n      tag = '_namedSlot';\n    }\n    var def = resolveAsset(options, 'elementDirectives', tag);\n    if (def) {\n      return makeTerminalNodeLinkFn(el, tag, '', options, def);\n    }\n  }\n\n  /**\n   * Check if an element is a component. If yes, return\n   * a component link function.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function|undefined}\n   */\n\n  function checkComponent(el, options) {\n    var component = checkComponentAttr(el, options);\n    if (component) {\n      var ref = findRef(el);\n      var descriptor = {\n        name: 'component',\n        ref: ref,\n        expression: component.id,\n        def: internalDirectives.component,\n        modifiers: {\n          literal: !component.dynamic\n        }\n      };\n      var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n        if (ref) {\n          defineReactive((scope || vm).$refs, ref, null);\n        }\n        vm._bindDir(descriptor, el, host, scope, frag);\n      };\n      componentLinkFn.terminal = true;\n      return componentLinkFn;\n    }\n  }\n\n  /**\n   * Check an element for terminal directives in fixed order.\n   * If it finds one, return a terminal link function.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Function} terminalLinkFn\n   */\n\n  function checkTerminalDirectives(el, options) {\n    // skip v-pre\n    if (getAttr(el, 'v-pre') !== null) {\n      return skip;\n    }\n    // skip v-else block, but only if following v-if\n    if (el.hasAttribute('v-else')) {\n      var prev = el.previousElementSibling;\n      if (prev && prev.hasAttribute('v-if')) {\n        return skip;\n      }\n    }\n    var value, dirName;\n    for (var i = 0, l = terminalDirectives.length; i < l; i++) {\n      dirName = terminalDirectives[i];\n      value = el.getAttribute('v-' + dirName);\n      if (value != null) {\n        return makeTerminalNodeLinkFn(el, dirName, value, options);\n      }\n    }\n  }\n\n  function skip() {}\n  skip.terminal = true;\n\n  /**\n   * Build a node link function for a terminal directive.\n   * A terminal link function terminates the current\n   * compilation recursion and handles compilation of the\n   * subtree in the directive.\n   *\n   * @param {Element} el\n   * @param {String} dirName\n   * @param {String} value\n   * @param {Object} options\n   * @param {Object} [def]\n   * @return {Function} terminalLinkFn\n   */\n\n  function makeTerminalNodeLinkFn(el, dirName, value, options, def) {\n    var parsed = parseDirective(value);\n    var descriptor = {\n      name: dirName,\n      expression: parsed.expression,\n      filters: parsed.filters,\n      raw: value,\n      // either an element directive, or if/for\n      def: def || publicDirectives[dirName]\n    };\n    // check ref for v-for and router-view\n    if (dirName === 'for' || dirName === 'router-view') {\n      descriptor.ref = findRef(el);\n    }\n    var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n      if (descriptor.ref) {\n        defineReactive((scope || vm).$refs, descriptor.ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    fn.terminal = true;\n    return fn;\n  }\n\n  /**\n   * Compile the directives on an element and return a linker.\n   *\n   * @param {Array|NamedNodeMap} attrs\n   * @param {Object} options\n   * @return {Function}\n   */\n\n  function compileDirectives(attrs, options) {\n    var i = attrs.length;\n    var dirs = [];\n    var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens;\n    while (i--) {\n      attr = attrs[i];\n      name = rawName = attr.name;\n      value = rawValue = attr.value;\n      tokens = parseText(value);\n      // reset arg\n      arg = null;\n      // check modifiers\n      modifiers = parseModifiers(name);\n      name = name.replace(modifierRE, '');\n\n      // attribute interpolations\n      if (tokens) {\n        value = tokensToExp(tokens);\n        arg = name;\n        pushDir('bind', publicDirectives.bind, tokens);\n        // warn against mixing mustaches with v-bind\n        if ('development' !== 'production') {\n          if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n            return attr.name === ':class' || attr.name === 'v-bind:class';\n          })) {\n            warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n          }\n        }\n      } else\n\n        // special attribute: transition\n        if (transitionRE.test(name)) {\n          modifiers.literal = !bindRE.test(name);\n          pushDir('transition', internalDirectives.transition);\n        } else\n\n          // event handlers\n          if (onRE.test(name)) {\n            arg = name.replace(onRE, '');\n            pushDir('on', publicDirectives.on);\n          } else\n\n            // attribute bindings\n            if (bindRE.test(name)) {\n              dirName = name.replace(bindRE, '');\n              if (dirName === 'style' || dirName === 'class') {\n                pushDir(dirName, internalDirectives[dirName]);\n              } else {\n                arg = dirName;\n                pushDir('bind', publicDirectives.bind);\n              }\n            } else\n\n              // normal directives\n              if (name.indexOf('v-') === 0) {\n                // check arg\n                arg = (arg = name.match(argRE)) && arg[1];\n                if (arg) {\n                  name = name.replace(argRE, '');\n                }\n                // extract directive name\n                dirName = name.slice(2);\n\n                // skip v-else (when used with v-show)\n                if (dirName === 'else') {\n                  continue;\n                }\n\n                dirDef = resolveAsset(options, 'directives', dirName);\n\n                if ('development' !== 'production') {\n                  assertAsset(dirDef, 'directive', dirName);\n                }\n\n                if (dirDef) {\n                  pushDir(dirName, dirDef);\n                }\n              }\n    }\n\n    /**\n     * Push a directive.\n     *\n     * @param {String} dirName\n     * @param {Object|Function} def\n     * @param {Array} [interpTokens]\n     */\n\n    function pushDir(dirName, def, interpTokens) {\n      var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n      var parsed = !hasOneTimeToken && parseDirective(value);\n      dirs.push({\n        name: dirName,\n        attr: rawName,\n        raw: rawValue,\n        def: def,\n        arg: arg,\n        modifiers: modifiers,\n        // conversion from interpolation strings with one-time token\n        // to expression is differed until directive bind time so that we\n        // have access to the actual vm context for one-time bindings.\n        expression: parsed && parsed.expression,\n        filters: parsed && parsed.filters,\n        interp: interpTokens,\n        hasOneTime: hasOneTimeToken\n      });\n    }\n\n    if (dirs.length) {\n      return makeNodeLinkFn(dirs);\n    }\n  }\n\n  /**\n   * Parse modifiers from directive attribute name.\n   *\n   * @param {String} name\n   * @return {Object}\n   */\n\n  function parseModifiers(name) {\n    var res = Object.create(null);\n    var match = name.match(modifierRE);\n    if (match) {\n      var i = match.length;\n      while (i--) {\n        res[match[i].slice(1)] = true;\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Build a link function for all directives on a single node.\n   *\n   * @param {Array} directives\n   * @return {Function} directivesLinkFn\n   */\n\n  function makeNodeLinkFn(directives) {\n    return function nodeLinkFn(vm, el, host, scope, frag) {\n      // reverse apply because it's sorted low to high\n      var i = directives.length;\n      while (i--) {\n        vm._bindDir(directives[i], el, host, scope, frag);\n      }\n    };\n  }\n\n  /**\n   * Check if an interpolation string contains one-time tokens.\n   *\n   * @param {Array} tokens\n   * @return {Boolean}\n   */\n\n  function hasOneTime(tokens) {\n    var i = tokens.length;\n    while (i--) {\n      if (tokens[i].oneTime) return true;\n    }\n  }\n\n  var specialCharRE = /[^\\w\\-:\\.]/;\n\n  /**\n   * Process an element or a DocumentFragment based on a\n   * instance option object. This allows us to transclude\n   * a template node/fragment before the instance is created,\n   * so the processed fragment can then be cloned and reused\n   * in v-for.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */\n\n  function transclude(el, options) {\n    // extract container attributes to pass them down\n    // to compiler, because they need to be compiled in\n    // parent scope. we are mutating the options object here\n    // assuming the same object will be used for compile\n    // right after this.\n    if (options) {\n      options._containerAttrs = extractAttrs(el);\n    }\n    // for template tags, what we want is its content as\n    // a documentFragment (for fragment instances)\n    if (isTemplate(el)) {\n      el = parseTemplate(el);\n    }\n    if (options) {\n      if (options._asComponent && !options.template) {\n        options.template = '<slot></slot>';\n      }\n      if (options.template) {\n        options._content = extractContent(el);\n        el = transcludeTemplate(el, options);\n      }\n    }\n    if (el instanceof DocumentFragment) {\n      // anchors for fragment instance\n      // passing in `persist: true` to avoid them being\n      // discarded by IE during template cloning\n      prepend(createAnchor('v-start', true), el);\n      el.appendChild(createAnchor('v-end', true));\n    }\n    return el;\n  }\n\n  /**\n   * Process the template option.\n   * If the replace option is true this will swap the $el.\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @return {Element|DocumentFragment}\n   */\n\n  function transcludeTemplate(el, options) {\n    var template = options.template;\n    var frag = parseTemplate(template, true);\n    if (frag) {\n      var replacer = frag.firstChild;\n      var tag = replacer.tagName && replacer.tagName.toLowerCase();\n      if (options.replace) {\n        /* istanbul ignore if */\n        if (el === document.body) {\n          'development' !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n        }\n        // there are many cases where the instance must\n        // become a fragment instance: basically anything that\n        // can create more than 1 root nodes.\n        if (\n        // multi-children template\n        frag.childNodes.length > 1 ||\n        // non-element template\n        replacer.nodeType !== 1 ||\n        // single nested component\n        tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n        // element directive\n        resolveAsset(options, 'elementDirectives', tag) ||\n        // for block\n        replacer.hasAttribute('v-for') ||\n        // if block\n        replacer.hasAttribute('v-if')) {\n          return frag;\n        } else {\n          options._replacerAttrs = extractAttrs(replacer);\n          mergeAttrs(el, replacer);\n          return replacer;\n        }\n      } else {\n        el.appendChild(frag);\n        return el;\n      }\n    } else {\n      'development' !== 'production' && warn('Invalid template option: ' + template);\n    }\n  }\n\n  /**\n   * Helper to extract a component container's attributes\n   * into a plain object array.\n   *\n   * @param {Element} el\n   * @return {Array}\n   */\n\n  function extractAttrs(el) {\n    if (el.nodeType === 1 && el.hasAttributes()) {\n      return toArray(el.attributes);\n    }\n  }\n\n  /**\n   * Merge the attributes of two elements, and make sure\n   * the class names are merged properly.\n   *\n   * @param {Element} from\n   * @param {Element} to\n   */\n\n  function mergeAttrs(from, to) {\n    var attrs = from.attributes;\n    var i = attrs.length;\n    var name, value;\n    while (i--) {\n      name = attrs[i].name;\n      value = attrs[i].value;\n      if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n        to.setAttribute(name, value);\n      } else if (name === 'class' && !parseText(value)) {\n        value.split(/\\s+/).forEach(function (cls) {\n          addClass(to, cls);\n        });\n      }\n    }\n  }\n\n  var compiler = Object.freeze({\n  \tcompile: compile,\n  \tcompileAndLinkProps: compileAndLinkProps,\n  \tcompileRoot: compileRoot,\n  \tterminalDirectives: terminalDirectives,\n  \ttransclude: transclude\n  });\n\n  function stateMixin (Vue) {\n\n    /**\n     * Accessor for `$data` property, since setting $data\n     * requires observing the new object and updating\n     * proxied properties.\n     */\n\n    Object.defineProperty(Vue.prototype, '$data', {\n      get: function get() {\n        return this._data;\n      },\n      set: function set(newData) {\n        if (newData !== this._data) {\n          this._setData(newData);\n        }\n      }\n    });\n\n    /**\n     * Setup the scope of an instance, which contains:\n     * - observed data\n     * - computed properties\n     * - user methods\n     * - meta properties\n     */\n\n    Vue.prototype._initState = function () {\n      this._initProps();\n      this._initMeta();\n      this._initMethods();\n      this._initData();\n      this._initComputed();\n    };\n\n    /**\n     * Initialize props.\n     */\n\n    Vue.prototype._initProps = function () {\n      var options = this.$options;\n      var el = options.el;\n      var props = options.props;\n      if (props && !el) {\n        'development' !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n      }\n      // make sure to convert string selectors into element now\n      el = options.el = query(el);\n      this._propsUnlinkFn = el && el.nodeType === 1 && props\n      // props must be linked in proper scope if inside v-for\n      ? compileAndLinkProps(this, el, props, this._scope) : null;\n    };\n\n    /**\n     * Initialize the data.\n     */\n\n    Vue.prototype._initData = function () {\n      var propsData = this._data;\n      var optionsDataFn = this.$options.data;\n      var optionsData = optionsDataFn && optionsDataFn();\n      if (optionsData) {\n        this._data = optionsData;\n        for (var prop in propsData) {\n          if ('development' !== 'production' && hasOwn(optionsData, prop)) {\n            warn('Data field \"' + prop + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n          }\n          if (this._props[prop].raw !== null || !hasOwn(optionsData, prop)) {\n            set(optionsData, prop, propsData[prop]);\n          }\n        }\n      }\n      var data = this._data;\n      // proxy data on instance\n      var keys = Object.keys(data);\n      var i, key;\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        this._proxy(key);\n      }\n      // observe data\n      observe(data, this);\n    };\n\n    /**\n     * Swap the instance's $data. Called in $data's setter.\n     *\n     * @param {Object} newData\n     */\n\n    Vue.prototype._setData = function (newData) {\n      newData = newData || {};\n      var oldData = this._data;\n      this._data = newData;\n      var keys, key, i;\n      // unproxy keys not present in new data\n      keys = Object.keys(oldData);\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        if (!(key in newData)) {\n          this._unproxy(key);\n        }\n      }\n      // proxy keys not already proxied,\n      // and trigger change for changed values\n      keys = Object.keys(newData);\n      i = keys.length;\n      while (i--) {\n        key = keys[i];\n        if (!hasOwn(this, key)) {\n          // new property\n          this._proxy(key);\n        }\n      }\n      oldData.__ob__.removeVm(this);\n      observe(newData, this);\n      this._digest();\n    };\n\n    /**\n     * Proxy a property, so that\n     * vm.prop === vm._data.prop\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype._proxy = function (key) {\n      if (!isReserved(key)) {\n        // need to store ref to self here\n        // because these getter/setters might\n        // be called by child scopes via\n        // prototype inheritance.\n        var self = this;\n        Object.defineProperty(self, key, {\n          configurable: true,\n          enumerable: true,\n          get: function proxyGetter() {\n            return self._data[key];\n          },\n          set: function proxySetter(val) {\n            self._data[key] = val;\n          }\n        });\n      }\n    };\n\n    /**\n     * Unproxy a property.\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype._unproxy = function (key) {\n      if (!isReserved(key)) {\n        delete this[key];\n      }\n    };\n\n    /**\n     * Force update on every watcher in scope.\n     */\n\n    Vue.prototype._digest = function () {\n      for (var i = 0, l = this._watchers.length; i < l; i++) {\n        this._watchers[i].update(true); // shallow updates\n      }\n    };\n\n    /**\n     * Setup computed properties. They are essentially\n     * special getter/setters\n     */\n\n    function noop() {}\n    Vue.prototype._initComputed = function () {\n      var computed = this.$options.computed;\n      if (computed) {\n        for (var key in computed) {\n          var userDef = computed[key];\n          var def = {\n            enumerable: true,\n            configurable: true\n          };\n          if (typeof userDef === 'function') {\n            def.get = makeComputedGetter(userDef, this);\n            def.set = noop;\n          } else {\n            def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind$1(userDef.get, this) : noop;\n            def.set = userDef.set ? bind$1(userDef.set, this) : noop;\n          }\n          Object.defineProperty(this, key, def);\n        }\n      }\n    };\n\n    function makeComputedGetter(getter, owner) {\n      var watcher = new Watcher(owner, getter, null, {\n        lazy: true\n      });\n      return function computedGetter() {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value;\n      };\n    }\n\n    /**\n     * Setup instance methods. Methods must be bound to the\n     * instance since they might be passed down as a prop to\n     * child components.\n     */\n\n    Vue.prototype._initMethods = function () {\n      var methods = this.$options.methods;\n      if (methods) {\n        for (var key in methods) {\n          this[key] = bind$1(methods[key], this);\n        }\n      }\n    };\n\n    /**\n     * Initialize meta information like $index, $key & $value.\n     */\n\n    Vue.prototype._initMeta = function () {\n      var metas = this.$options._meta;\n      if (metas) {\n        for (var key in metas) {\n          defineReactive(this, key, metas[key]);\n        }\n      }\n    };\n  }\n\n  var eventRE = /^v-on:|^@/;\n\n  function eventsMixin (Vue) {\n\n    /**\n     * Setup the instance's option events & watchers.\n     * If the value is a string, we pull it from the\n     * instance's methods by name.\n     */\n\n    Vue.prototype._initEvents = function () {\n      var options = this.$options;\n      if (options._asComponent) {\n        registerComponentEvents(this, options.el);\n      }\n      registerCallbacks(this, '$on', options.events);\n      registerCallbacks(this, '$watch', options.watch);\n    };\n\n    /**\n     * Register v-on events on a child component\n     *\n     * @param {Vue} vm\n     * @param {Element} el\n     */\n\n    function registerComponentEvents(vm, el) {\n      var attrs = el.attributes;\n      var name, handler;\n      for (var i = 0, l = attrs.length; i < l; i++) {\n        name = attrs[i].name;\n        if (eventRE.test(name)) {\n          name = name.replace(eventRE, '');\n          handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        }\n      }\n    }\n\n    /**\n     * Register callbacks for option events and watchers.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {Object} hash\n     */\n\n    function registerCallbacks(vm, action, hash) {\n      if (!hash) return;\n      var handlers, key, i, j;\n      for (key in hash) {\n        handlers = hash[key];\n        if (isArray(handlers)) {\n          for (i = 0, j = handlers.length; i < j; i++) {\n            register(vm, action, key, handlers[i]);\n          }\n        } else {\n          register(vm, action, key, handlers);\n        }\n      }\n    }\n\n    /**\n     * Helper to register an event/watch callback.\n     *\n     * @param {Vue} vm\n     * @param {String} action\n     * @param {String} key\n     * @param {Function|String|Object} handler\n     * @param {Object} [options]\n     */\n\n    function register(vm, action, key, handler, options) {\n      var type = typeof handler;\n      if (type === 'function') {\n        vm[action](key, handler, options);\n      } else if (type === 'string') {\n        var methods = vm.$options.methods;\n        var method = methods && methods[handler];\n        if (method) {\n          vm[action](key, method, options);\n        } else {\n          'development' !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n        }\n      } else if (handler && type === 'object') {\n        register(vm, action, key, handler.handler, handler);\n      }\n    }\n\n    /**\n     * Setup recursive attached/detached calls\n     */\n\n    Vue.prototype._initDOMHooks = function () {\n      this.$on('hook:attached', onAttached);\n      this.$on('hook:detached', onDetached);\n    };\n\n    /**\n     * Callback to recursively call attached hook on children\n     */\n\n    function onAttached() {\n      if (!this._isAttached) {\n        this._isAttached = true;\n        this.$children.forEach(callAttach);\n      }\n    }\n\n    /**\n     * Iterator to call attached hook\n     *\n     * @param {Vue} child\n     */\n\n    function callAttach(child) {\n      if (!child._isAttached && inDoc(child.$el)) {\n        child._callHook('attached');\n      }\n    }\n\n    /**\n     * Callback to recursively call detached hook on children\n     */\n\n    function onDetached() {\n      if (this._isAttached) {\n        this._isAttached = false;\n        this.$children.forEach(callDetach);\n      }\n    }\n\n    /**\n     * Iterator to call detached hook\n     *\n     * @param {Vue} child\n     */\n\n    function callDetach(child) {\n      if (child._isAttached && !inDoc(child.$el)) {\n        child._callHook('detached');\n      }\n    }\n\n    /**\n     * Trigger all handlers for a hook\n     *\n     * @param {String} hook\n     */\n\n    Vue.prototype._callHook = function (hook) {\n      this.$emit('pre-hook:' + hook);\n      var handlers = this.$options[hook];\n      if (handlers) {\n        for (var i = 0, j = handlers.length; i < j; i++) {\n          handlers[i].call(this);\n        }\n      }\n      this.$emit('hook:' + hook);\n    };\n  }\n\n  function noop() {}\n\n  /**\n   * A directive links a DOM element with a piece of data,\n   * which is the result of evaluating an expression.\n   * It registers a watcher with the expression and calls\n   * the DOM update function when a change is triggered.\n   *\n   * @param {String} name\n   * @param {Node} el\n   * @param {Vue} vm\n   * @param {Object} descriptor\n   *                 - {String} name\n   *                 - {Object} def\n   *                 - {String} expression\n   *                 - {Array<Object>} [filters]\n   *                 - {Boolean} literal\n   *                 - {String} attr\n   *                 - {String} raw\n   * @param {Object} def - directive definition object\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   * @constructor\n   */\n  function Directive(descriptor, vm, el, host, scope, frag) {\n    this.vm = vm;\n    this.el = el;\n    // copy descriptor properties\n    this.descriptor = descriptor;\n    this.name = descriptor.name;\n    this.expression = descriptor.expression;\n    this.arg = descriptor.arg;\n    this.modifiers = descriptor.modifiers;\n    this.filters = descriptor.filters;\n    this.literal = this.modifiers && this.modifiers.literal;\n    // private\n    this._locked = false;\n    this._bound = false;\n    this._listeners = null;\n    // link context\n    this._host = host;\n    this._scope = scope;\n    this._frag = frag;\n    // store directives on node in dev mode\n    if ('development' !== 'production' && this.el) {\n      this.el._vue_directives = this.el._vue_directives || [];\n      this.el._vue_directives.push(this);\n    }\n  }\n\n  /**\n   * Initialize the directive, mixin definition properties,\n   * setup the watcher, call definition bind() and update()\n   * if present.\n   *\n   * @param {Object} def\n   */\n\n  Directive.prototype._bind = function () {\n    var name = this.name;\n    var descriptor = this.descriptor;\n\n    // remove attribute\n    if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n      var attr = descriptor.attr || 'v-' + name;\n      this.el.removeAttribute(attr);\n    }\n\n    // copy def properties\n    var def = descriptor.def;\n    if (typeof def === 'function') {\n      this.update = def;\n    } else {\n      extend(this, def);\n    }\n\n    // setup directive params\n    this._setupParams();\n\n    // initial bind\n    if (this.bind) {\n      this.bind();\n    }\n    this._bound = true;\n\n    if (this.literal) {\n      this.update && this.update(descriptor.raw);\n    } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n      // wrapped updater for context\n      var dir = this;\n      if (this.update) {\n        this._update = function (val, oldVal) {\n          if (!dir._locked) {\n            dir.update(val, oldVal);\n          }\n        };\n      } else {\n        this._update = noop;\n      }\n      var preProcess = this._preProcess ? bind$1(this._preProcess, this) : null;\n      var postProcess = this._postProcess ? bind$1(this._postProcess, this) : null;\n      var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n      {\n        filters: this.filters,\n        twoWay: this.twoWay,\n        deep: this.deep,\n        preProcess: preProcess,\n        postProcess: postProcess,\n        scope: this._scope\n      });\n      // v-model with inital inline value need to sync back to\n      // model instead of update to DOM on init. They would\n      // set the afterBind hook to indicate that.\n      if (this.afterBind) {\n        this.afterBind();\n      } else if (this.update) {\n        this.update(watcher.value);\n      }\n    }\n  };\n\n  /**\n   * Setup all param attributes, e.g. track-by,\n   * transition-mode, etc...\n   */\n\n  Directive.prototype._setupParams = function () {\n    if (!this.params) {\n      return;\n    }\n    var params = this.params;\n    // swap the params array with a fresh object.\n    this.params = Object.create(null);\n    var i = params.length;\n    var key, val, mappedKey;\n    while (i--) {\n      key = params[i];\n      mappedKey = camelize(key);\n      val = getBindAttr(this.el, key);\n      if (val != null) {\n        // dynamic\n        this._setupParamWatcher(mappedKey, val);\n      } else {\n        // static\n        val = getAttr(this.el, key);\n        if (val != null) {\n          this.params[mappedKey] = val === '' ? true : val;\n        }\n      }\n    }\n  };\n\n  /**\n   * Setup a watcher for a dynamic param.\n   *\n   * @param {String} key\n   * @param {String} expression\n   */\n\n  Directive.prototype._setupParamWatcher = function (key, expression) {\n    var self = this;\n    var called = false;\n    var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n      self.params[key] = val;\n      // since we are in immediate mode,\n      // only call the param change callbacks if this is not the first update.\n      if (called) {\n        var cb = self.paramWatchers && self.paramWatchers[key];\n        if (cb) {\n          cb.call(self, val, oldVal);\n        }\n      } else {\n        called = true;\n      }\n    }, {\n      immediate: true,\n      user: false\n    });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n  };\n\n  /**\n   * Check if the directive is a function caller\n   * and if the expression is a callable one. If both true,\n   * we wrap up the expression and use it as the event\n   * handler.\n   *\n   * e.g. on-click=\"a++\"\n   *\n   * @return {Boolean}\n   */\n\n  Directive.prototype._checkStatement = function () {\n    var expression = this.expression;\n    if (expression && this.acceptStatement && !isSimplePath(expression)) {\n      var fn = parseExpression(expression).get;\n      var scope = this._scope || this.vm;\n      var handler = function handler(e) {\n        scope.$event = e;\n        fn.call(scope, scope);\n        scope.$event = null;\n      };\n      if (this.filters) {\n        handler = scope._applyFilters(handler, null, this.filters);\n      }\n      this.update(handler);\n      return true;\n    }\n  };\n\n  /**\n   * Set the corresponding value with the setter.\n   * This should only be used in two-way directives\n   * e.g. v-model.\n   *\n   * @param {*} value\n   * @public\n   */\n\n  Directive.prototype.set = function (value) {\n    /* istanbul ignore else */\n    if (this.twoWay) {\n      this._withLock(function () {\n        this._watcher.set(value);\n      });\n    } else if ('development' !== 'production') {\n      warn('Directive.set() can only be used inside twoWay' + 'directives.');\n    }\n  };\n\n  /**\n   * Execute a function while preventing that function from\n   * triggering updates on this directive instance.\n   *\n   * @param {Function} fn\n   */\n\n  Directive.prototype._withLock = function (fn) {\n    var self = this;\n    self._locked = true;\n    fn.call(self);\n    nextTick(function () {\n      self._locked = false;\n    });\n  };\n\n  /**\n   * Convenience method that attaches a DOM event listener\n   * to the directive element and autometically tears it down\n   * during unbind.\n   *\n   * @param {String} event\n   * @param {Function} handler\n   */\n\n  Directive.prototype.on = function (event, handler) {\n    on$1(this.el, event, handler);(this._listeners || (this._listeners = [])).push([event, handler]);\n  };\n\n  /**\n   * Teardown the watcher and call unbind.\n   */\n\n  Directive.prototype._teardown = function () {\n    if (this._bound) {\n      this._bound = false;\n      if (this.unbind) {\n        this.unbind();\n      }\n      if (this._watcher) {\n        this._watcher.teardown();\n      }\n      var listeners = this._listeners;\n      var i;\n      if (listeners) {\n        i = listeners.length;\n        while (i--) {\n          off(this.el, listeners[i][0], listeners[i][1]);\n        }\n      }\n      var unwatchFns = this._paramUnwatchFns;\n      if (unwatchFns) {\n        i = unwatchFns.length;\n        while (i--) {\n          unwatchFns[i]();\n        }\n      }\n      if ('development' !== 'production' && this.el) {\n        this.el._vue_directives.$remove(this);\n      }\n      this.vm = this.el = this._watcher = this._listeners = null;\n    }\n  };\n\n  function lifecycleMixin (Vue) {\n\n    /**\n     * Update v-ref for component.\n     *\n     * @param {Boolean} remove\n     */\n\n    Vue.prototype._updateRef = function (remove) {\n      var ref = this.$options._ref;\n      if (ref) {\n        var refs = (this._scope || this._context).$refs;\n        if (remove) {\n          if (refs[ref] === this) {\n            refs[ref] = null;\n          }\n        } else {\n          refs[ref] = this;\n        }\n      }\n    };\n\n    /**\n     * Transclude, compile and link element.\n     *\n     * If a pre-compiled linker is available, that means the\n     * passed in element will be pre-transcluded and compiled\n     * as well - all we need to do is to call the linker.\n     *\n     * Otherwise we need to call transclude/compile/link here.\n     *\n     * @param {Element} el\n     * @return {Element}\n     */\n\n    Vue.prototype._compile = function (el) {\n      var options = this.$options;\n\n      // transclude and init element\n      // transclude can potentially replace original\n      // so we need to keep reference; this step also injects\n      // the template and caches the original attributes\n      // on the container node and replacer node.\n      var original = el;\n      el = transclude(el, options);\n      this._initElement(el);\n\n      // handle v-pre on root node (#2026)\n      if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n        return;\n      }\n\n      // root is always compiled per-instance, because\n      // container attrs and props can be different every time.\n      var contextOptions = this._context && this._context.$options;\n      var rootLinker = compileRoot(el, options, contextOptions);\n\n      // compile and link the rest\n      var contentLinkFn;\n      var ctor = this.constructor;\n      // component compilation can be cached\n      // as long as it's not using inline-template\n      if (options._linkerCachable) {\n        contentLinkFn = ctor.linker;\n        if (!contentLinkFn) {\n          contentLinkFn = ctor.linker = compile(el, options);\n        }\n      }\n\n      // link phase\n      // make sure to link root with prop scope!\n      var rootUnlinkFn = rootLinker(this, el, this._scope);\n      var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n      // register composite unlink function\n      // to be called during instance destruction\n      this._unlinkFn = function () {\n        rootUnlinkFn();\n        // passing destroying: true to avoid searching and\n        // splicing the directives\n        contentUnlinkFn(true);\n      };\n\n      // finally replace original\n      if (options.replace) {\n        replace(original, el);\n      }\n\n      this._isCompiled = true;\n      this._callHook('compiled');\n      return el;\n    };\n\n    /**\n     * Initialize instance element. Called in the public\n     * $mount() method.\n     *\n     * @param {Element} el\n     */\n\n    Vue.prototype._initElement = function (el) {\n      if (el instanceof DocumentFragment) {\n        this._isFragment = true;\n        this.$el = this._fragmentStart = el.firstChild;\n        this._fragmentEnd = el.lastChild;\n        // set persisted text anchors to empty\n        if (this._fragmentStart.nodeType === 3) {\n          this._fragmentStart.data = this._fragmentEnd.data = '';\n        }\n        this._fragment = el;\n      } else {\n        this.$el = el;\n      }\n      this.$el.__vue__ = this;\n      this._callHook('beforeCompile');\n    };\n\n    /**\n     * Create and bind a directive to an element.\n     *\n     * @param {String} name - directive name\n     * @param {Node} node   - target node\n     * @param {Object} desc - parsed directive descriptor\n     * @param {Object} def  - directive definition object\n     * @param {Vue} [host] - transclusion host component\n     * @param {Object} [scope] - v-for scope\n     * @param {Fragment} [frag] - owner fragment\n     */\n\n    Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n      this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n    };\n\n    /**\n     * Teardown an instance, unobserves the data, unbind all the\n     * directives, turn off all the event listeners, etc.\n     *\n     * @param {Boolean} remove - whether to remove the DOM node.\n     * @param {Boolean} deferCleanup - if true, defer cleanup to\n     *                                 be called later\n     */\n\n    Vue.prototype._destroy = function (remove, deferCleanup) {\n      if (this._isBeingDestroyed) {\n        if (!deferCleanup) {\n          this._cleanup();\n        }\n        return;\n      }\n\n      var destroyReady;\n      var pendingRemoval;\n\n      var self = this;\n      // Cleanup should be called either synchronously or asynchronoysly as\n      // callback of this.$remove(), or if remove and deferCleanup are false.\n      // In any case it should be called after all other removing, unbinding and\n      // turning of is done\n      var cleanupIfPossible = function cleanupIfPossible() {\n        if (destroyReady && !pendingRemoval && !deferCleanup) {\n          self._cleanup();\n        }\n      };\n\n      // remove DOM element\n      if (remove && this.$el) {\n        pendingRemoval = true;\n        this.$remove(function () {\n          pendingRemoval = false;\n          cleanupIfPossible();\n        });\n      }\n\n      this._callHook('beforeDestroy');\n      this._isBeingDestroyed = true;\n      var i;\n      // remove self from parent. only necessary\n      // if parent is not being destroyed as well.\n      var parent = this.$parent;\n      if (parent && !parent._isBeingDestroyed) {\n        parent.$children.$remove(this);\n        // unregister ref (remove: true)\n        this._updateRef(true);\n      }\n      // destroy all children.\n      i = this.$children.length;\n      while (i--) {\n        this.$children[i].$destroy();\n      }\n      // teardown props\n      if (this._propsUnlinkFn) {\n        this._propsUnlinkFn();\n      }\n      // teardown all directives. this also tearsdown all\n      // directive-owned watchers.\n      if (this._unlinkFn) {\n        this._unlinkFn();\n      }\n      i = this._watchers.length;\n      while (i--) {\n        this._watchers[i].teardown();\n      }\n      // remove reference to self on $el\n      if (this.$el) {\n        this.$el.__vue__ = null;\n      }\n\n      destroyReady = true;\n      cleanupIfPossible();\n    };\n\n    /**\n     * Clean up to ensure garbage collection.\n     * This is called after the leave transition if there\n     * is any.\n     */\n\n    Vue.prototype._cleanup = function () {\n      if (this._isDestroyed) {\n        return;\n      }\n      // remove self from owner fragment\n      // do it in cleanup so that we can call $destroy with\n      // defer right when a fragment is about to be removed.\n      if (this._frag) {\n        this._frag.children.$remove(this);\n      }\n      // remove reference from data ob\n      // frozen object may not have observer.\n      if (this._data.__ob__) {\n        this._data.__ob__.removeVm(this);\n      }\n      // Clean up references to private properties and other\n      // instances. preserve reference to _data so that proxy\n      // accessors still work. The only potential side effect\n      // here is that mutating the instance after it's destroyed\n      // may affect the state of other components that are still\n      // observing the same object, but that seems to be a\n      // reasonable responsibility for the user rather than\n      // always throwing an error on them.\n      this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n      // call the last hook...\n      this._isDestroyed = true;\n      this._callHook('destroyed');\n      // turn off all instance listeners.\n      this.$off();\n    };\n  }\n\n  function miscMixin (Vue) {\n\n    /**\n     * Apply a list of filter (descriptors) to a value.\n     * Using plain for loops here because this will be called in\n     * the getter of any watcher with filters so it is very\n     * performance sensitive.\n     *\n     * @param {*} value\n     * @param {*} [oldValue]\n     * @param {Array} filters\n     * @param {Boolean} write\n     * @return {*}\n     */\n\n    Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n      var filter, fn, args, arg, offset, i, l, j, k;\n      for (i = 0, l = filters.length; i < l; i++) {\n        filter = filters[i];\n        fn = resolveAsset(this.$options, 'filters', filter.name);\n        if ('development' !== 'production') {\n          assertAsset(fn, 'filter', filter.name);\n        }\n        if (!fn) continue;\n        fn = write ? fn.write : fn.read || fn;\n        if (typeof fn !== 'function') continue;\n        args = write ? [value, oldValue] : [value];\n        offset = write ? 2 : 1;\n        if (filter.args) {\n          for (j = 0, k = filter.args.length; j < k; j++) {\n            arg = filter.args[j];\n            args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n          }\n        }\n        value = fn.apply(this, args);\n      }\n      return value;\n    };\n\n    /**\n     * Resolve a component, depending on whether the component\n     * is defined normally or using an async factory function.\n     * Resolves synchronously if already resolved, otherwise\n     * resolves asynchronously and caches the resolved\n     * constructor on the factory.\n     *\n     * @param {String} id\n     * @param {Function} cb\n     */\n\n    Vue.prototype._resolveComponent = function (id, cb) {\n      var factory = resolveAsset(this.$options, 'components', id);\n      if ('development' !== 'production') {\n        assertAsset(factory, 'component', id);\n      }\n      if (!factory) {\n        return;\n      }\n      // async component factory\n      if (!factory.options) {\n        if (factory.resolved) {\n          // cached\n          cb(factory.resolved);\n        } else if (factory.requested) {\n          // pool callbacks\n          factory.pendingCallbacks.push(cb);\n        } else {\n          factory.requested = true;\n          var cbs = factory.pendingCallbacks = [cb];\n          factory(function resolve(res) {\n            if (isPlainObject(res)) {\n              res = Vue.extend(res);\n            }\n            // cache resolved\n            factory.resolved = res;\n            // invoke callbacks\n            for (var i = 0, l = cbs.length; i < l; i++) {\n              cbs[i](res);\n            }\n          }, function reject(reason) {\n            'development' !== 'production' && warn('Failed to resolve async component: ' + id + '. ' + (reason ? '\\nReason: ' + reason : ''));\n          });\n        }\n      } else {\n        // normal component\n        cb(factory);\n      }\n    };\n  }\n\n  function globalAPI (Vue) {\n\n    /**\n     * Expose useful internals\n     */\n\n    Vue.util = util;\n    Vue.config = config;\n    Vue.set = set;\n    Vue['delete'] = del;\n    Vue.nextTick = nextTick;\n\n    /**\n     * The following are exposed for advanced usage / plugins\n     */\n\n    Vue.compiler = compiler;\n    Vue.FragmentFactory = FragmentFactory;\n    Vue.internalDirectives = internalDirectives;\n    Vue.parsers = {\n      path: path,\n      text: text$1,\n      template: template,\n      directive: directive,\n      expression: expression\n    };\n\n    /**\n     * Each instance constructor, including Vue, has a unique\n     * cid. This enables us to create wrapped \"child\n     * constructors\" for prototypal inheritance and cache them.\n     */\n\n    Vue.cid = 0;\n    var cid = 1;\n\n    /**\n     * Class inheritance\n     *\n     * @param {Object} extendOptions\n     */\n\n    Vue.extend = function (extendOptions) {\n      extendOptions = extendOptions || {};\n      var Super = this;\n      var isFirstExtend = Super.cid === 0;\n      if (isFirstExtend && extendOptions._Ctor) {\n        return extendOptions._Ctor;\n      }\n      var name = extendOptions.name || Super.options.name;\n      if ('development' !== 'production') {\n        if (!/^[a-zA-Z][\\w-]+$/.test(name)) {\n          warn('Invalid component name: ' + name);\n          name = null;\n        }\n      }\n      var Sub = createClass(name || 'VueComponent');\n      Sub.prototype = Object.create(Super.prototype);\n      Sub.prototype.constructor = Sub;\n      Sub.cid = cid++;\n      Sub.options = mergeOptions(Super.options, extendOptions);\n      Sub['super'] = Super;\n      // allow further extension\n      Sub.extend = Super.extend;\n      // create asset registers, so extended classes\n      // can have their private assets too.\n      config._assetTypes.forEach(function (type) {\n        Sub[type] = Super[type];\n      });\n      // enable recursive self-lookup\n      if (name) {\n        Sub.options.components[name] = Sub;\n      }\n      // cache constructor\n      if (isFirstExtend) {\n        extendOptions._Ctor = Sub;\n      }\n      return Sub;\n    };\n\n    /**\n     * A function that returns a sub-class constructor with the\n     * given name. This gives us much nicer output when\n     * logging instances in the console.\n     *\n     * @param {String} name\n     * @return {Function}\n     */\n\n    function createClass(name) {\n      return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    }\n\n    /**\n     * Plugin system\n     *\n     * @param {Object} plugin\n     */\n\n    Vue.use = function (plugin) {\n      /* istanbul ignore if */\n      if (plugin.installed) {\n        return;\n      }\n      // additional parameters\n      var args = toArray(arguments, 1);\n      args.unshift(this);\n      if (typeof plugin.install === 'function') {\n        plugin.install.apply(plugin, args);\n      } else {\n        plugin.apply(null, args);\n      }\n      plugin.installed = true;\n      return this;\n    };\n\n    /**\n     * Apply a global mixin by merging it into the default\n     * options.\n     */\n\n    Vue.mixin = function (mixin) {\n      Vue.options = mergeOptions(Vue.options, mixin);\n    };\n\n    /**\n     * Create asset registration methods with the following\n     * signature:\n     *\n     * @param {String} id\n     * @param {*} definition\n     */\n\n    config._assetTypes.forEach(function (type) {\n      Vue[type] = function (id, definition) {\n        if (!definition) {\n          return this.options[type + 's'][id];\n        } else {\n          /* istanbul ignore if */\n          if ('development' !== 'production') {\n            if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n              warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n            }\n          }\n          if (type === 'component' && isPlainObject(definition)) {\n            definition.name = id;\n            definition = Vue.extend(definition);\n          }\n          this.options[type + 's'][id] = definition;\n          return definition;\n        }\n      };\n    });\n  }\n\n  var filterRE = /[^|]\\|[^|]/;\n\n  function dataAPI (Vue) {\n\n    /**\n     * Get the value from an expression on this vm.\n     *\n     * @param {String} exp\n     * @param {Boolean} [asStatement]\n     * @return {*}\n     */\n\n    Vue.prototype.$get = function (exp, asStatement) {\n      var res = parseExpression(exp);\n      if (res) {\n        if (asStatement && !isSimplePath(exp)) {\n          var self = this;\n          return function statementHandler() {\n            self.$arguments = toArray(arguments);\n            var result = res.get.call(self, self);\n            self.$arguments = null;\n            return result;\n          };\n        } else {\n          try {\n            return res.get.call(this, this);\n          } catch (e) {}\n        }\n      }\n    };\n\n    /**\n     * Set the value from an expression on this vm.\n     * The expression must be a valid left-hand\n     * expression in an assignment.\n     *\n     * @param {String} exp\n     * @param {*} val\n     */\n\n    Vue.prototype.$set = function (exp, val) {\n      var res = parseExpression(exp, true);\n      if (res && res.set) {\n        res.set.call(this, this, val);\n      }\n    };\n\n    /**\n     * Delete a property on the VM\n     *\n     * @param {String} key\n     */\n\n    Vue.prototype.$delete = function (key) {\n      del(this._data, key);\n    };\n\n    /**\n     * Watch an expression, trigger callback when its\n     * value changes.\n     *\n     * @param {String|Function} expOrFn\n     * @param {Function} cb\n     * @param {Object} [options]\n     *                 - {Boolean} deep\n     *                 - {Boolean} immediate\n     * @return {Function} - unwatchFn\n     */\n\n    Vue.prototype.$watch = function (expOrFn, cb, options) {\n      var vm = this;\n      var parsed;\n      if (typeof expOrFn === 'string') {\n        parsed = parseDirective(expOrFn);\n        expOrFn = parsed.expression;\n      }\n      var watcher = new Watcher(vm, expOrFn, cb, {\n        deep: options && options.deep,\n        sync: options && options.sync,\n        filters: parsed && parsed.filters,\n        user: !options || options.user !== false\n      });\n      if (options && options.immediate) {\n        cb.call(vm, watcher.value);\n      }\n      return function unwatchFn() {\n        watcher.teardown();\n      };\n    };\n\n    /**\n     * Evaluate a text directive, including filters.\n     *\n     * @param {String} text\n     * @param {Boolean} [asStatement]\n     * @return {String}\n     */\n\n    Vue.prototype.$eval = function (text, asStatement) {\n      // check for filters.\n      if (filterRE.test(text)) {\n        var dir = parseDirective(text);\n        // the filter regex check might give false positive\n        // for pipes inside strings, so it's possible that\n        // we don't get any filters here\n        var val = this.$get(dir.expression, asStatement);\n        return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n      } else {\n        // no filter\n        return this.$get(text, asStatement);\n      }\n    };\n\n    /**\n     * Interpolate a piece of template text.\n     *\n     * @param {String} text\n     * @return {String}\n     */\n\n    Vue.prototype.$interpolate = function (text) {\n      var tokens = parseText(text);\n      var vm = this;\n      if (tokens) {\n        if (tokens.length === 1) {\n          return vm.$eval(tokens[0].value) + '';\n        } else {\n          return tokens.map(function (token) {\n            return token.tag ? vm.$eval(token.value) : token.value;\n          }).join('');\n        }\n      } else {\n        return text;\n      }\n    };\n\n    /**\n     * Log instance data as a plain JS object\n     * so that it is easier to inspect in console.\n     * This method assumes console is available.\n     *\n     * @param {String} [path]\n     */\n\n    Vue.prototype.$log = function (path) {\n      var data = path ? getPath(this._data, path) : this._data;\n      if (data) {\n        data = clean(data);\n      }\n      // include computed fields\n      if (!path) {\n        for (var key in this.$options.computed) {\n          data[key] = clean(this[key]);\n        }\n      }\n      console.log(data);\n    };\n\n    /**\n     * \"clean\" a getter/setter converted object into a plain\n     * object copy.\n     *\n     * @param {Object} - obj\n     * @return {Object}\n     */\n\n    function clean(obj) {\n      return JSON.parse(JSON.stringify(obj));\n    }\n  }\n\n  function domAPI (Vue) {\n\n    /**\n     * Convenience on-instance nextTick. The callback is\n     * auto-bound to the instance, and this avoids component\n     * modules having to rely on the global Vue.\n     *\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$nextTick = function (fn) {\n      nextTick(fn, this);\n    };\n\n    /**\n     * Append instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$appendTo = function (target, cb, withTransition) {\n      return insert(this, target, cb, withTransition, append, appendWithTransition);\n    };\n\n    /**\n     * Prepend instance to target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$prependTo = function (target, cb, withTransition) {\n      target = query(target);\n      if (target.hasChildNodes()) {\n        this.$before(target.firstChild, cb, withTransition);\n      } else {\n        this.$appendTo(target, cb, withTransition);\n      }\n      return this;\n    };\n\n    /**\n     * Insert instance before target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$before = function (target, cb, withTransition) {\n      return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n    };\n\n    /**\n     * Insert instance after target\n     *\n     * @param {Node} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$after = function (target, cb, withTransition) {\n      target = query(target);\n      if (target.nextSibling) {\n        this.$before(target.nextSibling, cb, withTransition);\n      } else {\n        this.$appendTo(target.parentNode, cb, withTransition);\n      }\n      return this;\n    };\n\n    /**\n     * Remove instance from DOM\n     *\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition] - defaults to true\n     */\n\n    Vue.prototype.$remove = function (cb, withTransition) {\n      if (!this.$el.parentNode) {\n        return cb && cb();\n      }\n      var inDocument = this._isAttached && inDoc(this.$el);\n      // if we are not in document, no need to check\n      // for transitions\n      if (!inDocument) withTransition = false;\n      var self = this;\n      var realCb = function realCb() {\n        if (inDocument) self._callHook('detached');\n        if (cb) cb();\n      };\n      if (this._isFragment) {\n        removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n      } else {\n        var op = withTransition === false ? removeWithCb : removeWithTransition;\n        op(this.$el, this, realCb);\n      }\n      return this;\n    };\n\n    /**\n     * Shared DOM insertion function.\n     *\n     * @param {Vue} vm\n     * @param {Element} target\n     * @param {Function} [cb]\n     * @param {Boolean} [withTransition]\n     * @param {Function} op1 - op for non-transition insert\n     * @param {Function} op2 - op for transition insert\n     * @return vm\n     */\n\n    function insert(vm, target, cb, withTransition, op1, op2) {\n      target = query(target);\n      var targetIsDetached = !inDoc(target);\n      var op = withTransition === false || targetIsDetached ? op1 : op2;\n      var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n      if (vm._isFragment) {\n        mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n          op(node, target, vm);\n        });\n        cb && cb();\n      } else {\n        op(vm.$el, target, vm, cb);\n      }\n      if (shouldCallHook) {\n        vm._callHook('attached');\n      }\n      return vm;\n    }\n\n    /**\n     * Check for selectors\n     *\n     * @param {String|Element} el\n     */\n\n    function query(el) {\n      return typeof el === 'string' ? document.querySelector(el) : el;\n    }\n\n    /**\n     * Append operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function append(el, target, vm, cb) {\n      target.appendChild(el);\n      if (cb) cb();\n    }\n\n    /**\n     * InsertBefore operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Node} target\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function beforeWithCb(el, target, vm, cb) {\n      before(el, target);\n      if (cb) cb();\n    }\n\n    /**\n     * Remove operation that takes a callback.\n     *\n     * @param {Node} el\n     * @param {Vue} vm - unused\n     * @param {Function} [cb]\n     */\n\n    function removeWithCb(el, vm, cb) {\n      remove(el);\n      if (cb) cb();\n    }\n  }\n\n  function eventsAPI (Vue) {\n\n    /**\n     * Listen on the given `event` with `fn`.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$on = function (event, fn) {\n      (this._events[event] || (this._events[event] = [])).push(fn);\n      modifyListenerCount(this, event, 1);\n      return this;\n    };\n\n    /**\n     * Adds an `event` listener that will be invoked a single\n     * time then automatically removed.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$once = function (event, fn) {\n      var self = this;\n      function on() {\n        self.$off(event, on);\n        fn.apply(this, arguments);\n      }\n      on.fn = fn;\n      this.$on(event, on);\n      return this;\n    };\n\n    /**\n     * Remove the given callback for `event` or all\n     * registered callbacks.\n     *\n     * @param {String} event\n     * @param {Function} fn\n     */\n\n    Vue.prototype.$off = function (event, fn) {\n      var cbs;\n      // all\n      if (!arguments.length) {\n        if (this.$parent) {\n          for (event in this._events) {\n            cbs = this._events[event];\n            if (cbs) {\n              modifyListenerCount(this, event, -cbs.length);\n            }\n          }\n        }\n        this._events = {};\n        return this;\n      }\n      // specific event\n      cbs = this._events[event];\n      if (!cbs) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        modifyListenerCount(this, event, -cbs.length);\n        this._events[event] = null;\n        return this;\n      }\n      // specific handler\n      var cb;\n      var i = cbs.length;\n      while (i--) {\n        cb = cbs[i];\n        if (cb === fn || cb.fn === fn) {\n          modifyListenerCount(this, event, -1);\n          cbs.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Trigger an event on self.\n     *\n     * @param {String|Object} event\n     * @return {Boolean} shouldPropagate\n     */\n\n    Vue.prototype.$emit = function (event) {\n      var isSource = typeof event === 'string';\n      event = isSource ? event : event.name;\n      var cbs = this._events[event];\n      var shouldPropagate = isSource || !cbs;\n      if (cbs) {\n        cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n        // this is a somewhat hacky solution to the question raised\n        // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n        // the propagation handling is somewhat broken. Therefore we\n        // need to treat these inline callbacks differently.\n        var hasParentCbs = isSource && cbs.some(function (cb) {\n          return cb._fromParent;\n        });\n        if (hasParentCbs) {\n          shouldPropagate = false;\n        }\n        var args = toArray(arguments, 1);\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          var cb = cbs[i];\n          var res = cb.apply(this, args);\n          if (res === true && (!hasParentCbs || cb._fromParent)) {\n            shouldPropagate = true;\n          }\n        }\n      }\n      return shouldPropagate;\n    };\n\n    /**\n     * Recursively broadcast an event to all children instances.\n     *\n     * @param {String|Object} event\n     * @param {...*} additional arguments\n     */\n\n    Vue.prototype.$broadcast = function (event) {\n      var isSource = typeof event === 'string';\n      event = isSource ? event : event.name;\n      // if no child has registered for this event,\n      // then there's no need to broadcast.\n      if (!this._eventsCount[event]) return;\n      var children = this.$children;\n      var args = toArray(arguments);\n      if (isSource) {\n        // use object event to indicate non-source emit\n        // on children\n        args[0] = { name: event, source: this };\n      }\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n        var shouldPropagate = child.$emit.apply(child, args);\n        if (shouldPropagate) {\n          child.$broadcast.apply(child, args);\n        }\n      }\n      return this;\n    };\n\n    /**\n     * Recursively propagate an event up the parent chain.\n     *\n     * @param {String} event\n     * @param {...*} additional arguments\n     */\n\n    Vue.prototype.$dispatch = function (event) {\n      var shouldPropagate = this.$emit.apply(this, arguments);\n      if (!shouldPropagate) return;\n      var parent = this.$parent;\n      var args = toArray(arguments);\n      // use object event to indicate non-source emit\n      // on parents\n      args[0] = { name: event, source: this };\n      while (parent) {\n        shouldPropagate = parent.$emit.apply(parent, args);\n        parent = shouldPropagate ? parent.$parent : null;\n      }\n      return this;\n    };\n\n    /**\n     * Modify the listener counts on all parents.\n     * This bookkeeping allows $broadcast to return early when\n     * no child has listened to a certain event.\n     *\n     * @param {Vue} vm\n     * @param {String} event\n     * @param {Number} count\n     */\n\n    var hookRE = /^hook:/;\n    function modifyListenerCount(vm, event, count) {\n      var parent = vm.$parent;\n      // hooks do not get broadcasted so no need\n      // to do bookkeeping for them\n      if (!parent || !count || hookRE.test(event)) return;\n      while (parent) {\n        parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n        parent = parent.$parent;\n      }\n    }\n  }\n\n  function lifecycleAPI (Vue) {\n\n    /**\n     * Set instance target element and kick off the compilation\n     * process. The passed in `el` can be a selector string, an\n     * existing Element, or a DocumentFragment (for block\n     * instances).\n     *\n     * @param {Element|DocumentFragment|string} el\n     * @public\n     */\n\n    Vue.prototype.$mount = function (el) {\n      if (this._isCompiled) {\n        'development' !== 'production' && warn('$mount() should be called only once.');\n        return;\n      }\n      el = query(el);\n      if (!el) {\n        el = document.createElement('div');\n      }\n      this._compile(el);\n      this._initDOMHooks();\n      if (inDoc(this.$el)) {\n        this._callHook('attached');\n        ready.call(this);\n      } else {\n        this.$once('hook:attached', ready);\n      }\n      return this;\n    };\n\n    /**\n     * Mark an instance as ready.\n     */\n\n    function ready() {\n      this._isAttached = true;\n      this._isReady = true;\n      this._callHook('ready');\n    }\n\n    /**\n     * Teardown the instance, simply delegate to the internal\n     * _destroy.\n     */\n\n    Vue.prototype.$destroy = function (remove, deferCleanup) {\n      this._destroy(remove, deferCleanup);\n    };\n\n    /**\n     * Partially compile a piece of DOM and return a\n     * decompile function.\n     *\n     * @param {Element|DocumentFragment} el\n     * @param {Vue} [host]\n     * @return {Function}\n     */\n\n    Vue.prototype.$compile = function (el, host, scope, frag) {\n      return compile(el, this.$options, true)(this, el, host, scope, frag);\n    };\n  }\n\n  /**\n   * The exposed Vue constructor.\n   *\n   * API conventions:\n   * - public API methods/properties are prefixed with `$`\n   * - internal methods/properties are prefixed with `_`\n   * - non-prefixed properties are assumed to be proxied user\n   *   data.\n   *\n   * @constructor\n   * @param {Object} [options]\n   * @public\n   */\n\n  function Vue(options) {\n    this._init(options);\n  }\n\n  // install internals\n  initMixin(Vue);\n  stateMixin(Vue);\n  eventsMixin(Vue);\n  lifecycleMixin(Vue);\n  miscMixin(Vue);\n\n  // install APIs\n  globalAPI(Vue);\n  dataAPI(Vue);\n  domAPI(Vue);\n  eventsAPI(Vue);\n  lifecycleAPI(Vue);\n\n  var convertArray = vFor._postProcess;\n\n  /**\n   * Limit filter for arrays\n   *\n   * @param {Number} n\n   * @param {Number} offset (Decimal expected)\n   */\n\n  function limitBy(arr, n, offset) {\n    offset = offset ? parseInt(offset, 10) : 0;\n    n = toNumber(n);\n    return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n  }\n\n  /**\n   * Filter filter for arrays\n   *\n   * @param {String} search\n   * @param {String} [delimiter]\n   * @param {String} ...dataKeys\n   */\n\n  function filterBy(arr, search, delimiter) {\n    arr = convertArray(arr);\n    if (search == null) {\n      return arr;\n    }\n    if (typeof search === 'function') {\n      return arr.filter(search);\n    }\n    // cast to lowercase string\n    search = ('' + search).toLowerCase();\n    // allow optional `in` delimiter\n    // because why not\n    var n = delimiter === 'in' ? 3 : 2;\n    // extract and flatten keys\n    var keys = toArray(arguments, n).reduce(function (prev, cur) {\n      return prev.concat(cur);\n    }, []);\n    var res = [];\n    var item, key, val, j;\n    for (var i = 0, l = arr.length; i < l; i++) {\n      item = arr[i];\n      val = item && item.$value || item;\n      j = keys.length;\n      if (j) {\n        while (j--) {\n          key = keys[j];\n          if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n            res.push(item);\n            break;\n          }\n        }\n      } else if (contains(item, search)) {\n        res.push(item);\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Filter filter for arrays\n   *\n   * @param {String} sortKey\n   * @param {String} reverse\n   */\n\n  function orderBy(arr, sortKey, reverse) {\n    arr = convertArray(arr);\n    if (!sortKey) {\n      return arr;\n    }\n    var order = reverse && reverse < 0 ? -1 : 1;\n    // sort on a copy to avoid mutating original array\n    return arr.slice().sort(function (a, b) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n      return a === b ? 0 : a > b ? order : -order;\n    });\n  }\n\n  /**\n   * String contain helper\n   *\n   * @param {*} val\n   * @param {String} search\n   */\n\n  function contains(val, search) {\n    var i;\n    if (isPlainObject(val)) {\n      var keys = Object.keys(val);\n      i = keys.length;\n      while (i--) {\n        if (contains(val[keys[i]], search)) {\n          return true;\n        }\n      }\n    } else if (isArray(val)) {\n      i = val.length;\n      while (i--) {\n        if (contains(val[i], search)) {\n          return true;\n        }\n      }\n    } else if (val != null) {\n      return val.toString().toLowerCase().indexOf(search) > -1;\n    }\n  }\n\n  var digitsRE = /(\\d{3})(?=\\d)/g;\n\n  // asset collections must be a plain object.\n  var filters = {\n\n    orderBy: orderBy,\n    filterBy: filterBy,\n    limitBy: limitBy,\n\n    /**\n     * Stringify value.\n     *\n     * @param {Number} indent\n     */\n\n    json: {\n      read: function read(value, indent) {\n        return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n      },\n      write: function write(value) {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return value;\n        }\n      }\n    },\n\n    /**\n     * 'abc' => 'Abc'\n     */\n\n    capitalize: function capitalize(value) {\n      if (!value && value !== 0) return '';\n      value = value.toString();\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    },\n\n    /**\n     * 'abc' => 'ABC'\n     */\n\n    uppercase: function uppercase(value) {\n      return value || value === 0 ? value.toString().toUpperCase() : '';\n    },\n\n    /**\n     * 'AbC' => 'abc'\n     */\n\n    lowercase: function lowercase(value) {\n      return value || value === 0 ? value.toString().toLowerCase() : '';\n    },\n\n    /**\n     * 12345 => $12,345.00\n     *\n     * @param {String} sign\n     */\n\n    currency: function currency(value, _currency) {\n      value = parseFloat(value);\n      if (!isFinite(value) || !value && value !== 0) return '';\n      _currency = _currency != null ? _currency : '$';\n      var stringified = Math.abs(value).toFixed(2);\n      var _int = stringified.slice(0, -3);\n      var i = _int.length % 3;\n      var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n      var _float = stringified.slice(-3);\n      var sign = value < 0 ? '-' : '';\n      return _currency + sign + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n    },\n\n    /**\n     * 'item' => 'items'\n     *\n     * @params\n     *  an array of strings corresponding to\n     *  the single, double, triple ... forms of the word to\n     *  be pluralized. When the number to be pluralized\n     *  exceeds the length of the args, it will use the last\n     *  entry in the array.\n     *\n     *  e.g. ['single', 'double', 'triple', 'multiple']\n     */\n\n    pluralize: function pluralize(value) {\n      var args = toArray(arguments, 1);\n      return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n    },\n\n    /**\n     * Debounce a handler function.\n     *\n     * @param {Function} handler\n     * @param {Number} delay = 300\n     * @return {Function}\n     */\n\n    debounce: function debounce(handler, delay) {\n      if (!handler) return;\n      if (!delay) {\n        delay = 300;\n      }\n      return _debounce(handler, delay);\n    }\n  };\n\n  var partial = {\n\n    priority: PARTIAL,\n\n    params: ['name'],\n\n    // watch changes to name for dynamic partials\n    paramWatchers: {\n      name: function name(value) {\n        vIf.remove.call(this);\n        if (value) {\n          this.insert(value);\n        }\n      }\n    },\n\n    bind: function bind() {\n      this.anchor = createAnchor('v-partial');\n      replace(this.el, this.anchor);\n      this.insert(this.params.name);\n    },\n\n    insert: function insert(id) {\n      var partial = resolveAsset(this.vm.$options, 'partials', id);\n      if ('development' !== 'production') {\n        assertAsset(partial, 'partial', id);\n      }\n      if (partial) {\n        this.factory = new FragmentFactory(this.vm, partial);\n        vIf.insert.call(this);\n      }\n    },\n\n    unbind: function unbind() {\n      if (this.frag) {\n        this.frag.destroy();\n      }\n    }\n  };\n\n  // This is the elementDirective that handles <content>\n  // transclusions. It relies on the raw content of an\n  // instance being stored as `$options._content` during\n  // the transclude phase.\n\n  // We are exporting two versions, one for named and one\n  // for unnamed, because the unnamed slots must be compiled\n  // AFTER all named slots have selected their content. So\n  // we need to give them different priorities in the compilation\n  // process. (See #1965)\n\n  var slot = {\n\n    priority: SLOT,\n\n    bind: function bind() {\n      var host = this.vm;\n      var raw = host.$options._content;\n      if (!raw) {\n        this.fallback();\n        return;\n      }\n      var context = host._context;\n      var slotName = this.params && this.params.name;\n      if (!slotName) {\n        // Default slot\n        this.tryCompile(extractFragment(raw.childNodes, raw, true), context, host);\n      } else {\n        // Named slot\n        var selector = '[slot=\"' + slotName + '\"]';\n        var nodes = raw.querySelectorAll(selector);\n        if (nodes.length) {\n          this.tryCompile(extractFragment(nodes, raw), context, host);\n        } else {\n          this.fallback();\n        }\n      }\n    },\n\n    tryCompile: function tryCompile(content, context, host) {\n      if (content.hasChildNodes()) {\n        this.compile(content, context, host);\n      } else {\n        this.fallback();\n      }\n    },\n\n    compile: function compile(content, context, host) {\n      if (content && context) {\n        var scope = host ? host._scope : this._scope;\n        this.unlink = context.$compile(content, host, scope, this._frag);\n      }\n      if (content) {\n        replace(this.el, content);\n      } else {\n        remove(this.el);\n      }\n    },\n\n    fallback: function fallback() {\n      this.compile(extractContent(this.el, true), this.vm);\n    },\n\n    unbind: function unbind() {\n      if (this.unlink) {\n        this.unlink();\n      }\n    }\n  };\n\n  var namedSlot = extend(extend({}, slot), {\n    priority: slot.priority + 1,\n    params: ['name']\n  });\n\n  /**\n   * Extract qualified content nodes from a node list.\n   *\n   * @param {NodeList} nodes\n   * @param {Element} parent\n   * @param {Boolean} main\n   * @return {DocumentFragment}\n   */\n\n  function extractFragment(nodes, parent, main) {\n    var frag = document.createDocumentFragment();\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      var node = nodes[i];\n      // if this is the main outlet, we want to skip all\n      // previously selected nodes;\n      // otherwise, we want to mark the node as selected.\n      // clone the node so the original raw content remains\n      // intact. this ensures proper re-compilation in cases\n      // where the outlet is inside a conditional block\n      if (main && !node.__v_selected) {\n        append(node);\n      } else if (!main && node.parentNode === parent) {\n        node.__v_selected = true;\n        append(node);\n      }\n    }\n    return frag;\n\n    function append(node) {\n      if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n        node = parseTemplate(node);\n      }\n      node = cloneNode(node);\n      frag.appendChild(node);\n    }\n  }\n\n  var elementDirectives = {\n    slot: slot,\n    _namedSlot: namedSlot, // same as slot but with higher priority\n    partial: partial\n  };\n\n  Vue.version = '1.0.14';\n\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: publicDirectives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  // devtools global hook\n  /* istanbul ignore if */\n  if ('development' !== 'production' && inBrowser) {\n    if (window.__VUE_DEVTOOLS_GLOBAL_HOOK__) {\n      window.__VUE_DEVTOOLS_GLOBAL_HOOK__.emit('init', Vue);\n    } else if (/Chrome\\/\\d+/.test(navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n\n  return Vue;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.js\n ** module id = 5\n ** module chunks = 0\n **/","\"use strict\";\n\nvar _defineProperty = require(\"babel-runtime/core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nexports.__esModule = true;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/helpers/defineProperty.js\n ** module id = 6\n ** module chunks = 0\n **/","/*!\n * Vuex v0.6.2\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Vuex = factory());\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n  babelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  babelHelpers.createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  babelHelpers.toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  babelHelpers;\n\n  /**\n   * Merge an array of objects into one.\n   *\n   * @param {Array<Object>} arr\n   * @return {Object}\n   */\n\n  function mergeObjects(arr) {\n    return arr.reduce(function (prev, obj) {\n      Object.keys(obj).forEach(function (key) {\n        var existing = prev[key];\n        if (existing) {\n          // allow multiple mutation objects to contain duplicate\n          // handlers for the same mutation type\n          if (Array.isArray(existing)) {\n            existing.push(obj[key]);\n          } else {\n            prev[key] = [prev[key], obj[key]];\n          }\n        } else {\n          prev[key] = obj[key];\n        }\n      });\n      return prev;\n    }, {});\n  }\n\n  /**\n   * Deep clone an object. Faster than JSON.parse(JSON.stringify()).\n   *\n   * @param {*} obj\n   * @return {*}\n   */\n\n  function deepClone(obj) {\n    if (Array.isArray(obj)) {\n      return obj.map(deepClone);\n    } else if (obj && (typeof obj === 'undefined' ? 'undefined' : babelHelpers.typeof(obj)) === 'object') {\n      var cloned = {};\n      var keys = Object.keys(obj);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i];\n        cloned[key] = deepClone(obj[key]);\n      }\n      return cloned;\n    } else {\n      return obj;\n    }\n  }\n\n  /**\n   * Hacks to get access to Vue internals.\n   * Maybe we should expose these...\n   */\n\n  var Watcher = void 0;\n  function getWatcher(vm) {\n    if (!Watcher) {\n      var unwatch = vm.$watch('__vuex__', function (a) {\n        return a;\n      });\n      Watcher = vm._watchers[0].constructor;\n      unwatch();\n    }\n    return Watcher;\n  }\n\n  var Dep = void 0;\n  function getDep(vm) {\n    if (!Dep) {\n      Dep = vm._data.__ob__.dep.constructor;\n    }\n    return Dep;\n  }\n\n  var hook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n  var devtoolMiddleware = {\n    onInit: function onInit(state, store) {\n      if (!hook) return;\n      hook.emit('vuex:init', store);\n      hook.on('vuex:travel-to-state', function (targetState) {\n        var currentState = store._vm._data;\n        store._dispatching = true;\n        Object.keys(targetState).forEach(function (key) {\n          currentState[key] = targetState[key];\n        });\n        store._dispatching = false;\n      });\n    },\n    onMutation: function onMutation(mutation, state) {\n      if (!hook) return;\n      hook.emit('vuex:mutation', mutation, state);\n    }\n  };\n\n  function override (Vue) {\n    // override init and inject vuex init procedure\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function () {\n      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n      _init.call(this, options);\n    };\n\n    function vuexInit() {\n      var options = this.$options;\n      var store = options.store;\n      var vuex = options.vuex;\n      // store injection\n\n      if (store) {\n        this.$store = store;\n      } else if (options.parent && options.parent.$store) {\n        this.$store = options.parent.$store;\n      }\n      // vuex option handling\n      if (vuex) {\n        if (!this.$store) {\n          console.warn('[vuex] store not injected. make sure to ' + 'provide the store option in your root component.');\n        }\n        var state = vuex.state;\n        var getters = vuex.getters;\n        var actions = vuex.actions;\n        // handle deprecated state option\n\n        if (state && !getters) {\n          console.warn('[vuex] vuex.state option will been deprecated in 1.0. ' + 'Use vuex.getters instead.');\n          getters = state;\n        }\n        // getters\n        if (getters) {\n          options.computed = options.computed || {};\n          for (var key in getters) {\n            defineVuexGetter(this, key, getters[key]);\n          }\n        }\n        // actions\n        if (actions) {\n          options.methods = options.methods || {};\n          for (var _key in actions) {\n            options.methods[_key] = makeBoundAction(actions[_key], this.$store);\n          }\n        }\n      }\n    }\n\n    function setter() {\n      throw new Error('vuex getter properties are read-only.');\n    }\n\n    function defineVuexGetter(vm, key, getter) {\n      Object.defineProperty(vm, key, {\n        enumerable: true,\n        configurable: true,\n        get: makeComputedGetter(vm.$store, getter),\n        set: setter\n      });\n    }\n\n    function makeComputedGetter(store, getter) {\n      var id = store._getterCacheId;\n      // cached\n      if (getter[id]) {\n        return getter[id];\n      }\n      var vm = store._vm;\n      var Watcher = getWatcher(vm);\n      var Dep = getDep(vm);\n      var watcher = new Watcher(vm, function (state) {\n        return getter(state);\n      }, null, { lazy: true });\n      var computedGetter = function computedGetter() {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value;\n      };\n      getter[id] = computedGetter;\n      return computedGetter;\n    }\n\n    function makeBoundAction(action, store) {\n      return function vuexBoundAction() {\n        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return action.call.apply(action, [this, store].concat(args));\n      };\n    }\n\n    // option merging\n    var merge = Vue.config.optionMergeStrategies.computed;\n    Vue.config.optionMergeStrategies.vuex = function (toVal, fromVal) {\n      if (!toVal) return fromVal;\n      if (!fromVal) return toVal;\n      return {\n        getters: merge(toVal.getters, fromVal.getters),\n        state: merge(toVal.state, fromVal.state),\n        actions: merge(toVal.actions, fromVal.actions)\n      };\n    };\n  }\n\n  var Vue = void 0;\n  var uid = 0;\n\n  var Store = function () {\n\n    /**\n     * @param {Object} options\n     *        - {Object} state\n     *        - {Object} actions\n     *        - {Object} mutations\n     *        - {Array} middlewares\n     *        - {Boolean} strict\n     */\n\n    function Store() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$state = _ref.state;\n      var state = _ref$state === undefined ? {} : _ref$state;\n      var _ref$mutations = _ref.mutations;\n      var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n      var _ref$modules = _ref.modules;\n      var modules = _ref$modules === undefined ? {} : _ref$modules;\n      var _ref$middlewares = _ref.middlewares;\n      var middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares;\n      var _ref$strict = _ref.strict;\n      var strict = _ref$strict === undefined ? false : _ref$strict;\n      babelHelpers.classCallCheck(this, Store);\n\n      this._getterCacheId = 'vuex_store_' + uid++;\n      this._dispatching = false;\n      this._rootMutations = this._mutations = mutations;\n      this._modules = modules;\n      // bind dispatch to self\n      var dispatch = this.dispatch;\n      this.dispatch = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        dispatch.apply(_this, args);\n      };\n      // use a Vue instance to store the state tree\n      // suppress warnings just in case the user has added\n      // some funky global mixins\n      if (!Vue) {\n        throw new Error('[vuex] must call Vue.use(Vuex) before creating a store instance.');\n      }\n      var silent = Vue.config.silent;\n      Vue.config.silent = true;\n      this._vm = new Vue({\n        data: state\n      });\n      Vue.config.silent = silent;\n      this._setupModuleState(state, modules);\n      this._setupModuleMutations(modules);\n      this._setupMiddlewares(middlewares, state);\n      // add extra warnings in strict mode\n      if (strict) {\n        this._setupMutationCheck();\n      }\n    }\n\n    /**\n     * Getter for the entire state tree.\n     * Read only.\n     *\n     * @return {Object}\n     */\n\n    babelHelpers.createClass(Store, [{\n      key: 'dispatch',\n\n\n      /**\n       * Dispatch an action.\n       *\n       * @param {String} type\n       */\n\n      value: function dispatch(type) {\n        var _this2 = this;\n\n        for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          payload[_key2 - 1] = arguments[_key2];\n        }\n\n        // compatibility for object actions, e.g. FSA\n        if ((typeof type === 'undefined' ? 'undefined' : babelHelpers.typeof(type)) === 'object' && type.type && arguments.length === 1) {\n          payload = [type];\n          type = type.type;\n        }\n        var mutation = this._mutations[type];\n        var prevSnapshot = this._prevSnapshot;\n        var state = this.state;\n        var snapshot = void 0,\n            clonedPayload = void 0;\n        if (mutation) {\n          this._dispatching = true;\n          // apply the mutation\n          if (Array.isArray(mutation)) {\n            mutation.forEach(function (m) {\n              return m.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n            });\n          } else {\n            mutation.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n          }\n          this._dispatching = false;\n          // invoke middlewares\n          if (this._needSnapshots) {\n            snapshot = this._prevSnapshot = deepClone(state);\n            clonedPayload = deepClone(payload);\n          }\n          this._middlewares.forEach(function (m) {\n            if (m.onMutation) {\n              if (m.snapshot) {\n                m.onMutation({ type: type, payload: clonedPayload }, snapshot, prevSnapshot, _this2);\n              } else {\n                m.onMutation({ type: type, payload: payload }, state, _this2);\n              }\n            }\n          });\n        } else {\n          console.warn('[vuex] Unknown mutation: ' + type);\n        }\n      }\n\n      /**\n       * Watch state changes on the store.\n       * Same API as Vue's $watch, except when watching a function,\n       * the function gets the state as the first argument.\n       *\n       * @param {String|Function} expOrFn\n       * @param {Function} cb\n       * @param {Object} [options]\n       */\n\n    }, {\n      key: 'watch',\n      value: function watch(expOrFn, cb, options) {\n        var _this3 = this;\n\n        return this._vm.$watch(function () {\n          return typeof expOrFn === 'function' ? expOrFn(_this3.state) : _this3._vm.$get(expOrFn);\n        }, cb, options);\n      }\n\n      /**\n       * Hot update mutations & modules.\n       *\n       * @param {Object} options\n       *        - {Object} [mutations]\n       *        - {Object} [modules]\n       */\n\n    }, {\n      key: 'hotUpdate',\n      value: function hotUpdate() {\n        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var mutations = _ref2.mutations;\n        var modules = _ref2.modules;\n\n        this._rootMutations = this._mutations = mutations || this._rootMutations;\n        this._setupModuleMutations(modules || this._modules);\n      }\n\n      /**\n       * Attach sub state tree of each module to the root tree.\n       *\n       * @param {Object} state\n       * @param {Object} modules\n       */\n\n    }, {\n      key: '_setupModuleState',\n      value: function _setupModuleState(state, modules) {\n        var setPath = Vue.parsers.path.setPath;\n\n        Object.keys(modules).forEach(function (key) {\n          setPath(state, key, modules[key].state || {});\n        });\n      }\n\n      /**\n       * Bind mutations for each module to its sub tree and\n       * merge them all into one final mutations map.\n       *\n       * @param {Object} updatedModules\n       */\n\n    }, {\n      key: '_setupModuleMutations',\n      value: function _setupModuleMutations(updatedModules) {\n        var modules = this._modules;\n        var getPath = Vue.parsers.path.getPath;\n\n        var allMutations = [this._rootMutations];\n        Object.keys(updatedModules).forEach(function (key) {\n          modules[key] = updatedModules[key];\n        });\n        Object.keys(modules).forEach(function (key) {\n          var module = modules[key];\n          if (!module || !module.mutations) return;\n          // bind mutations to sub state tree\n          var mutations = {};\n          Object.keys(module.mutations).forEach(function (name) {\n            var original = module.mutations[name];\n            mutations[name] = function (state) {\n              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n                args[_key3 - 1] = arguments[_key3];\n              }\n\n              original.apply(undefined, [getPath(state, key)].concat(args));\n            };\n          });\n          allMutations.push(mutations);\n        });\n        this._mutations = mergeObjects(allMutations);\n      }\n\n      /**\n       * Setup mutation check: if the vuex instance's state is mutated\n       * outside of a mutation handler, we throw en error. This effectively\n       * enforces all mutations to the state to be trackable and hot-reloadble.\n       * However, this comes at a run time cost since we are doing a deep\n       * watch on the entire state tree, so it is only enalbed with the\n       * strict option is set to true.\n       */\n\n    }, {\n      key: '_setupMutationCheck',\n      value: function _setupMutationCheck() {\n        var _this4 = this;\n\n        var Watcher = getWatcher(this._vm);\n        /* eslint-disable no-new */\n        new Watcher(this._vm, '$data', function () {\n          if (!_this4._dispatching) {\n            throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n          }\n        }, { deep: true, sync: true });\n        /* eslint-enable no-new */\n      }\n\n      /**\n       * Setup the middlewares. The devtools middleware is always\n       * included, since it does nothing if no devtool is detected.\n       *\n       * A middleware can demand the state it receives to be\n       * \"snapshots\", i.e. deep clones of the actual state tree.\n       *\n       * @param {Array} middlewares\n       * @param {Object} state\n       */\n\n    }, {\n      key: '_setupMiddlewares',\n      value: function _setupMiddlewares(middlewares, state) {\n        var _this5 = this;\n\n        this._middlewares = [devtoolMiddleware].concat(middlewares);\n        this._needSnapshots = middlewares.some(function (m) {\n          return m.snapshot;\n        });\n        if (this._needSnapshots) {\n          console.log('[vuex] One or more of your middlewares are taking state snapshots ' + 'for each mutation. Make sure to use them only during development.');\n        }\n        var initialSnapshot = this._prevSnapshot = this._needSnapshots ? deepClone(state) : null;\n        // call init hooks\n        this._middlewares.forEach(function (m) {\n          if (m.onInit) {\n            m.onInit(m.snapshot ? initialSnapshot : state, _this5);\n          }\n        });\n      }\n    }, {\n      key: 'state',\n      get: function get() {\n        return this._vm._data;\n      },\n      set: function set(v) {\n        throw new Error('[vuex] Vuex root state is read only.');\n      }\n    }]);\n    return Store;\n  }();\n\n  function install(_Vue) {\n    Vue = _Vue;\n    override(Vue);\n  }\n\n  // auto install in dist mode\n  if (typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  function createLogger() {\n    console.warn('[vuex] Vuex.createLogger has been deprecated.' + 'Use `import createLogger from \\'vuex/logger\\' instead.');\n  }\n\n  var index = {\n    Store: Store,\n    install: install,\n    createLogger: createLogger\n  };\n\n  return index;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuex/dist/vuex.js\n ** module id = 8\n ** module chunks = 0\n **/","<template>\n    <div class=\"page-content-wrapper\">\n        <top></top>\n        <div class=\"page-content-outer\">\n            <div class=\"page-content-inner\">\n                <div class=\"page-content\">\n                    <breadcrumb :current-menu=\"currentMenu\"></breadcrumb>\n                    <div class=\"page-main\" id=\"manApp\">\n                        <router-view class=\"view\" transition=\"test\" transition-mode=\"out-in\" keep-alive></router-view>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script type=\"text/ecmascript-6\">\n    import Breadcrumb from '../../components/navs/breadcrumb.vue'\n    import {loadBreadCrumb} from '../../vuex/actions'\n    import Top from '../../components/navs/top.vue'\n    export default {\n        components: {\n            Top,\n            Breadcrumb\n        },\n        vuex: {\n            getters: {\n                currentMenu: ({breadcrumb})=> {\n//                    console.log(breadcrumb.breadcrumbInfo.currentMenu)\n                    return breadcrumb.breadcrumbInfo.currentMenu\n                }\n            },\n            actions:{\n                loadBreadCrumb\n            }\n        },\n        ready: function () {\n            console.log(this.$route.fullPath)\n            this.loadBreadCrumb( this.$route.fullPath)\n        }\n    }\n</script>\n\n\n/** WEBPACK FOOTER **\n ** Main.vue?050176cf\n **/","<template>\n    <div class=\"page-sidebar\">\n        <a href=\"index.html\" class=\"logo\"></a>\n        <ul class=\"nav\" id=\"nav\">\n            <li v-link=\"{path:nav.path,activeClass: 'open' ,exact: true }\" v-for=\"(inde2x,nav) in navList\" @click=\"changeBreadCrumb(nav.path)\">\n                <a href=\"{{nav.path}}\">\n                    <i class=\"gm-icon gm-peer-plan\"></i>\n                    <span>{{inde2x}}{{nav.navName}}</span>\n                    <span class=\"label label-info pull-right\" data-toggle=\"tooltip\" data-placement=\"right\" data-original-title=\"中文中文那种爱上空间等哈说肯定会阿卡还是啊\">3</span>\n                </a>\n            </li>\n        </ul>\n    </div>\n</template>\n<script type=\"text/ecmascript-6\">\n    import {loadNavList,loadBreadCrumb} from \"../../vuex/actions\"\n    export default {\n        vuex: {\n            getters: {\n                navList:({nav})=>nav.navList\n            },\n            actions:{\n                loadNavList,\n                loadBreadCrumb\n            }\n        },\n        created:function() {\n            var _self=this;\n            this.loadNavList()\n        },\n        methods:{\n            changeBreadCrumb: function (url) {\n                this.loadBreadCrumb(url)\n            }\n        }\n    }\n</script>\n\n\n/** WEBPACK FOOTER **\n ** Silder.vue?dd976822\n **/","<template>\n    <div class=\"page-title clearfix\" id=\"page-title-viewport\">\n        <div class=\"pull-left\">\n            <button type=\"button\" class=\"btn btn-default\" id=\"nav-button\"><i class=\"gm-icon gm-menu\"></i></button>\n            <h2>\n                供应商管理中心 - {{breadcrumbInfo.supplierName}}\n                {{ b | capitalize }}\n                <small>\n                    <template v-if=\"breadcrumbInfo.distributorInfo && breadcrumbInfo.distributorInfo!=''\">\n                        <i class=\"fa fa-retweet\"></i><a href=\"{{WEB_DISTRIBUTOR }}\">分销商管理中心</a>\n                    </template>\n                    <template v-if=\"breadcrumbInfo.supplierStaff && breadcrumbInfo.supplierStaff!='' && !breadcrumbInfo.supplierStaff.admin\">\n                        <i class=\"gm-icon gm-switch\"></i><a title=\"您已经是供应商员工，不能成为分销商\">分销商管理中心</a>\n                    </template>\n                    <template v-else>\n                        <i class=\"gm-icon gm-switch\"></i><a href=\"{{WEB_WWW}}/register-detail\">分销商管理中心</a>\n                    </template>\n                </small>\n            </h2>\n        </div>\n        <ul class=\"pull-right login-state\">\n            <li class=\"dropdown\" data-toggle=\"mouseenter\">\n                <div href=\"#\" class=\"dropdown-toggle\">\n                    <i class=\"gm-icon gm-user\"></i>\n                    {{breadcrumbInfo.userInfo && breadcrumbInfo.userInfo.phone}}\n                    <i class=\"fa fa-angle-down\"></i>\n                </div>\n                <ul class=\"dropdown-menu\">\n                    <li><a href=\"{{WEB_SUPPLIER }}\"><i class=\"gm-icon gm-supplier\"></i>供应商中心</a></li>\n                    <template v-if=\"breadcrumbInfo.distributorInfo && breadcrumbInfo.distributorInfo != ''\">\n                        <li><a href=\"{{WEB_DISTRIBUTOR }}\"><i class=\"gm-icon gm-distributor\"></i>分销商中心</a></li>\n                    </template>\n                    <template v-if=\"breadcrumbInfo.supplierStaff && breadcrumbInfo.supplierStaff!='' && !breadcrumbInfo.supplierStaff.admin\">\n                        <li><a style=\"color:#e6e6e6 !important;\" title=\"您已经是供应商员工，不能成为分销商\"><i class=\"gm-icon gm-distributor\"></i>分销商中心</a></li>\n                    </template>\n                    <template>\n                        <li><a href=\"{{WEB_WWW }}/register-detail\"><i class=\"gm-icon gm-distributor\"></i>申请分销商</a></li>\n                    </template>\n                    <li><a href=\"{{WEB_WWW }}/user/password\"><i class=\"gm-icon gm-modify-pwd\"></i>修改密码</a></li>\n                    <li role=\"separator\" class=\"divider\"></li>\n                    <li><a href=\"/logout\"><i class=\"gm-icon gm-logout\"></i>退出登录</a></li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n</template>\n<script type=\"text/ecmascript-6\">\n    import {loadBreadCrumb} from \"../../vuex/actions\"\n    export default{\n        vuex: {\n            getters: {\n                breadcrumbInfo: ({breadcrumb})=>{\n                    return breadcrumb.breadcrumbInfo\n                }\n            },\n            actions: {\n                loadBreadCrumb\n            }\n        },\n        created: function () {\n//            this.loadBreadCrumb()\n        },\n        computed: {\n            b: {\n//                get: ()=>{\n//                    console.log(444,this)\n//                    return Math.random()\n//                    },\n                get:  function () {\n                  //  return this.tt + Math.random()\n                },\n                set: function (newValue) {\n                  //  this.tt=newValue\n                }\n            }\n        }\n    }\n</script>\n\n\n/** WEBPACK FOOTER **\n ** top.vue?293c412c\n **/","<template>\n    <div class=\"page-wrapper\">\n        <silder>\n        </silder>\n        <main></main>\n    </div>\n</template>\n<script type=\"text/ecmascript-6\">\n    import Silder from './components/navs/Silder'\n    import Main from './components/container/Main.vue'\n    import store from './vuex/store'\n    export default {\n        store:store,\n        components: {\n            Silder,\n            Main\n        }\n    }\n</script>\n\n\n/** WEBPACK FOOTER **\n ** index.vue?4d5eb477\n **/","import * as actions from './vuex/actions'\nexport default function (router) {\n    router.map({\n        //'/': {\n        //    component: List\n        //},\n        '/mvvm': {\n            component: function (resolve) {\n                require(['./components/tables/list'], resolve);\n            }\n        },\n        '/mvvm/2': {\n            component: function (resolve) {\n                require(['./components/tables/list2'], resolve);\n            }\n        },\n        //'/about':\n    });\n\n    router.redirect({\n        \"*\":'/mvvm'\n    })\n    router.beforeEach(function (transition) {\n        // actions\n        console.log(\"*====\", transition)\n        // actions.loadBreadCrumb(transition.to.path)\n        // if (transition.to.path === '/forbidden') {\n        //     transition.abort()\n        // } else {\n            transition.next()\n        // }\n    })\n}\n\n\n\n/** WEBPACK FOOTER **\n ** E:/wk11/static/oldVersion/mvvm/supplier/src/router.js\n **/","import {LOAD_BREADCRUMB} from '../mutation-types'\nconst state = {\n    breadcrumbInfo: {}\n}\nconst mutations = {\n    [LOAD_BREADCRUMB](state, breadcrumbInfo){\n        state.breadcrumbInfo = breadcrumbInfo\n    }\n}\nexport default{\n    state,\n    mutations\n}\n\n\n/** WEBPACK FOOTER **\n ** E:/wk11/static/oldVersion/mvvm/supplier/src/vuex/modules/breadcrumb.js\n **/","import {LOAD_NAV_LIST} from '../mutation-types'\nconst state = {\n    navList: []\n}\nconst mutations = {\n    [LOAD_NAV_LIST](state, list){\n        state.navList = list\n    }\n}\nexport default{\n    state,\n    mutations\n}\n\n\n/** WEBPACK FOOTER **\n ** E:/wk11/static/oldVersion/mvvm/supplier/src/vuex/modules/nav.js\n **/","\nimport Vue from \"vue\"\nimport Vuex from \"vuex\"\nimport nav from './modules/nav'\nimport breadcrumb from './modules/breadcrumb'\nVue.use(Vuex)\nexport default new Vuex.Store({\n    modules:{\n        nav,\n        breadcrumb\n    },\n    strict: process.env.NODE_ENV !== 'production'\n})\n\n\n/** WEBPACK FOOTER **\n ** E:/wk11/static/oldVersion/mvvm/supplier/src/vuex/store.js\n **/","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/object/define-property.js\n ** module id = 21\n ** module chunks = 0\n **/","var $ = require('../../modules/$');\nmodule.exports = function defineProperty(it, key, desc){\n  return $.setDesc(it, key, desc);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/fn/object/define-property.js\n ** module id = 22\n ** module chunks = 0\n **/","var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.js\n ** module id = 23\n ** module chunks = 0\n **/","module.exports = \"<div class=page-content-wrapper><top></top><div class=page-content-outer><div class=page-content-inner><div class=page-content><breadcrumb :current-menu=currentMenu></breadcrumb><div class=page-main id=manApp><router-view class=view transition=test transition-mode=out-in keep-alive></router-view></div></div></div></div></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./oldVersion/mvvm/supplier/src/components/container/Main.vue\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = \"<div class=page-sidebar><a href=index.html class=logo></a><ul class=nav id=nav><li v-link=\\\"{path:nav.path,activeClass: 'open' ,exact: true }\\\" v-for=\\\"(inde2x,nav) in navList\\\" @click=changeBreadCrumb(nav.path)><a href={{nav.path}}><i class=\\\"gm-icon gm-peer-plan\\\"></i> <span>{{inde2x}}{{nav.navName}}</span> <span class=\\\"label label-info pull-right\\\" data-toggle=tooltip data-placement=right data-original-title=中文中文那种爱上空间等哈说肯定会阿卡还是啊>3</span></a></li></ul></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./oldVersion/mvvm/supplier/src/components/navs/Silder.vue\n ** module id = 28\n ** module chunks = 0\n **/","module.exports = \"<div class=sub-title><h2 v-if=currentMenu>{{currentChildMenu ?currentChildMenu : currentMenu}}</h2><h2 v-else>供应商中心</h2><ol class=breadcrumb><li><a href=\\\"{{WEB_WWW }}\\\">首页</a></li><li><a href=\\\"{{WEB_SUPPLIER }}\\\">供应商中心</a></li><template v-if=\\\"currentMenu && currentChildMenu\\\"><li>{{currentMenu }}</li><li class=active>{{currentChildMenu }}</li></template><template v-else><li class=active>{{currentMenu }}</li></template></ol><div class=page-tool><button class=\\\"btn btn-default\\\" type=button onclick=history.go(-1)><i class=\\\"gm-icon gm-back\\\"></i>返回</button> <button class=\\\"btn btn-default\\\" type=button onclick=location.reload()><i class=\\\"gm-icon gm-refresh\\\"></i> 刷新</button></div></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./oldVersion/mvvm/supplier/src/components/navs/breadcrumb.vue\n ** module id = 29\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"page-title clearfix\\\" id=page-title-viewport><div class=pull-left><button type=button class=\\\"btn btn-default\\\" id=nav-button><i class=\\\"gm-icon gm-menu\\\"></i></button><h2>供应商管理中心 - {{breadcrumbInfo.supplierName}} {{ b | capitalize }} <small><template v-if=\\\"breadcrumbInfo.distributorInfo && breadcrumbInfo.distributorInfo!=''\\\"><i class=\\\"fa fa-retweet\\\"></i><a href=\\\"{{WEB_DISTRIBUTOR }}\\\">分销商管理中心</a></template><template v-if=\\\"breadcrumbInfo.supplierStaff && breadcrumbInfo.supplierStaff!='' && !breadcrumbInfo.supplierStaff.admin\\\"><i class=\\\"gm-icon gm-switch\\\"></i><a title=您已经是供应商员工，不能成为分销商>分销商管理中心</a></template><template v-else><i class=\\\"gm-icon gm-switch\\\"></i><a href={{WEB_WWW}}/register-detail>分销商管理中心</a></template></small></h2></div><ul class=\\\"pull-right login-state\\\"><li class=dropdown data-toggle=mouseenter><div href=# class=dropdown-toggle><i class=\\\"gm-icon gm-user\\\"></i> {{breadcrumbInfo.userInfo && breadcrumbInfo.userInfo.phone}} <i class=\\\"fa fa-angle-down\\\"></i></div><ul class=dropdown-menu><li><a href=\\\"{{WEB_SUPPLIER }}\\\"><i class=\\\"gm-icon gm-supplier\\\"></i>供应商中心</a></li><template v-if=\\\"breadcrumbInfo.distributorInfo && breadcrumbInfo.distributorInfo != ''\\\"><li><a href=\\\"{{WEB_DISTRIBUTOR }}\\\"><i class=\\\"gm-icon gm-distributor\\\"></i>分销商中心</a></li></template><template v-if=\\\"breadcrumbInfo.supplierStaff && breadcrumbInfo.supplierStaff!='' && !breadcrumbInfo.supplierStaff.admin\\\"><li><a style=\\\"color:#e6e6e6 !important\\\" title=您已经是供应商员工，不能成为分销商><i class=\\\"gm-icon gm-distributor\\\"></i>分销商中心</a></li></template><template><li><a href=\\\"{{WEB_WWW }}/register-detail\\\"><i class=\\\"gm-icon gm-distributor\\\"></i>申请分销商</a></li></template><li><a href=\\\"{{WEB_WWW }}/user/password\\\"><i class=\\\"gm-icon gm-modify-pwd\\\"></i>修改密码</a></li><li role=separator class=divider></li><li><a href=/logout><i class=\\\"gm-icon gm-logout\\\"></i>退出登录</a></li></ul></li></ul></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./oldVersion/mvvm/supplier/src/components/navs/top.vue\n ** module id = 30\n ** module chunks = 0\n **/","module.exports = \"<div class=page-wrapper><silder></silder><main></main></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./oldVersion/mvvm/supplier/src/index.vue\n ** module id = 33\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"-!babel!./../../../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Main.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Main.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"E:\\\\wk11\\\\static\\\\oldVersion\\\\mvvm\\\\supplier\\\\src\\\\components\\\\container\\\\Main.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./oldVersion/mvvm/supplier/src/components/container/Main.vue\n ** module id = 34\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"-!babel!./../../../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Silder.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Silder.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"E:\\\\wk11\\\\static\\\\oldVersion\\\\mvvm\\\\supplier\\\\src\\\\components\\\\navs\\\\Silder.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./oldVersion/mvvm/supplier/src/components/navs/Silder.vue\n ** module id = 35\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"-!babel!./../../../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./breadcrumb.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./breadcrumb.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"E:\\\\wk11\\\\static\\\\oldVersion\\\\mvvm\\\\supplier\\\\src\\\\components\\\\navs\\\\breadcrumb.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./oldVersion/mvvm/supplier/src/components/navs/breadcrumb.vue\n ** module id = 36\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"-!babel!./../../../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./top.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./top.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"E:\\\\wk11\\\\static\\\\oldVersion\\\\mvvm\\\\supplier\\\\src\\\\components\\\\navs\\\\top.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./oldVersion/mvvm/supplier/src/components/navs/top.vue\n ** module id = 37\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"-!babel!./../../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./index.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./index.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"E:\\\\wk11\\\\static\\\\oldVersion\\\\mvvm\\\\supplier\\\\src\\\\index.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./oldVersion/mvvm/supplier/src/index.vue\n ** module id = 40\n ** module chunks = 0\n **/","/**\n * Before Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (_.isFunction(request.beforeSend)) {\n            request.beforeSend.call(this, request);\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/before.js\n ** module id = 41\n ** module chunks = 0\n **/","/**\n * Base client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\nvar xhrClient = require('./xhr');\n\nmodule.exports = function (request) {\n\n    var response = (request.client || xhrClient)(request);\n\n    return Promise.resolve(response).then(function (response) {\n\n        if (response.headers) {\n\n            var headers = parseHeaders(response.headers);\n\n            response.headers = function (name) {\n\n                if (name) {\n                    return headers[_.toLower(name)];\n                }\n\n                return headers;\n            };\n\n        }\n\n        response.ok = response.status >= 200 && response.status < 300;\n\n        return response;\n    });\n\n};\n\nfunction parseHeaders(str) {\n\n    var headers = {}, value, name, i;\n\n    if (_.isString(str)) {\n        _.each(str.split('\\n'), function (row) {\n\n            i = row.indexOf(':');\n            name = _.trim(_.toLower(row.slice(0, i)));\n            value = _.trim(row.slice(i + 1));\n\n            if (headers[name]) {\n\n                if (_.isArray(headers[name])) {\n                    headers[name].push(value);\n                } else {\n                    headers[name] = [headers[name], value];\n                }\n\n            } else {\n\n                headers[name] = value;\n            }\n\n        });\n    }\n\n    return headers;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/index.js\n ** module id = 42\n ** module chunks = 0\n **/","/**\n * JSONP client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var callback = '_jsonp' + Math.random().toString(36).substr(2), response = {request: request, data: null}, handler, script;\n\n        request.params[request.jsonp] = callback;\n        request.cancel = function () {\n            handler({type: 'cancel'});\n        };\n\n        script = document.createElement('script');\n        script.src = _.url(request);\n        script.type = 'text/javascript';\n        script.async = true;\n\n        window[callback] = function (data) {\n            response.data = data;\n        };\n\n        handler = function (event) {\n\n            if (event.type === 'load' && response.data !== null) {\n                response.status = 200;\n            } else if (event.type === 'error') {\n                response.status = 404;\n            } else {\n                response.status = 0;\n            }\n\n            resolve(response);\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/jsonp.js\n ** module id = 43\n ** module chunks = 0\n **/","/**\n * XDomain client (Internet Explorer).\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var xdr = new XDomainRequest(), response = {request: request}, handler;\n\n        request.cancel = function () {\n            xdr.abort();\n        };\n\n        xdr.open(request.method, _.url(request), true);\n\n        handler = function (event) {\n\n            response.data = xdr.responseText;\n            response.status = xdr.status;\n            response.statusText = xdr.statusText;\n\n            resolve(response);\n        };\n\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n\n        xdr.send(request.data);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/xdr.js\n ** module id = 44\n ** module chunks = 0\n **/","/**\n * XMLHttp client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var xhr = new XMLHttpRequest(), response = {request: request}, handler;\n\n        request.cancel = function () {\n            xhr.abort();\n        };\n\n        xhr.open(request.method, _.url(request), true);\n\n        handler = function (event) {\n\n            response.data = xhr.responseText;\n            response.status = xhr.status;\n            response.statusText = xhr.statusText;\n            response.headers = xhr.getAllResponseHeaders();\n\n            resolve(response);\n        };\n\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = function () {};\n        xhr.onprogress = function () {};\n\n        if (_.isPlainObject(request.xhr)) {\n            _.extend(xhr, request.xhr);\n        }\n\n        if (_.isPlainObject(request.upload)) {\n            _.extend(xhr.upload, request.upload);\n        }\n\n        _.each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.data);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/xhr.js\n ** module id = 45\n ** module chunks = 0\n **/","/**\n * CORS Interceptor.\n */\n\nvar _ = require('../util');\nvar xdrClient = require('./client/xdr');\nvar xhrCors = 'withCredentials' in new XMLHttpRequest();\nvar originUrl = _.url.parse(location.href);\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.crossOrigin === null) {\n            request.crossOrigin = crossOrigin(request);\n        }\n\n        if (request.crossOrigin) {\n\n            if (!xhrCors) {\n                request.client = xdrClient;\n            }\n\n            request.emulateHTTP = false;\n        }\n\n        return request;\n    }\n\n};\n\nfunction crossOrigin(request) {\n\n    var requestUrl = _.url.parse(_.url(request));\n\n    return (requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/cors.js\n ** module id = 46\n ** module chunks = 0\n **/","/**\n * Header Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        request.method = request.method.toUpperCase();\n        request.headers = _.extend({}, _.http.headers.common,\n            !request.crossOrigin ? _.http.headers.custom : {},\n            _.http.headers[request.method.toLowerCase()],\n            request.headers\n        );\n\n        if (_.isPlainObject(request.data) && /^(GET|JSONP)$/i.test(request.method)) {\n            _.extend(request.params, request.data);\n            delete request.data;\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/header.js\n ** module id = 47\n ** module chunks = 0\n **/","/**\n * Service for sending network requests.\n */\n\nvar _ = require('../util');\nvar Client = require('./client');\nvar Promise = require('../promise');\nvar interceptor = require('./interceptor');\nvar jsonType = {'Content-Type': 'application/json'};\n\nfunction Http(url, options) {\n\n    var client = Client, request, promise;\n\n    Http.interceptors.forEach(function (handler) {\n        client = interceptor(handler, this.$vm)(client);\n    }, this);\n\n    options = _.isObject(url) ? url : _.extend({url: url}, options);\n    request = _.merge({}, Http.options, this.$options, options);\n    promise = client(request).bind(this.$vm).then(function (response) {\n\n        return response.ok ? response : Promise.reject(response);\n\n    }, function (response) {\n\n        if (response instanceof Error) {\n            _.error(response);\n        }\n\n        return Promise.reject(response);\n    });\n\n    if (request.success) {\n        promise.success(request.success);\n    }\n\n    if (request.error) {\n        promise.error(request.error);\n    }\n\n    return promise;\n}\n\nHttp.options = {\n    method: 'get',\n    data: '',\n    params: {},\n    headers: {},\n    xhr: null,\n    upload: null,\n    jsonp: 'callback',\n    beforeSend: null,\n    crossOrigin: null,\n    emulateHTTP: false,\n    emulateJSON: false,\n    timeout: 0\n};\n\nHttp.interceptors = [\n    require('./before'),\n    require('./timeout'),\n    require('./jsonp'),\n    require('./method'),\n    require('./mime'),\n    require('./header'),\n    require('./cors')\n];\n\nHttp.headers = {\n    put: jsonType,\n    post: jsonType,\n    patch: jsonType,\n    delete: jsonType,\n    common: {'Accept': 'application/json, text/plain, */*'},\n    custom: {'X-Requested-With': 'XMLHttpRequest'}\n};\n\n['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, data, success, options) {\n\n        if (_.isFunction(data)) {\n            options = success;\n            success = data;\n            data = undefined;\n        }\n\n        if (_.isObject(success)) {\n            options = success;\n            success = undefined;\n        }\n\n        return this(url, _.extend({method: method, data: data, success: success}, options));\n    };\n});\n\nmodule.exports = _.http = Http;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/index.js\n ** module id = 48\n ** module chunks = 0\n **/","/**\n * Interceptor factory.\n */\n\nvar _ = require('../util');\nvar Promise = require('../promise');\n\nmodule.exports = function (handler, vm) {\n\n    return function (client) {\n\n        if (_.isFunction(handler)) {\n            handler = handler.call(vm, Promise);\n        }\n\n        return function (request) {\n\n            if (_.isFunction(handler.request)) {\n                request = handler.request.call(vm, request);\n            }\n\n            return when(request, function (request) {\n                return when(client(request), function (response) {\n\n                    if (_.isFunction(handler.response)) {\n                        response = handler.response.call(vm, response);\n                    }\n\n                    return response;\n                });\n            });\n        };\n    };\n};\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/interceptor.js\n ** module id = 49\n ** module chunks = 0\n **/","/**\n * JSONP Interceptor.\n */\n\nvar jsonpClient = require('./client/jsonp');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.method == 'JSONP') {\n            request.client = jsonpClient;\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/jsonp.js\n ** module id = 50\n ** module chunks = 0\n **/","/**\n * HTTP method override Interceptor.\n */\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n            request.headers['X-HTTP-Method-Override'] = request.method;\n            request.method = 'POST';\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/method.js\n ** module id = 51\n ** module chunks = 0\n **/","/**\n * Mime Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.emulateJSON && _.isPlainObject(request.data)) {\n            request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n            request.data = _.url.params(request.data);\n        }\n\n        if (_.isObject(request.data) && /FormData/i.test(request.data.toString())) {\n            delete request.headers['Content-Type'];\n        }\n\n        if (_.isPlainObject(request.data)) {\n            request.data = JSON.stringify(request.data);\n        }\n\n        return request;\n    },\n\n    response: function (response) {\n\n        try {\n            response.data = JSON.parse(response.data);\n        } catch (e) {}\n\n        return response;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/mime.js\n ** module id = 52\n ** module chunks = 0\n **/","/**\n * Timeout Interceptor.\n */\n\nmodule.exports = function () {\n\n    var timeout;\n\n    return {\n\n        request: function (request) {\n\n            if (request.timeout) {\n                timeout = setTimeout(function () {\n                    request.cancel();\n                }, request.timeout);\n            }\n\n            return request;\n        },\n\n        response: function (response) {\n\n            clearTimeout(timeout);\n\n            return response;\n        }\n\n    };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/timeout.js\n ** module id = 53\n ** module chunks = 0\n **/","/**\n * Install plugin.\n */\n\nfunction install(Vue) {\n\n    var _ = require('./util');\n\n    _.config = Vue.config;\n    _.warning = Vue.util.warn;\n    _.nextTick = Vue.util.nextTick;\n\n    Vue.url = require('./url');\n    Vue.http = require('./http');\n    Vue.resource = require('./resource');\n    Vue.Promise = require('./promise');\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return _.options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return _.options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                return function (executor) {\n                    return new Vue.Promise(executor, this);\n                }.bind(this);\n            }\n        }\n\n    });\n}\n\nif (window.Vue) {\n    Vue.use(install);\n}\n\nmodule.exports = install;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/index.js\n ** module id = 54\n ** module chunks = 0\n **/","/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar _ = require('../util');\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nfunction Promise(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise.reject = function (r) {\n    return new Promise(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise.resolve = function (x) {\n    return new Promise(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise.all = function all(iterable) {\n    return new Promise(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise.race = function race(iterable) {\n    return new Promise(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p = Promise.prototype;\n\np.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np.notify = function notify() {\n    var promise = this;\n\n    _.nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nmodule.exports = Promise;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/lib/promise.js\n ** module id = 55\n ** module chunks = 0\n **/","/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nexports.expand = function (url, params, variables) {\n\n    var tmpl = this.parse(url), expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n};\n\nexports.parse = function (template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null, values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n\n                } else {\n                    return exports.encodeReserved(literal);\n                }\n            });\n        }\n    };\n};\n\nexports.getValues = function (context, operator, key, modifier) {\n\n    var value = context[key], result = [];\n\n    if (this.isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(this.isDefined).forEach(function (value) {\n                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n                    }, this);\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (this.isDefined(value[k])) {\n                            result.push(this.encodeValue(operator, value[k], k));\n                        }\n                    }, this);\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(this.isDefined).forEach(function (value) {\n                        tmp.push(this.encodeValue(operator, value));\n                    }, this);\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (this.isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(this.encodeValue(operator, value[k].toString()));\n                        }\n                    }, this);\n                }\n\n                if (this.isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n};\n\nexports.isDefined = function (value) {\n    return value !== undefined && value !== null;\n};\n\nexports.isKeyOperator = function (operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n};\n\nexports.encodeValue = function (operator, value, key) {\n\n    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n};\n\nexports.encodeReserved = function (str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/lib/url-template.js\n ** module id = 56\n ** module chunks = 0\n **/","/**\n * Service for interacting with RESTful services.\n */\n\nvar _ = require('./util');\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this, resource = {};\n\n    actions = _.extend({},\n        Resource.actions,\n        actions\n    );\n\n    _.each(actions, function (action, name) {\n\n        action = _.merge({url: url, params: params || {}}, options, action);\n\n        resource[name] = function () {\n            return (self.$http || _.http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = _.extend({}, action), params = {}, data, success, error;\n\n    switch (args.length) {\n\n        case 4:\n\n            error = args[3];\n            success = args[2];\n\n        case 3:\n        case 2:\n\n            if (_.isFunction(args[1])) {\n\n                if (_.isFunction(args[0])) {\n\n                    success = args[0];\n                    error = args[1];\n\n                    break;\n                }\n\n                success = args[1];\n                error = args[2];\n\n            } else {\n\n                params = args[0];\n                data = args[1];\n                success = args[2];\n\n                break;\n            }\n\n        case 1:\n\n            if (_.isFunction(args[0])) {\n                success = args[0];\n            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                data = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n    }\n\n    options.data = data;\n    options.params = _.extend({}, options.params, params);\n\n    if (success) {\n        options.success = success;\n    }\n\n    if (error) {\n        options.error = error;\n    }\n\n    return options;\n}\n\nResource.actions = {\n\n    get: {method: 'GET'},\n    save: {method: 'POST'},\n    query: {method: 'GET'},\n    update: {method: 'PUT'},\n    remove: {method: 'DELETE'},\n    delete: {method: 'DELETE'}\n\n};\n\nmodule.exports = _.resource = Resource;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/resource.js\n ** module id = 57\n ** module chunks = 0\n **/","/**\n * Service for URL templating.\n */\n\nvar _ = require('../util');\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var options = url, transform;\n\n    if (_.isString(url)) {\n        options = {url: url, params: params};\n    }\n\n    options = _.merge({}, Url.options, this.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, this.$vm);\n    }, this);\n\n    return transform(options);\n};\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [\n    require('./template'),\n    require('./legacy'),\n    require('./query'),\n    require('./root')\n];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [], escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (_.isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = _.isArray(obj), plain = _.isPlainObject(obj), hash;\n\n    _.each(obj, function (value, key) {\n\n        hash = _.isObject(value) || _.isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nmodule.exports = _.url = Url;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/index.js\n ** module id = 58\n ** module chunks = 0\n **/","/**\n * Legacy Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var variables = [], url = next(options);\n\n    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\n        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\n        if (options.params[name]) {\n            variables.push(name);\n            return slash + encodeUriSegment(options.params[name]);\n        }\n\n        return '';\n    });\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\nfunction encodeUriSegment(value) {\n\n    return encodeUriQuery(value, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n}\n\nfunction encodeUriQuery(value, spaces) {\n\n    return encodeURIComponent(value).\n        replace(/%40/gi, '@').\n        replace(/%3A/gi, ':').\n        replace(/%24/g, '$').\n        replace(/%2C/gi, ',').\n        replace(/%20/g, (spaces ? '%20' : '+'));\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/legacy.js\n ** module id = 59\n ** module chunks = 0\n **/","/**\n * Query Parameter Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var urlParams = Object.keys(_.url.options.params), query = {}, url = next(options);\n\n   _.each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = _.url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/query.js\n ** module id = 60\n ** module chunks = 0\n **/","/**\n * Root Prefix Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var url = next(options);\n\n    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/root.js\n ** module id = 61\n ** module chunks = 0\n **/","/**\n * URL Template (RFC 6570) Transform.\n */\n\nvar UrlTemplate = require('../lib/url-template');\n\nmodule.exports = function (options) {\n\n    var variables = [], url = UrlTemplate.expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/template.js\n ** module id = 62\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.11\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return decodeURIComponent(part);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path) {\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        queryParams = this.parseQueryString(queryString);\n      }\n\n      path = decodeURI(path);\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  RouteRecognizer.VERSION = '0.1.9';\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn(msg) {\n    /* istanbul ignore next */\n    if (window.console) {\n      console.warn('[vue-router] ' + msg);\n      if (!exports$1.Vue || exports$1.Vue.config.debug) {\n        console.warn(new Error('warning stack trace:').stack);\n      }\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root) {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = decodeURI(location.pathname + location.search);\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(decodeURI(path.replace(/^#!?/, '') + query));\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    this.router = router;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    Vue.directive('link-active', {\n      priority: 1001,\n      bind: function bind() {\n        this.el.__v_link_active = true;\n      }\n    });\n\n    Vue.directive('link', {\n      priority: 1000,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check if active classes should be applied to a different element\n        this.activeEl = this.el;\n        var parent = this.el.parentNode;\n        while (parent) {\n          if (parent.__v_link_active) {\n            this.activeEl = parent;\n            break;\n          }\n          parent = parent.parentNode;\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            this.router.go({\n              path: el.pathname,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router._stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router._stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        this.updateClasses(route.path);\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path) {\n        var el = this.activeEl;\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass !== activeClass) {\n          removeClass(el, this.prevActiveClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            addClass(el, activeClass);\n          } else {\n            removeClass(el, activeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            addClass(el, activeClass);\n          } else {\n            removeClass(el, activeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this._stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype._stringifyPath = function _stringifyPath(path) {\n      var fullPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          if (path.query) {\n            params.queryParams = path.query;\n          }\n          fullPath = this._recognizer.generate(path.name, params);\n        } else if (path.path) {\n          fullPath = path.path;\n          if (path.query) {\n            var query = this._recognizer.generateQueryString(path.query);\n            if (fullPath.indexOf('?') > -1) {\n              fullPath += '&' + query.slice(1);\n            } else {\n              fullPath += query;\n            }\n          }\n        }\n      } else {\n        fullPath = path ? path + '' : '';\n      }\n      return encodeURI(fullPath);\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 63\n ** module chunks = 0\n **/"],"sourceRoot":""}